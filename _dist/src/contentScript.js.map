{
  "version": 3,
  "sources": ["../../src/contentScript.ts", "../../src/utils/strings.ts"],
  "sourcesContent": ["import { BackgroundResponse, VitePassportMethodCall } from './injectedScript';\nimport { prefixName } from './utils/strings';\nimport { PortEvent, PortMessage } from './utils/types';\n\n// console.log('content');\n\n// OPTIMIZE: chrome.scripting.executeScript https://developer.chrome.com/docs/extensions/reference/scripting/#method-executeScript\n\nconst scriptTag = document.createElement('script');\nscriptTag.src = chrome.runtime.getURL('src/injectedScript.js'); // made available via web_accessible_resources in manifest.json\ndocument.documentElement.appendChild(scriptTag);\nscriptTag.remove();\n\nwindow.addEventListener('vitePassportMethodCalled', ((\n\tevent: CustomEvent<VitePassportMethodCall>\n) => {\n\t// sendMessage to background.ts\n\tchrome.runtime.sendMessage(\n\t\tevent.detail,\n\t\t// response from background.ts\n\t\t(response: Omit<BackgroundResponse, '_messageId'>) => {\n\t\t\twindow.postMessage({\n\t\t\t\t...response,\n\t\t\t\t_messageId: event.detail._messageId,\n\t\t\t} as BackgroundResponse);\n\t\t}\n\t);\n}) as EventListener); // https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n\n// addEventListener('message', (e) => {\n// \tconsole.log('e:', e);\n// });\n\n// const chromePort = chrome.runtime.connect();\n// chrome.runtime.onConnect.addListener((chromePort) => {\n// \tconsole.log('chromePort:', chromePort);\n// });\n// console.log('chromePort:', chromePort);\n\nchrome.runtime.onMessage.addListener(\n\t// (message: PortEvent, sender, reply: () => void) => {\n\t(message: PortEvent) => {\n\t\tdispatchEvent(\n\t\t\tnew CustomEvent(prefixName(message.type), {\n\t\t\t\tdetail: message.payload,\n\t\t\t})\n\t\t);\n\t}\n);\n\nexport {};\n", "export const shortenString = (str: string, startCount = 8, endCount = 5) =>\n\tstr.slice(0, startCount) + '...' + str.slice(-endCount);\nexport const shortenAddress = (address: string) => shortenString(address, 8, 5);\nexport const shortenHash = (hash: string) => shortenString(hash, 5, 5);\nexport const shortenTti = (hash: string) => shortenString(hash, 7, 5);\n\n// https://www.30secondsofcode.org/js/s/copy-to-clipboard-async?from=autocomplete\nexport const copyToClipboardAsync = (str = '') => {\n\tif (navigator && navigator.clipboard && navigator.clipboard.writeText)\n\t\treturn navigator.clipboard.writeText(str);\n\treturn window.alert('The Clipboard API is not available.');\n};\n\nexport const toBiggestUnit = (num: string, decimals = 0) => {\n\t// Assume num is a unsigned integer (i.e. positive with no decimals) and decimals is > 0\n\tnum = `${num.substring(0, num.length - decimals) || 0}.${'0'.repeat(\n\t\tMath.max(0, decimals - num.length)\n\t)}${num.substring(Math.max(0, num.length - decimals))}`;\n\treturn num.replace(/(0+|\\.0+|\\.)$/, '');\n};\n\nexport const toSmallestUnit = (num: string, decimals = 0) => {\n\t// Assume num is a positive number and decimals is > 0\n\tconst indexOfDot = num.indexOf('.');\n\tif (indexOfDot === -1) {\n\t\treturn num + '0'.repeat(decimals);\n\t}\n\tconst decimalPlaces = num.length - indexOfDot - 1;\n\treturn (num.substring(indexOfDot + 1) + '0'.repeat(decimals - decimalPlaces)).replace(/^0+/g, '');\n};\n\nexport const roundDownTo6Decimals = (balance: string) =>\n\tMath.floor(+balance * 1000000) / 1000000 + '';\n\n// These don't check for what comes after the protocol\nexport const validateWsUrl = (v = '') => /^(ws:\\/\\/|wss:\\/\\/)/.test(v);\nexport const validateHttpUrl = (v = '') => /^(http:\\/\\/|https:\\/\\/)/.test(v);\n\n// https://howchoo.com/javascript/how-to-turn-an-object-into-query-string-parameters-in-javascript\nexport const toQueryString = (params: { [key: string]: any }) =>\n\t'?' +\n\tObject.keys(params)\n\t\t.filter((key) => !!params[key])\n\t\t.map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n\t\t.join('&');\n\nexport const getHostname = (url = '') => {\n\tif (!url.startsWith('http')) {\n\t\treturn '';\n\t}\n\treturn new URL(url).hostname;\n};\n\nexport const parseQueryString = (urlSearchParams: string): { [key: string]: string } => {\n\tif (urlSearchParams[0] !== '?') {\n\t\tthrow new Error('urlSearchParams must start with \"?\"');\n\t}\n\tconst split = urlSearchParams.slice(1).split('&');\n\treturn split\n\t\t.map((p) => p.split('='))\n\t\t.reduce((obj, pair) => {\n\t\t\tconst [key, value] = pair.map(decodeURIComponent);\n\t\t\tif (key) {\n\t\t\t\treturn { ...obj, [key]: value };\n\t\t\t}\n\t\t\treturn obj;\n\t\t}, {});\n};\n\nexport const addIndexToTokenSymbol = (symbol: string, index: null | number) => {\n\tif (symbol === 'VITE' || symbol === 'VX' || symbol === 'VCP' || index == null) {\n\t\treturn symbol;\n\t}\n\treturn `${symbol}-${('' + index).padStart(3, '0')}`;\n};\n\n// https://stackoverflow.com/a/4149393/4975090\n// export const reverseCamelCase = (str = '') =>\n// \tstr.replace(/([A-Z])/g, ' $1').replace(/^./, (str) => {\n// \t\treturn str.toUpperCase();\n// \t});\n\nexport const makeReadable = (err: any) =>\n\terr.toString() === '[object Object]' ? JSON.stringify(err) : err.toString();\n\nexport const joinWords = (arr: string[], conjunction = 'or') => {\n\tconst listStart = arr.slice(0, -1).join(', ');\n\tconst listEnd = arr.slice(-1);\n\treturn [listStart, listEnd].join(\n\t\tarr.length <= 1 ? '' : arr.length > 2 ? `, ${conjunction} ` : ` ${conjunction} `\n\t);\n};\n\n// This is to avoid custom event naming collisions\nexport const prefixName = (str: string) => 'vitePassport' + str[0].toUpperCase() + str.substring(1);\n"],
  "mappings": "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",
  "names": []
}

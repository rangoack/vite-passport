"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports, module2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function(publicInstance) {
            return false;
          },
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            self2 = config.__self === void 0 ? null : config.__self;
            source = config.__source === void 0 ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          if (element === null || element === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
          }
          var propName;
          var props = assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape2(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape2("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(mappedChild, escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = String(children);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result2 = [];
          var count = 0;
          mapIntoArray(children, result2, "", "", function(child) {
            return func.call(context, child, count++);
          });
          return result2;
        }
        function countChildren(children) {
          var n = 0;
          mapChildren(children, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children;
        }
        function createContext(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null,
            _defaultValue: null,
            _globalName: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = moduleObject2;
              }
            }, function(error2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error2;
              }
            });
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            _status: Uninitialized,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!render.name && !render.displayName) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!type.name && !type.displayName) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module2 && module2[requireString];
              enqueueTaskImpl = nodeRequire.call(module2, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result2;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result2 = callback();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error2) {
              popActScope(prevActScopeDepth);
              throw error2;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result2 !== null && typeof result2 === "object" && typeof result2.then === "function") {
              var thenableResult = result2;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error2) {
                    popActScope(prevActScopeDepth);
                    reject(error2);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result2;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error2) {
                reject(error2);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i = 0;
              try {
                for (; i < queue.length; i++) {
                  var callback = queue[i];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error2) {
                queue = queue.slice(i + 1);
                throw error2;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild
        };
        exports.Children = Children;
        exports.Component = Component;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.Profiler = REACT_PROFILER_TYPE;
        exports.PureComponent = PureComponent;
        exports.StrictMode = REACT_STRICT_MODE_TYPE;
        exports.Suspense = REACT_SUSPENSE_TYPE;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef;
        exports.forwardRef = forwardRef;
        exports.isValidElement = isValidElement;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.startTransition = startTransition;
        exports.unstable_act = act;
        exports.useCallback = useCallback;
        exports.useContext = useContext;
        exports.useDebugValue = useDebugValue;
        exports.useDeferredValue = useDeferredValue;
        exports.useEffect = useEffect;
        exports.useId = useId;
        exports.useImperativeHandle = useImperativeHandle;
        exports.useInsertionEffect = useInsertionEffect;
        exports.useLayoutEffect = useLayoutEffect;
        exports.useMemo = useMemo;
        exports.useReducer = useReducer;
        exports.useRef = useRef;
        exports.useState = useState;
        exports.useSyncExternalStore = useSyncExternalStore;
        exports.useTransition = useTransition;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
              priorityLevel = NormalPriority;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority:
            default:
              timeout = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_scheduler_development();
    }
  }
});

// node_modules/react-dom/cjs/react-dom.development.js
var require_react_dom_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React2 = require_react();
        var Scheduler = require_scheduler();
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        var suppressWarning = false;
        function setSuppressWarning(newSuppressWarning) {
          {
            suppressWarning = newSuppressWarning;
          }
        }
        function warn(format) {
          {
            if (!suppressWarning) {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error(format) {
          {
            if (!suppressWarning) {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var DehydratedFragment = 18;
        var SuspenseListComponent = 19;
        var ScopeComponent = 21;
        var OffscreenComponent = 22;
        var LegacyHiddenComponent = 23;
        var CacheComponent = 24;
        var TracingMarkerComponent = 25;
        var enableClientRenderFallbackOnTextMismatch = true;
        var enableNewReconciler = false;
        var enableLazyContextPropagation = false;
        var enableLegacyHidden = false;
        var enableSuspenseAvoidThisFallback = false;
        var disableCommentsAsDOMContainers = true;
        var enableCustomElementPropertySupport = false;
        var warnAboutStringRefs = false;
        var enableSchedulingProfiler = true;
        var enableProfilerTimer = true;
        var enableProfilerCommitHooks = true;
        var allNativeEvents = /* @__PURE__ */ new Set();
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function registerTwoPhaseEvent(registrationName, dependencies) {
          registerDirectEvent(registrationName, dependencies);
          registerDirectEvent(registrationName + "Capture", dependencies);
        }
        function registerDirectEvent(registrationName, dependencies) {
          {
            if (registrationNameDependencies[registrationName]) {
              error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
            }
          }
          registrationNameDependencies[registrationName] = dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === "onDoubleClick") {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
          for (var i = 0; i < dependencies.length; i++) {
            allNativeEvents.add(dependencies[i]);
          }
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkPropStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkFormFieldValueStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
        });
        [
          "allowFullScreen",
          "async",
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
        });
        [
          "checked",
          "multiple",
          "muted",
          "selected"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
        });
        [
          "capture",
          "download"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
        });
        [
          "cols",
          "rows",
          "size",
          "span"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        function getValueForProperty(node, name, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node[propertyName];
            } else {
              {
                checkAttributeStringCoercion(expected, name);
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL("" + expected);
              }
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                  var value = node.getAttribute(attributeName);
                  if (value === "") {
                    return true;
                  }
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return value;
                  }
                  if (value === "" + expected) {
                    return expected;
                  }
                  return value;
                }
              } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return node.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === "" + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node, name, expected, isCustomComponentTag) {
          {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (!node.hasAttribute(name)) {
              return expected === void 0 ? void 0 : null;
            }
            var value = node.getAttribute(name);
            {
              checkAttributeStringCoercion(expected, name);
            }
            if (value === "" + expected) {
              return expected;
            }
            return value;
          }
        }
        function setValueForProperty(node, name, value, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name);
          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
            value = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              if (value === null) {
                node.removeAttribute(_attributeName);
              } else {
                {
                  checkAttributeStringCoercion(value, name);
                }
                node.setAttribute(_attributeName, "" + value);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type = propertyInfo.type;
              node[propertyName] = type === BOOLEAN ? false : "";
            } else {
              node[propertyName] = value;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null) {
            node.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
              attributeValue = "";
            } else {
              {
                {
                  checkAttributeStringCoercion(value, attributeName);
                }
                attributeValue = "" + value;
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL(attributeValue.toString());
              }
            }
            if (attributeNamespace) {
              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node.setAttribute(attributeName, attributeValue);
            }
          }
        }
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_CACHE_TYPE = Symbol.for("react.cache");
        var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var assign = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        function describeFiber(fiber) {
          var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
          var source = fiber._debugSource;
          switch (fiber.tag) {
            case HostComponent:
              return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
              return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
              return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
              return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
              return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
              return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
              return describeClassComponentFrame(fiber.type);
            default:
              return "";
          }
        }
        function getStackByFiberInDevAndProd(workInProgress2) {
          try {
            var info = "";
            var node = workInProgress2;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        function getWrappedName$1(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName$1(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromFiber(fiber) {
          var tag = fiber.tag, type = fiber.type;
          switch (tag) {
            case CacheComponent:
              return "Cache";
            case ContextConsumer:
              var context = type;
              return getContextName$1(context) + ".Consumer";
            case ContextProvider:
              var provider = type;
              return getContextName$1(provider._context) + ".Provider";
            case DehydratedFragment:
              return "DehydratedFragment";
            case ForwardRef:
              return getWrappedName$1(type, type.render, "ForwardRef");
            case Fragment:
              return "Fragment";
            case HostComponent:
              return type;
            case HostPortal:
              return "Portal";
            case HostRoot:
              return "Root";
            case HostText:
              return "Text";
            case LazyComponent:
              return getComponentNameFromType(type);
            case Mode:
              if (type === REACT_STRICT_MODE_TYPE) {
                return "StrictMode";
              }
              return "Mode";
            case OffscreenComponent:
              return "Offscreen";
            case Profiler:
              return "Profiler";
            case ScopeComponent:
              return "Scope";
            case SuspenseComponent:
              return "Suspense";
            case SuspenseListComponent:
              return "SuspenseList";
            case TracingMarkerComponent:
              return "TracingMarker";
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
              if (typeof type === "function") {
                return type.displayName || type.name || null;
              }
              if (typeof type === "string") {
                return type;
              }
              break;
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var current = null;
        var isRendering = false;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current._debugOwner;
            if (owner !== null && typeof owner !== "undefined") {
              return getComponentNameFromFiber(owner);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return "";
            }
            return getStackByFiberInDevAndProd(current);
          }
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            isRendering = false;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
            current = fiber;
            isRendering = false;
          }
        }
        function getCurrentFiber() {
          {
            return current;
          }
        }
        function setIsRendering(rendering) {
          {
            isRendering = rendering;
          }
        }
        function toString(value) {
          return "" + value;
        }
        function getToStringValue(value) {
          switch (typeof value) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
              return value;
            case "object":
              {
                checkFormFieldValueStringCoercion(value);
              }
              return value;
            default:
              return "";
          }
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
        }
        function getTracker(node) {
          return node._valueTracker;
        }
        function detachTracker(node) {
          node._valueTracker = null;
        }
        function getValueFromNode(node) {
          var value = "";
          if (!node) {
            return value;
          }
          if (isCheckable(node)) {
            value = node.checked ? "true" : "false";
          } else {
            value = node.value;
          }
          return value;
        }
        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? "checked" : "value";
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
          {
            checkFormFieldValueStringCoercion(node[valueField]);
          }
          var currentValue = "" + node[valueField];
          if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
            return;
          }
          var get2 = descriptor.get, set2 = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
              return get2.call(this);
            },
            set: function(value) {
              {
                checkFormFieldValueStringCoercion(value);
              }
              currentValue = "" + value;
              set2.call(this, value);
            }
          });
          Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value) {
              {
                checkFormFieldValueStringCoercion(value);
              }
              currentValue = "" + value;
            },
            stopTracking: function() {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }
        function track(node) {
          if (getTracker(node)) {
            return;
          }
          node._valueTracker = trackValueOnNode(node);
        }
        function updateValueIfChanged(node) {
          if (!node) {
            return false;
          }
          var tracker = getTracker(node);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        function getActiveElement(doc) {
          doc = doc || (typeof document !== "undefined" ? document : void 0);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === "checkbox" || props.type === "radio";
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element, props) {
          var node = element;
          var checked = props.checked;
          var hostProps = assign({}, props, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: checked != null ? checked : node._wrapperState.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element, props) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
              error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
              error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node = element;
          var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
          node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element, props) {
          var node = element;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node, "checked", checked, false);
          }
        }
        function updateWrapper(element, props) {
          var node = element;
          {
            var controlled = isControlled(props);
            if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
              error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnUncontrolledToControlled = true;
            }
            if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
              error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element, props);
          var value = getToStringValue(props.value);
          var type = props.type;
          if (value != null) {
            if (type === "number") {
              if (value === 0 && node.value === "" || node.value != value) {
                node.value = toString(value);
              }
            } else if (node.value !== toString(value)) {
              node.value = toString(value);
            }
          } else if (type === "submit" || type === "reset") {
            node.removeAttribute("value");
            return;
          }
          {
            if (props.hasOwnProperty("value")) {
              setDefaultValue(node, props.type, value);
            } else if (props.hasOwnProperty("defaultValue")) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          }
          {
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element, props, isHydrating2) {
          var node = element;
          if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset";
            if (isButton && (props.value === void 0 || props.value === null)) {
              return;
            }
            var initialValue = toString(node._wrapperState.initialValue);
            if (!isHydrating2) {
              {
                if (initialValue !== node.value) {
                  node.value = initialValue;
                }
              }
            }
            {
              node.defaultValue = initialValue;
            }
          }
          var name = node.name;
          if (name !== "") {
            node.name = "";
          }
          {
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !!node._wrapperState.initialChecked;
          }
          if (name !== "") {
            node.name = name;
          }
        }
        function restoreControlledState(element, props) {
          var node = element;
          updateWrapper(node, props);
          updateNamedCousins(node, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            {
              checkAttributeStringCoercion(name, "name");
            }
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps) {
                throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
              }
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node, type, value) {
          if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) {
              node.defaultValue = toString(node._wrapperState.initialValue);
            } else if (node.defaultValue !== toString(value)) {
              node.defaultValue = toString(value);
            }
          }
        }
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        var didWarnInvalidInnerHTML = false;
        function validateProps(element, props) {
          {
            if (props.value == null) {
              if (typeof props.children === "object" && props.children !== null) {
                React2.Children.forEach(props.children, function(child) {
                  if (child == null) {
                    return;
                  }
                  if (typeof child === "string" || typeof child === "number") {
                    return;
                  }
                  if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                  }
                });
              } else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                  didWarnInvalidInnerHTML = true;
                  error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
              }
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element, props) {
          if (props.value != null) {
            element.setAttribute("value", toString(getToStringValue(props.value)));
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        var didWarnValueDefaultValue$1;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return "\n\nCheck the render method of `" + ownerName + "`.";
          }
          return "";
        }
        var valuePropNames = ["value", "defaultValue"];
        function checkSelectPropTypes(props) {
          {
            checkControlledValueProps("select", props);
            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var propNameIsArray = isArray(props[propName]);
              if (props.multiple && !propNameIsArray) {
                error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
              } else if (!props.multiple && propNameIsArray) {
                error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
              }
            }
          }
        }
        function updateOptions(node, multiple, propValue, setDefaultSelected) {
          var options2 = node.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              selectedValue["$" + selectedValues[i]] = true;
            }
            for (var _i = 0; _i < options2.length; _i++) {
              var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
              if (options2[_i].selected !== selected) {
                options2[_i].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options2[_i].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options2.length; _i2++) {
              if (options2[_i2].value === _selectedValue) {
                options2[_i2].selected = true;
                if (setDefaultSelected) {
                  options2[_i2].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options2[_i2].disabled) {
                defaultSelected = options2[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$1(element, props) {
          return assign({}, props, {
            value: void 0
          });
        }
        function initWrapperState$1(element, props) {
          var node = element;
          {
            checkSelectPropTypes(props);
          }
          node._wrapperState = {
            wasMultiple: !!props.multiple
          };
          {
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
              error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element, props) {
          var node = element;
          node.multiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (props.defaultValue != null) {
            updateOptions(node, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element, props) {
          var node = element;
          var wasMultiple = node._wrapperState.wasMultiple;
          node._wrapperState.wasMultiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
            }
          }
        }
        function restoreControlledState$1(element, props) {
          var node = element;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$2(element, props) {
          var node = element;
          if (props.dangerouslySetInnerHTML != null) {
            throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
          }
          var hostProps = assign({}, props, {
            value: void 0,
            defaultValue: void 0,
            children: toString(node._wrapperState.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element, props) {
          var node = element;
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
              error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
              {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
              }
              {
                if (defaultValue != null) {
                  throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                }
                if (isArray(children)) {
                  if (children.length > 1) {
                    throw new Error("<textarea> can only have at most one child.");
                  }
                  children = children[0];
                }
                defaultValue = children;
              }
            }
            if (defaultValue == null) {
              defaultValue = "";
            }
            initialValue = defaultValue;
          }
          node._wrapperState = {
            initialValue: getToStringValue(initialValue)
          };
        }
        function updateWrapper$1(element, props) {
          var node = element;
          var value = getToStringValue(props.value);
          var defaultValue = getToStringValue(props.defaultValue);
          if (value != null) {
            var newValue = toString(value);
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null && node.defaultValue !== newValue) {
              node.defaultValue = newValue;
            }
          }
          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        }
        function postMountWrapper$3(element, props) {
          var node = element;
          var textContent = node.textContent;
          if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) {
              node.value = textContent;
            }
          }
        }
        function restoreControlledState$2(element, props) {
          updateWrapper$1(element, props);
        }
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        function getIntrinsicNamespace(type) {
          switch (type) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function(func) {
          if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
            return function(arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };
        var reusableSVGContainer;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
          if (node.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node)) {
              reusableSVGContainer = reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
              return;
            }
          }
          node.innerHTML = html;
        });
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        var setTextContent = function(node, text) {
          if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
          background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
          backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
          border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
          borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
          borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
          borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
          borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
          borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
          borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
          borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
          borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
          borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
          borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
          columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
          columns: ["columnCount", "columnWidth"],
          flex: ["flexBasis", "flexGrow", "flexShrink"],
          flexFlow: ["flexDirection", "flexWrap"],
          font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
          fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
          gap: ["columnGap", "rowGap"],
          grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
          gridColumn: ["gridColumnEnd", "gridColumnStart"],
          gridColumnGap: ["columnGap"],
          gridGap: ["columnGap", "rowGap"],
          gridRow: ["gridRowEnd", "gridRowStart"],
          gridRowGap: ["rowGap"],
          gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
          margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
          marker: ["markerEnd", "markerMid", "markerStart"],
          mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
          maskPosition: ["maskPositionX", "maskPositionY"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          overflow: ["overflowX", "overflowY"],
          padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
          placeContent: ["alignContent", "justifyContent"],
          placeItems: ["alignItems", "justifyItems"],
          placeSelf: ["alignSelf", "justifySelf"],
          textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
          textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
          transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
          wordWrap: ["overflowWrap"]
        };
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        function dangerousStyleValue(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
            return value + "px";
          }
          {
            checkCSSPropertyStringCoercion(value, name);
          }
          return ("" + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported style property %s. Did you mean %s?", name, camelize(name.replace(msPattern$1, "ms-")));
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles) {
          {
            var serialized = "";
            var delimiter = "";
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node, styles) {
          var style2 = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles[styleName]);
              }
            }
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") {
              styleName = "cssFloat";
            }
            if (isCustomProperty) {
              style2.setProperty(styleName, styleValue);
            } else {
              style2[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value) {
          return value == null || typeof value === "boolean" || value === "";
        }
        function expandShorthandMap(styles) {
          var expanded = {};
          for (var key in styles) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i = 0; i < longhands.length; i++) {
              expanded[longhands[i]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          {
            if (!nextStyles) {
              return;
            }
            var expandedUpdates = expandShorthandMap(styleUpdates);
            var expandedStyles = expandShorthandMap(nextStyles);
            var warnedAbout = {};
            for (var key in expandedUpdates) {
              var originalKey = expandedUpdates[key];
              var correctOriginalKey = expandedStyles[key];
              if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) {
                  continue;
                }
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
              }
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = assign({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) {
              throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (props.style != null && typeof props.style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var ariaProperties = {
          "aria-current": 0,
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          "aria-hidden": 0,
          "aria-invalid": 0,
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies2.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
              if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
        var IS_NON_DELEGATED = 1 << 1;
        var IS_CAPTURE_PHASE = 1 << 2;
        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
        var currentReplayingEvent = null;
        function setReplayingEvent(event) {
          {
            if (currentReplayingEvent !== null) {
              error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = event;
        }
        function resetReplayingEvent() {
          {
            if (currentReplayingEvent === null) {
              error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = null;
        }
        function isReplayingEvent(event) {
          return event === currentReplayingEvent;
        }
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          if (typeof restoreImpl !== "function") {
            throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
          }
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i = 0; i < queuedTargets.length; i++) {
              restoreStateOfTarget(queuedTargets[i]);
            }
          }
        }
        var batchedUpdatesImpl = function(fn, bookkeeping) {
          return fn(bookkeeping);
        };
        var flushSyncImpl = function() {
        };
        var isInsideEventHandler = false;
        function finishEventHandler() {
          var controlledComponentsHavePendingUpdates = needsStateRestore();
          if (controlledComponentsHavePendingUpdates) {
            flushSyncImpl();
            restoreStateIfNeeded();
          }
        }
        function batchedUpdates(fn, a, b) {
          if (isInsideEventHandler) {
            return fn(a, b);
          }
          isInsideEventHandler = true;
          try {
            return batchedUpdatesImpl(fn, a, b);
          } finally {
            isInsideEventHandler = false;
            finishEventHandler();
          }
        }
        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
          batchedUpdatesImpl = _batchedUpdatesImpl;
          flushSyncImpl = _flushSyncImpl;
        }
        function isInteractive(tag) {
          return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
        }
        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }
        function getListener(inst, registrationName) {
          var stateNode = inst.stateNode;
          if (stateNode === null) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (props === null) {
            return null;
          }
          var listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          if (listener && typeof listener !== "function") {
            throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
          }
          return listener;
        }
        var passiveBrowserEventsSupported = false;
        if (canUseDOM) {
          try {
            var options = {};
            Object.defineProperty(options, "passive", {
              get: function() {
                passiveBrowserEventsSupported = true;
              }
            });
            window.addEventListener("test", options, options);
            window.removeEventListener("test", options, options);
          } catch (e) {
            passiveBrowserEventsSupported = false;
          }
        }
        function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context, funcArgs);
          } catch (error2) {
            this.onError(error2);
          }
        }
        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
        {
          if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
            var fakeNode = document.createElement("react");
            invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
              if (typeof document === "undefined" || document === null) {
                throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
              }
              var evt = document.createEvent("Event");
              var didCall = false;
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
              function restoreAfterDispatch() {
                fakeNode.removeEventListener(evtType, callCallback2, false);
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                  window.event = windowEvent;
                }
              }
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback2() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
              }
              var error2;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event) {
                error2 = event.error;
                didSetError = true;
                if (error2 === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event.defaultPrevented) {
                  if (error2 != null && typeof error2 === "object") {
                    try {
                      error2._suppressLogging = true;
                    } catch (inner) {
                    }
                  }
                }
              }
              var evtType = "react-" + (name ? name : "invokeguardedcallback");
              window.addEventListener("error", handleWindowError);
              fakeNode.addEventListener(evtType, callCallback2, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, "event", windowEventDescriptor);
              }
              if (didCall && didError) {
                if (!didSetError) {
                  error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                } else if (isCrossOriginError) {
                  error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                }
                this.onError(error2);
              }
              window.removeEventListener("error", handleWindowError);
              if (!didCall) {
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
              }
            };
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = {
          onError: function(error2) {
            hasError = true;
            caughtError = error2;
          }
        };
        function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error2 = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error2;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error2 = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error2;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error2 = caughtError;
            hasError = false;
            caughtError = null;
            return error2;
          } else {
            throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function get(key) {
          return key._reactInternals;
        }
        function has(key) {
          return key._reactInternals !== void 0;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var NoFlags = 0;
        var PerformedWork = 1;
        var Placement = 2;
        var Update = 4;
        var ChildDeletion = 16;
        var ContentReset = 32;
        var Callback = 64;
        var DidCapture = 128;
        var ForceClientRender = 256;
        var Ref = 512;
        var Snapshot = 1024;
        var Passive = 2048;
        var Hydrating = 4096;
        var Visibility = 8192;
        var StoreConsistency = 16384;
        var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;
        var HostEffectMask = 32767;
        var Incomplete = 32768;
        var ShouldCapture = 65536;
        var ForceUpdateForLegacySuspense = 131072;
        var Forked = 1048576;
        var RefStatic = 2097152;
        var LayoutStatic = 4194304;
        var PassiveStatic = 8388608;
        var MountLayoutDev = 16777216;
        var MountPassiveDev = 33554432;
        var BeforeMutationMask = Update | Snapshot | 0;
        var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
        var LayoutMask = Update | Callback | Ref | Visibility;
        var PassiveMask = Passive | ChildDeletion;
        var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        function getNearestMountedFiber(fiber) {
          var node = fiber;
          var nearestMounted = fiber;
          if (!fiber.alternate) {
            var nextNode = node;
            do {
              node = nextNode;
              if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                nearestMounted = node.return;
              }
              nextNode = node.return;
            } while (nextNode);
          } else {
            while (node.return) {
              node = node.return;
            }
          }
          if (node.tag === HostRoot) {
            return nearestMounted;
          }
          return null;
        }
        function getSuspenseInstanceFromFiber(fiber) {
          if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
              var current2 = fiber.alternate;
              if (current2 !== null) {
                suspenseState = current2.memoizedState;
              }
            }
            if (suspenseState !== null) {
              return suspenseState.dehydrated;
            }
          }
          return null;
        }
        function getContainerFromFiber(fiber) {
          return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
        }
        function isFiberMounted(fiber) {
          return getNearestMountedFiber(fiber) === fiber;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              if (!instance._warnedAboutRefsInRender) {
                error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
              }
              instance._warnedAboutRefsInRender = true;
            }
          }
          var fiber = get(component);
          if (!fiber) {
            return false;
          }
          return getNearestMountedFiber(fiber) === fiber;
        }
        function assertIsMounted(fiber) {
          if (getNearestMountedFiber(fiber) !== fiber) {
            throw new Error("Unable to find node on an unmounted component.");
          }
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) {
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (nearestMounted !== fiber) {
              return null;
            }
            return fiber;
          }
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a.return;
            if (parentA === null) {
              break;
            }
            var parentB = parentA.alternate;
            if (parentB === null) {
              var nextParent = parentA.return;
              if (nextParent !== null) {
                a = b = nextParent;
                continue;
              }
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
              a = parentA;
              b = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
              }
            }
            if (a.alternate !== b) {
              throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (a.tag !== HostRoot) {
            throw new Error("Unable to find node on an unmounted component.");
          }
          if (a.stateNode.current === a) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
        }
        function findCurrentHostFiberImpl(node) {
          if (node.tag === HostComponent || node.tag === HostText) {
            return node;
          }
          var child = node.child;
          while (child !== null) {
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) {
              return match;
            }
            child = child.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
        }
        function findCurrentHostFiberWithNoPortalsImpl(node) {
          if (node.tag === HostComponent || node.tag === HostText) {
            return node;
          }
          var child = node.child;
          while (child !== null) {
            if (child.tag !== HostPortal) {
              var match = findCurrentHostFiberWithNoPortalsImpl(child);
              if (match !== null) {
                return match;
              }
            }
            child = child.sibling;
          }
          return null;
        }
        var scheduleCallback = Scheduler.unstable_scheduleCallback;
        var cancelCallback = Scheduler.unstable_cancelCallback;
        var shouldYield = Scheduler.unstable_shouldYield;
        var requestPaint = Scheduler.unstable_requestPaint;
        var now = Scheduler.unstable_now;
        var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
        var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
        var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
        var NormalPriority = Scheduler.unstable_NormalPriority;
        var LowPriority = Scheduler.unstable_LowPriority;
        var IdlePriority = Scheduler.unstable_IdlePriority;
        var unstable_yieldValue = Scheduler.unstable_yieldValue;
        var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
        var rendererID = null;
        var injectedHook = null;
        var injectedProfilingHooks = null;
        var hasLoggedError = false;
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            }
            return true;
          }
          try {
            if (enableSchedulingProfiler) {
              internals = assign({}, internals, {
                getLaneLabelMap,
                injectProfilingHooks
              });
            }
            rendererID = hook.inject(internals);
            injectedHook = hook;
          } catch (err2) {
            {
              error("React instrumentation encountered an error: %s.", err2);
            }
          }
          if (hook.checkDCE) {
            return true;
          } else {
            return false;
          }
        }
        function onScheduleRoot(root3, children) {
          {
            if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
              try {
                injectedHook.onScheduleFiberRoot(rendererID, root3, children);
              } catch (err2) {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onCommitRoot(root3, eventPriority) {
          if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
            try {
              var didError = (root3.current.flags & DidCapture) === DidCapture;
              if (enableProfilerTimer) {
                var schedulerPriority;
                switch (eventPriority) {
                  case DiscreteEventPriority:
                    schedulerPriority = ImmediatePriority;
                    break;
                  case ContinuousEventPriority:
                    schedulerPriority = UserBlockingPriority;
                    break;
                  case DefaultEventPriority:
                    schedulerPriority = NormalPriority;
                    break;
                  case IdleEventPriority:
                    schedulerPriority = IdlePriority;
                    break;
                  default:
                    schedulerPriority = NormalPriority;
                    break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root3, schedulerPriority, didError);
              } else {
                injectedHook.onCommitFiberRoot(rendererID, root3, void 0, didError);
              }
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onPostCommitRoot(root3) {
          if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") {
            try {
              injectedHook.onPostCommitFiberRoot(rendererID, root3);
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onCommitUnmount(fiber) {
          if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
            try {
              injectedHook.onCommitFiberUnmount(rendererID, fiber);
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function setIsStrictModeForDevtools(newIsStrictMode) {
          {
            if (typeof unstable_yieldValue === "function") {
              unstable_setDisableYieldValue(newIsStrictMode);
              setSuppressWarning(newIsStrictMode);
            }
            if (injectedHook && typeof injectedHook.setStrictMode === "function") {
              try {
                injectedHook.setStrictMode(rendererID, newIsStrictMode);
              } catch (err2) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err2);
                  }
                }
              }
            }
          }
        }
        function injectProfilingHooks(profilingHooks) {
          injectedProfilingHooks = profilingHooks;
        }
        function getLaneLabelMap() {
          {
            var map = /* @__PURE__ */ new Map();
            var lane = 1;
            for (var index2 = 0; index2 < TotalLanes; index2++) {
              var label = getLabelForLane(lane);
              map.set(lane, label);
              lane *= 2;
            }
            return map;
          }
        }
        function markCommitStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") {
              injectedProfilingHooks.markCommitStarted(lanes);
            }
          }
        }
        function markCommitStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") {
              injectedProfilingHooks.markCommitStopped();
            }
          }
        }
        function markComponentRenderStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") {
              injectedProfilingHooks.markComponentRenderStarted(fiber);
            }
          }
        }
        function markComponentRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") {
              injectedProfilingHooks.markComponentRenderStopped();
            }
          }
        }
        function markComponentPassiveEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStopped();
            }
          }
        }
        function markComponentPassiveEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
            }
          }
        }
        function markComponentLayoutEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStopped();
            }
          }
        }
        function markComponentLayoutEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
            }
          }
        }
        function markComponentErrored(fiber, thrownValue, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") {
              injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
            }
          }
        }
        function markComponentSuspended(fiber, wakeable, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") {
              injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
            }
          }
        }
        function markLayoutEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") {
              injectedProfilingHooks.markLayoutEffectsStarted(lanes);
            }
          }
        }
        function markLayoutEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") {
              injectedProfilingHooks.markLayoutEffectsStopped();
            }
          }
        }
        function markPassiveEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") {
              injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            }
          }
        }
        function markPassiveEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") {
              injectedProfilingHooks.markPassiveEffectsStopped();
            }
          }
        }
        function markRenderStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") {
              injectedProfilingHooks.markRenderStarted(lanes);
            }
          }
        }
        function markRenderYielded() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") {
              injectedProfilingHooks.markRenderYielded();
            }
          }
        }
        function markRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") {
              injectedProfilingHooks.markRenderStopped();
            }
          }
        }
        function markRenderScheduled(lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") {
              injectedProfilingHooks.markRenderScheduled(lane);
            }
          }
        }
        function markForceUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") {
              injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
            }
          }
        }
        function markStateUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") {
              injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
            }
          }
        }
        var NoMode = 0;
        var ConcurrentMode = 1;
        var ProfileMode = 2;
        var StrictLegacyMode = 8;
        var StrictEffectsMode = 16;
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log(asUint) / LN2 | 0) | 0;
        }
        var TotalLanes = 31;
        var NoLanes = 0;
        var NoLane = 0;
        var SyncLane = 1;
        var InputContinuousHydrationLane = 2;
        var InputContinuousLane = 4;
        var DefaultHydrationLane = 8;
        var DefaultLane = 16;
        var TransitionHydrationLane = 32;
        var TransitionLanes = 4194240;
        var TransitionLane1 = 64;
        var TransitionLane2 = 128;
        var TransitionLane3 = 256;
        var TransitionLane4 = 512;
        var TransitionLane5 = 1024;
        var TransitionLane6 = 2048;
        var TransitionLane7 = 4096;
        var TransitionLane8 = 8192;
        var TransitionLane9 = 16384;
        var TransitionLane10 = 32768;
        var TransitionLane11 = 65536;
        var TransitionLane12 = 131072;
        var TransitionLane13 = 262144;
        var TransitionLane14 = 524288;
        var TransitionLane15 = 1048576;
        var TransitionLane16 = 2097152;
        var RetryLanes = 130023424;
        var RetryLane1 = 4194304;
        var RetryLane2 = 8388608;
        var RetryLane3 = 16777216;
        var RetryLane4 = 33554432;
        var RetryLane5 = 67108864;
        var SomeRetryLane = RetryLane1;
        var SelectiveHydrationLane = 134217728;
        var NonIdleLanes = 268435455;
        var IdleHydrationLane = 268435456;
        var IdleLane = 536870912;
        var OffscreenLane = 1073741824;
        function getLabelForLane(lane) {
          {
            if (lane & SyncLane) {
              return "Sync";
            }
            if (lane & InputContinuousHydrationLane) {
              return "InputContinuousHydration";
            }
            if (lane & InputContinuousLane) {
              return "InputContinuous";
            }
            if (lane & DefaultHydrationLane) {
              return "DefaultHydration";
            }
            if (lane & DefaultLane) {
              return "Default";
            }
            if (lane & TransitionHydrationLane) {
              return "TransitionHydration";
            }
            if (lane & TransitionLanes) {
              return "Transition";
            }
            if (lane & RetryLanes) {
              return "Retry";
            }
            if (lane & SelectiveHydrationLane) {
              return "SelectiveHydration";
            }
            if (lane & IdleHydrationLane) {
              return "IdleHydration";
            }
            if (lane & IdleLane) {
              return "Idle";
            }
            if (lane & OffscreenLane) {
              return "Offscreen";
            }
          }
        }
        var NoTimestamp = -1;
        var nextTransitionLane = TransitionLane1;
        var nextRetryLane = RetryLane1;
        function getHighestPriorityLanes(lanes) {
          switch (getHighestPriorityLane(lanes)) {
            case SyncLane:
              return SyncLane;
            case InputContinuousHydrationLane:
              return InputContinuousHydrationLane;
            case InputContinuousLane:
              return InputContinuousLane;
            case DefaultHydrationLane:
              return DefaultHydrationLane;
            case DefaultLane:
              return DefaultLane;
            case TransitionHydrationLane:
              return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return lanes & RetryLanes;
            case SelectiveHydrationLane:
              return SelectiveHydrationLane;
            case IdleHydrationLane:
              return IdleHydrationLane;
            case IdleLane:
              return IdleLane;
            case OffscreenLane:
              return OffscreenLane;
            default:
              {
                error("Should have found matching lanes. This is a bug in React.");
              }
              return lanes;
          }
        }
        function getNextLanes(root3, wipLanes) {
          var pendingLanes = root3.pendingLanes;
          if (pendingLanes === NoLanes) {
            return NoLanes;
          }
          var nextLanes = NoLanes;
          var suspendedLanes = root3.suspendedLanes;
          var pingedLanes = root3.pingedLanes;
          var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
          if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            } else {
              var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
              if (nonIdlePingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
              }
            }
          } else {
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(unblockedLanes);
            } else {
              if (pingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(pingedLanes);
              }
            }
          }
          if (nextLanes === NoLanes) {
            return NoLanes;
          }
          if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {
              return wipLanes;
            }
          }
          if ((nextLanes & InputContinuousLane) !== NoLanes) {
            nextLanes |= pendingLanes & DefaultLane;
          }
          var entangledLanes = root3.entangledLanes;
          if (entangledLanes !== NoLanes) {
            var entanglements = root3.entanglements;
            var lanes = nextLanes & entangledLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              nextLanes |= entanglements[index2];
              lanes &= ~lane;
            }
          }
          return nextLanes;
        }
        function getMostRecentEventTime(root3, lanes) {
          var eventTimes = root3.eventTimes;
          var mostRecentEventTime = NoTimestamp;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var eventTime = eventTimes[index2];
            if (eventTime > mostRecentEventTime) {
              mostRecentEventTime = eventTime;
            }
            lanes &= ~lane;
          }
          return mostRecentEventTime;
        }
        function computeExpirationTime(lane, currentTime) {
          switch (lane) {
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
              return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return currentTime + 5e3;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
              return NoTimestamp;
            default:
              {
                error("Should have found matching lanes. This is a bug in React.");
              }
              return NoTimestamp;
          }
        }
        function markStarvedLanesAsExpired(root3, currentTime) {
          var pendingLanes = root3.pendingLanes;
          var suspendedLanes = root3.suspendedLanes;
          var pingedLanes = root3.pingedLanes;
          var expirationTimes = root3.expirationTimes;
          var lanes = pendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var expirationTime = expirationTimes[index2];
            if (expirationTime === NoTimestamp) {
              if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                expirationTimes[index2] = computeExpirationTime(lane, currentTime);
              }
            } else if (expirationTime <= currentTime) {
              root3.expiredLanes |= lane;
            }
            lanes &= ~lane;
          }
        }
        function getHighestPriorityPendingLanes(root3) {
          return getHighestPriorityLanes(root3.pendingLanes);
        }
        function getLanesToRetrySynchronouslyOnError(root3) {
          var everythingButOffscreen = root3.pendingLanes & ~OffscreenLane;
          if (everythingButOffscreen !== NoLanes) {
            return everythingButOffscreen;
          }
          if (everythingButOffscreen & OffscreenLane) {
            return OffscreenLane;
          }
          return NoLanes;
        }
        function includesSyncLane(lanes) {
          return (lanes & SyncLane) !== NoLanes;
        }
        function includesNonIdleWork(lanes) {
          return (lanes & NonIdleLanes) !== NoLanes;
        }
        function includesOnlyRetries(lanes) {
          return (lanes & RetryLanes) === lanes;
        }
        function includesOnlyNonUrgentLanes(lanes) {
          var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
          return (lanes & UrgentLanes) === NoLanes;
        }
        function includesOnlyTransitions(lanes) {
          return (lanes & TransitionLanes) === lanes;
        }
        function includesBlockingLane(root3, lanes) {
          var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
          return (lanes & SyncDefaultLanes) !== NoLanes;
        }
        function includesExpiredLane(root3, lanes) {
          return (lanes & root3.expiredLanes) !== NoLanes;
        }
        function isTransitionLane(lane) {
          return (lane & TransitionLanes) !== NoLanes;
        }
        function claimNextTransitionLane() {
          var lane = nextTransitionLane;
          nextTransitionLane <<= 1;
          if ((nextTransitionLane & TransitionLanes) === NoLanes) {
            nextTransitionLane = TransitionLane1;
          }
          return lane;
        }
        function claimNextRetryLane() {
          var lane = nextRetryLane;
          nextRetryLane <<= 1;
          if ((nextRetryLane & RetryLanes) === NoLanes) {
            nextRetryLane = RetryLane1;
          }
          return lane;
        }
        function getHighestPriorityLane(lanes) {
          return lanes & -lanes;
        }
        function pickArbitraryLane(lanes) {
          return getHighestPriorityLane(lanes);
        }
        function pickArbitraryLaneIndex(lanes) {
          return 31 - clz32(lanes);
        }
        function laneToIndex(lane) {
          return pickArbitraryLaneIndex(lane);
        }
        function includesSomeLane(a, b) {
          return (a & b) !== NoLanes;
        }
        function isSubsetOfLanes(set2, subset) {
          return (set2 & subset) === subset;
        }
        function mergeLanes(a, b) {
          return a | b;
        }
        function removeLanes(set2, subset) {
          return set2 & ~subset;
        }
        function intersectLanes(a, b) {
          return a & b;
        }
        function laneToLanes(lane) {
          return lane;
        }
        function higherPriorityLane(a, b) {
          return a !== NoLane && a < b ? a : b;
        }
        function createLaneMap(initial) {
          var laneMap = [];
          for (var i = 0; i < TotalLanes; i++) {
            laneMap.push(initial);
          }
          return laneMap;
        }
        function markRootUpdated(root3, updateLane, eventTime) {
          root3.pendingLanes |= updateLane;
          if (updateLane !== IdleLane) {
            root3.suspendedLanes = NoLanes;
            root3.pingedLanes = NoLanes;
          }
          var eventTimes = root3.eventTimes;
          var index2 = laneToIndex(updateLane);
          eventTimes[index2] = eventTime;
        }
        function markRootSuspended(root3, suspendedLanes) {
          root3.suspendedLanes |= suspendedLanes;
          root3.pingedLanes &= ~suspendedLanes;
          var expirationTimes = root3.expirationTimes;
          var lanes = suspendedLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootPinged(root3, pingedLanes, eventTime) {
          root3.pingedLanes |= root3.suspendedLanes & pingedLanes;
        }
        function markRootFinished(root3, remainingLanes) {
          var noLongerPendingLanes = root3.pendingLanes & ~remainingLanes;
          root3.pendingLanes = remainingLanes;
          root3.suspendedLanes = NoLanes;
          root3.pingedLanes = NoLanes;
          root3.expiredLanes &= remainingLanes;
          root3.mutableReadLanes &= remainingLanes;
          root3.entangledLanes &= remainingLanes;
          var entanglements = root3.entanglements;
          var eventTimes = root3.eventTimes;
          var expirationTimes = root3.expirationTimes;
          var lanes = noLongerPendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] = NoLanes;
            eventTimes[index2] = NoTimestamp;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootEntangled(root3, entangledLanes) {
          var rootEntangledLanes = root3.entangledLanes |= entangledLanes;
          var entanglements = root3.entanglements;
          var lanes = rootEntangledLanes;
          while (lanes) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            if (lane & entangledLanes | entanglements[index2] & entangledLanes) {
              entanglements[index2] |= entangledLanes;
            }
            lanes &= ~lane;
          }
        }
        function getBumpedLaneForHydration(root3, renderLanes2) {
          var renderLane = getHighestPriorityLane(renderLanes2);
          var lane;
          switch (renderLane) {
            case InputContinuousLane:
              lane = InputContinuousHydrationLane;
              break;
            case DefaultLane:
              lane = DefaultHydrationLane;
              break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              lane = TransitionHydrationLane;
              break;
            case IdleLane:
              lane = IdleHydrationLane;
              break;
            default:
              lane = NoLane;
              break;
          }
          if ((lane & (root3.suspendedLanes | renderLanes2)) !== NoLane) {
            return NoLane;
          }
          return lane;
        }
        function addFiberToLanesMap(root3, fiber, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root3.pendingUpdatersLaneMap;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            updaters.add(fiber);
            lanes &= ~lane;
          }
        }
        function movePendingFibersToMemoized(root3, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root3.pendingUpdatersLaneMap;
          var memoizedUpdaters = root3.memoizedUpdaters;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            if (updaters.size > 0) {
              updaters.forEach(function(fiber) {
                var alternate = fiber.alternate;
                if (alternate === null || !memoizedUpdaters.has(alternate)) {
                  memoizedUpdaters.add(fiber);
                }
              });
              updaters.clear();
            }
            lanes &= ~lane;
          }
        }
        function getTransitionsForLanes(root3, lanes) {
          {
            return null;
          }
        }
        var DiscreteEventPriority = SyncLane;
        var ContinuousEventPriority = InputContinuousLane;
        var DefaultEventPriority = DefaultLane;
        var IdleEventPriority = IdleLane;
        var currentUpdatePriority = NoLane;
        function getCurrentUpdatePriority() {
          return currentUpdatePriority;
        }
        function setCurrentUpdatePriority(newPriority) {
          currentUpdatePriority = newPriority;
        }
        function runWithPriority(priority, fn) {
          var previousPriority = currentUpdatePriority;
          try {
            currentUpdatePriority = priority;
            return fn();
          } finally {
            currentUpdatePriority = previousPriority;
          }
        }
        function higherEventPriority(a, b) {
          return a !== 0 && a < b ? a : b;
        }
        function lowerEventPriority(a, b) {
          return a === 0 || a > b ? a : b;
        }
        function isHigherEventPriority(a, b) {
          return a !== 0 && a < b;
        }
        function lanesToEventPriority(lanes) {
          var lane = getHighestPriorityLane(lanes);
          if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
            return DiscreteEventPriority;
          }
          if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
            return ContinuousEventPriority;
          }
          if (includesNonIdleWork(lane)) {
            return DefaultEventPriority;
          }
          return IdleEventPriority;
        }
        function isRootDehydrated(root3) {
          var currentState = root3.current.memoizedState;
          return currentState.isDehydrated;
        }
        var _attemptSynchronousHydration;
        function setAttemptSynchronousHydration(fn) {
          _attemptSynchronousHydration = fn;
        }
        function attemptSynchronousHydration(fiber) {
          _attemptSynchronousHydration(fiber);
        }
        var attemptContinuousHydration;
        function setAttemptContinuousHydration(fn) {
          attemptContinuousHydration = fn;
        }
        var attemptHydrationAtCurrentPriority;
        function setAttemptHydrationAtCurrentPriority(fn) {
          attemptHydrationAtCurrentPriority = fn;
        }
        var getCurrentUpdatePriority$1;
        function setGetCurrentUpdatePriority(fn) {
          getCurrentUpdatePriority$1 = fn;
        }
        var attemptHydrationAtPriority;
        function setAttemptHydrationAtPriority(fn) {
          attemptHydrationAtPriority = fn;
        }
        var hasScheduledReplayAttempt = false;
        var queuedDiscreteEvents = [];
        var queuedFocus = null;
        var queuedDrag = null;
        var queuedMouse = null;
        var queuedPointers = /* @__PURE__ */ new Map();
        var queuedPointerCaptures = /* @__PURE__ */ new Map();
        var queuedExplicitHydrationTargets = [];
        var discreteReplayableEvents = [
          "mousedown",
          "mouseup",
          "touchcancel",
          "touchend",
          "touchstart",
          "auxclick",
          "dblclick",
          "pointercancel",
          "pointerdown",
          "pointerup",
          "dragend",
          "dragstart",
          "drop",
          "compositionend",
          "compositionstart",
          "keydown",
          "keypress",
          "keyup",
          "input",
          "textInput",
          "copy",
          "cut",
          "paste",
          "click",
          "change",
          "contextmenu",
          "reset",
          "submit"
        ];
        function isDiscreteEventThatRequiresHydration(eventType) {
          return discreteReplayableEvents.indexOf(eventType) > -1;
        }
        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return {
            blockedOn,
            domEventName,
            eventSystemFlags,
            nativeEvent,
            targetContainers: [targetContainer]
          };
        }
        function clearIfContinuousEvent(domEventName, nativeEvent) {
          switch (domEventName) {
            case "focusin":
            case "focusout":
              queuedFocus = null;
              break;
            case "dragenter":
            case "dragleave":
              queuedDrag = null;
              break;
            case "mouseover":
            case "mouseout":
              queuedMouse = null;
              break;
            case "pointerover":
            case "pointerout": {
              var pointerId = nativeEvent.pointerId;
              queuedPointers.delete(pointerId);
              break;
            }
            case "gotpointercapture":
            case "lostpointercapture": {
              var _pointerId = nativeEvent.pointerId;
              queuedPointerCaptures.delete(_pointerId);
              break;
            }
          }
        }
        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
              var _fiber2 = getInstanceFromNode(blockedOn);
              if (_fiber2 !== null) {
                attemptContinuousHydration(_fiber2);
              }
            }
            return queuedEvent;
          }
          existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
          var targetContainers = existingQueuedEvent.targetContainers;
          if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
            targetContainers.push(targetContainer);
          }
          return existingQueuedEvent;
        }
        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          switch (domEventName) {
            case "focusin": {
              var focusEvent = nativeEvent;
              queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
              return true;
            }
            case "dragenter": {
              var dragEvent = nativeEvent;
              queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
              return true;
            }
            case "mouseover": {
              var mouseEvent = nativeEvent;
              queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
              return true;
            }
            case "pointerover": {
              var pointerEvent = nativeEvent;
              var pointerId = pointerEvent.pointerId;
              queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
              return true;
            }
            case "gotpointercapture": {
              var _pointerEvent = nativeEvent;
              var _pointerId2 = _pointerEvent.pointerId;
              queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
              return true;
            }
          }
          return false;
        }
        function attemptExplicitHydrationTarget(queuedTarget) {
          var targetInst = getClosestInstanceFromNode(queuedTarget.target);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  queuedTarget.blockedOn = instance;
                  attemptHydrationAtPriority(queuedTarget.priority, function() {
                    attemptHydrationAtCurrentPriority(nearestMounted);
                  });
                  return;
                }
              } else if (tag === HostRoot) {
                var root3 = nearestMounted.stateNode;
                if (isRootDehydrated(root3)) {
                  queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                  return;
                }
              }
            }
          }
          queuedTarget.blockedOn = null;
        }
        function queueExplicitHydrationTarget(target) {
          var updatePriority = getCurrentUpdatePriority$1();
          var queuedTarget = {
            blockedOn: null,
            target,
            priority: updatePriority
          };
          var i = 0;
          for (; i < queuedExplicitHydrationTargets.length; i++) {
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {
              break;
            }
          }
          queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
          if (i === 0) {
            attemptExplicitHydrationTarget(queuedTarget);
          }
        }
        function attemptReplayContinuousQueuedEvent(queuedEvent) {
          if (queuedEvent.blockedOn !== null) {
            return false;
          }
          var targetContainers = queuedEvent.targetContainers;
          while (targetContainers.length > 0) {
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
              {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
              }
            } else {
              var _fiber3 = getInstanceFromNode(nextBlockedOn);
              if (_fiber3 !== null) {
                attemptContinuousHydration(_fiber3);
              }
              queuedEvent.blockedOn = nextBlockedOn;
              return false;
            }
            targetContainers.shift();
          }
          return true;
        }
        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
          if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
            map.delete(key);
          }
        }
        function replayUnblockedEvents() {
          hasScheduledReplayAttempt = false;
          if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
            queuedFocus = null;
          }
          if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
            queuedDrag = null;
          }
          if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
            queuedMouse = null;
          }
          queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
          queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
        }
        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
              hasScheduledReplayAttempt = true;
              Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
          }
        }
        function retryIfBlockedOn(unblocked) {
          if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
            for (var i = 1; i < queuedDiscreteEvents.length; i++) {
              var queuedEvent = queuedDiscreteEvents[i];
              if (queuedEvent.blockedOn === unblocked) {
                queuedEvent.blockedOn = null;
              }
            }
          }
          if (queuedFocus !== null) {
            scheduleCallbackIfUnblocked(queuedFocus, unblocked);
          }
          if (queuedDrag !== null) {
            scheduleCallbackIfUnblocked(queuedDrag, unblocked);
          }
          if (queuedMouse !== null) {
            scheduleCallbackIfUnblocked(queuedMouse, unblocked);
          }
          var unblock = function(queuedEvent2) {
            return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
          };
          queuedPointers.forEach(unblock);
          queuedPointerCaptures.forEach(unblock);
          for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) {
              queuedTarget.blockedOn = null;
            }
          }
          while (queuedExplicitHydrationTargets.length > 0) {
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) {
              break;
            } else {
              attemptExplicitHydrationTarget(nextExplicitTarget);
              if (nextExplicitTarget.blockedOn === null) {
                queuedExplicitHydrationTargets.shift();
              }
            }
          }
        }
        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
          var eventPriority = getEventPriority(domEventName);
          var listenerWrapper;
          switch (eventPriority) {
            case DiscreteEventPriority:
              listenerWrapper = dispatchDiscreteEvent;
              break;
            case ContinuousEventPriority:
              listenerWrapper = dispatchContinuousEvent;
              break;
            case DefaultEventPriority:
            default:
              listenerWrapper = dispatchEvent;
              break;
          }
          return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        }
        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (!_enabled) {
            return;
          }
          {
            dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          }
        }
        function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
          }
          if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
          }
          clearIfContinuousEvent(domEventName, nativeEvent);
          if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while (blockedOn !== null) {
              var fiber = getInstanceFromNode(blockedOn);
              if (fiber !== null) {
                attemptSynchronousHydration(fiber);
              }
              var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
              if (nextBlockedOn === null) {
                dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
              }
              if (nextBlockedOn === blockedOn) {
                break;
              }
              blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) {
              nativeEvent.stopPropagation();
            }
            return;
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
        var return_targetInst = null;
        function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return_targetInst = null;
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) {
              targetInst = null;
            } else {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  return instance;
                }
                targetInst = null;
              } else if (tag === HostRoot) {
                var root3 = nearestMounted.stateNode;
                if (isRootDehydrated(root3)) {
                  return getContainerFromFiber(nearestMounted);
                }
                targetInst = null;
              } else if (nearestMounted !== targetInst) {
                targetInst = null;
              }
            }
          }
          return_targetInst = targetInst;
          return null;
        }
        function getEventPriority(domEventName) {
          switch (domEventName) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return ContinuousEventPriority;
            case "message": {
              var schedulerPriority = getCurrentPriorityLevel();
              switch (schedulerPriority) {
                case ImmediatePriority:
                  return DiscreteEventPriority;
                case UserBlockingPriority:
                  return ContinuousEventPriority;
                case NormalPriority:
                case LowPriority:
                  return DefaultEventPriority;
                case IdlePriority:
                  return IdleEventPriority;
                default:
                  return DefaultEventPriority;
              }
            }
            default:
              return DefaultEventPriority;
          }
        }
        function addEventBubbleListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, false);
          return listener;
        }
        function addEventCaptureListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, true);
          return listener;
        }
        function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            capture: true,
            passive
          });
          return listener;
        }
        function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            passive
          });
          return listener;
        }
        var root2 = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root2 = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root2 = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start;
          var startValue = startText;
          var startLength = startValue.length;
          var end;
          var endValue = getText();
          var endLength = endValue.length;
          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }
          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }
          var sliceTail = end > 1 ? 1 - end : void 0;
          fallbackText = endValue.slice(start, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ("value" in root2) {
            return root2.value;
          }
          return root2.textContent;
        }
        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;
          if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function createSyntheticEvent(Interface) {
          function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for (var _propName in Interface) {
              if (!Interface.hasOwnProperty(_propName)) {
                continue;
              }
              var normalize = Interface[_propName];
              if (normalize) {
                this[_propName] = normalize(nativeEvent);
              } else {
                this[_propName] = nativeEvent[_propName];
              }
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }
          assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== "unknown") {
                event.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== "unknown") {
                event.cancelBubble = true;
              }
              this.isPropagationStopped = functionThatReturnsTrue;
            },
            persist: function() {
            },
            isPersistent: functionThatReturnsTrue
          });
          return SyntheticBaseEvent;
        }
        var EventInterface = {
          eventPhase: 0,
          bubbles: 0,
          cancelable: 0,
          timeStamp: function(event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: 0,
          isTrusted: 0
        };
        var SyntheticEvent = createSyntheticEvent(EventInterface);
        var UIEventInterface = assign({}, EventInterface, {
          view: 0,
          detail: 0
        });
        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
        var lastMovementX;
        var lastMovementY;
        var lastMouseEvent;
        function updateMouseMovementPolyfillState(event) {
          if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
              lastMovementX = event.screenX - lastMouseEvent.screenX;
              lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
              lastMovementX = 0;
              lastMovementY = 0;
            }
            lastMouseEvent = event;
          }
        }
        var MouseEventInterface = assign({}, UIEventInterface, {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          pageX: 0,
          pageY: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          getModifierState: getEventModifierState,
          button: 0,
          buttons: 0,
          relatedTarget: function(event) {
            if (event.relatedTarget === void 0)
              return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
          },
          movementX: function(event) {
            if ("movementX" in event) {
              return event.movementX;
            }
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
          },
          movementY: function(event) {
            if ("movementY" in event) {
              return event.movementY;
            }
            return lastMovementY;
          }
        });
        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
        var DragEventInterface = assign({}, MouseEventInterface, {
          dataTransfer: 0
        });
        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
        var FocusEventInterface = assign({}, UIEventInterface, {
          relatedTarget: 0
        });
        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
        var AnimationEventInterface = assign({}, EventInterface, {
          animationName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
        var ClipboardEventInterface = assign({}, EventInterface, {
          clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
          }
        });
        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
        var CompositionEventInterface = assign({}, EventInterface, {
          data: 0
        });
        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
        var SyntheticInputEvent = SyntheticCompositionEvent;
        var normalizeKey = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        };
        var translateToKey = {
          "8": "Backspace",
          "9": "Tab",
          "12": "Clear",
          "13": "Enter",
          "16": "Shift",
          "17": "Control",
          "18": "Alt",
          "19": "Pause",
          "20": "CapsLock",
          "27": "Escape",
          "32": " ",
          "33": "PageUp",
          "34": "PageDown",
          "35": "End",
          "36": "Home",
          "37": "ArrowLeft",
          "38": "ArrowUp",
          "39": "ArrowRight",
          "40": "ArrowDown",
          "45": "Insert",
          "46": "Delete",
          "112": "F1",
          "113": "F2",
          "114": "F3",
          "115": "F4",
          "116": "F5",
          "117": "F6",
          "118": "F7",
          "119": "F8",
          "120": "F9",
          "121": "F10",
          "122": "F11",
          "123": "F12",
          "144": "NumLock",
          "145": "ScrollLock",
          "224": "Meta"
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") {
              return key;
            }
          }
          if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
            return translateToKey[nativeEvent.keyCode] || "Unidentified";
          }
          return "";
        }
        var modifierKeyToProp = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey"
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var KeyboardEventInterface = assign({}, UIEventInterface, {
          key: getEventKey,
          code: 0,
          location: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          repeat: 0,
          locale: 0,
          getModifierState: getEventModifierState,
          charCode: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            return 0;
          },
          keyCode: function(event) {
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          },
          which: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          }
        });
        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
        var PointerEventInterface = assign({}, MouseEventInterface, {
          pointerId: 0,
          width: 0,
          height: 0,
          pressure: 0,
          tangentialPressure: 0,
          tiltX: 0,
          tiltY: 0,
          twist: 0,
          pointerType: 0,
          isPrimary: 0
        });
        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
        var TouchEventInterface = assign({}, UIEventInterface, {
          touches: 0,
          targetTouches: 0,
          changedTouches: 0,
          altKey: 0,
          metaKey: 0,
          ctrlKey: 0,
          shiftKey: 0,
          getModifierState: getEventModifierState
        });
        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
        var TransitionEventInterface = assign({}, EventInterface, {
          propertyName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
        var WheelEventInterface = assign({}, MouseEventInterface, {
          deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
          },
          deltaZ: 0,
          deltaMode: 0
        });
        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
        var documentMode = null;
        if (canUseDOM && "documentMode" in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        function registerEvents() {
          registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
          registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
        }
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(domEventName) {
          switch (domEventName) {
            case "compositionstart":
              return "onCompositionStart";
            case "compositionend":
              return "onCompositionEnd";
            case "compositionupdate":
              return "onCompositionUpdate";
          }
        }
        function isFallbackCompositionStart(domEventName, nativeEvent) {
          return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(domEventName, nativeEvent) {
          switch (domEventName) {
            case "keyup":
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
              return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === "object" && "data" in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === "ko";
        }
        var isComposing = false;
        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(domEventName);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) {
              eventType = "onCompositionStart";
            }
          } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
            eventType = "onCompositionEnd";
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === "onCompositionStart") {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === "onCompositionEnd") {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
          if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            if (fallbackData) {
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }
          }
        }
        function getNativeBeforeInputChars(domEventName, nativeEvent) {
          switch (domEventName) {
            case "compositionend":
              return getDataFromCustomEvent(nativeEvent);
            case "keypress":
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case "textInput":
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
          if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (domEventName) {
            case "paste":
              return null;
            case "keypress":
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case "compositionend":
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var chars;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(domEventName, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
          if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            event.data = chars;
          }
        }
        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          "datetime-local": true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === "input") {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === "textarea") {
            return true;
          }
          return false;
        }
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM) {
            return false;
          }
          var eventName = "on" + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
          }
          return isSupported;
        }
        function registerEvents$1() {
          registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
        }
        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
          enqueueStateRestore(target);
          var listeners = accumulateTwoPhaseListeners(inst, "onChange");
          if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === "select" || nodeName === "input" && elem.type === "file";
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var dispatchQueue = [];
          createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, dispatchQueue);
        }
        function runEventInBatch(dispatchQueue) {
          processDispatchQueue(dispatchQueue, 0);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(domEventName, targetInst) {
          if (domEventName === "change") {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM) {
          isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent("onpropertychange", handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent("onpropertychange", handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== "value") {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
          if (domEventName === "focusin") {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (domEventName === "focusout") {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
          if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
        }
        function getTargetInstForClickEvent(domEventName, targetInst) {
          if (domEventName === "click") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
          if (domEventName === "input" || domEventName === "change") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node) {
          var state = node._wrapperState;
          if (!state || !state.controlled || node.type !== "number") {
            return;
          }
          {
            setDefaultValue(node, "number", node.value);
          }
        }
        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventPolyfill;
              handleEventFunc = handleEventsForInputEventPolyfill;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }
          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
              createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
              return;
            }
          }
          if (handleEventFunc) {
            handleEventFunc(domEventName, targetNode, targetInst);
          }
          if (domEventName === "focusout") {
            handleControlledInputBlur(targetNode);
          }
        }
        function registerEvents$2() {
          registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
          registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
          registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
          registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
        }
        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
          var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
          if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
              if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                return;
              }
            }
          }
          if (!isOutEvent && !isOverEvent) {
            return;
          }
          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            win = nativeEventTarget;
          } else {
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }
          var from;
          var to;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
              var nearestMounted = getNearestMountedFiber(to);
              if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
                to = null;
              }
            }
          } else {
            from = null;
            to = targetInst;
          }
          if (from === to) {
            return;
          }
          var SyntheticEventCtor = SyntheticMouseEvent;
          var leaveEventType = "onMouseLeave";
          var enterEventType = "onMouseEnter";
          var eventTypePrefix = "mouse";
          if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
          }
          var fromNode = from == null ? win : getNodeFromInstance(from);
          var toNode = to == null ? win : getNodeFromInstance(to);
          var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
          leave.target = fromNode;
          leave.relatedTarget = toNode;
          var enter = null;
          var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
          }
          accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        function shallowEqual(objA, objB) {
          if (objectIs(objA, objB)) {
            return true;
          }
          if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i = 0; i < keysA.length; i++) {
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
              return false;
            }
          }
          return true;
        }
        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }
        function getNodeForCharacterOffset(root3, offset) {
          var node = getLeafNode(root3);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node) {
            if (node.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node.textContent.length;
              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node,
                  offset: offset - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
          }
        }
        function getOffsets(outerNode) {
          var ownerDocument = outerNode.ownerDocument;
          var win = ownerDocument && ownerDocument.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start = -1;
          var end = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node = outerNode;
          var parentNode = null;
          outer:
            while (true) {
              var next = null;
              while (true) {
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                  start = length + anchorOffset;
                }
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                  end = length + focusOffset;
                }
                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }
                if ((next = node.firstChild) === null) {
                  break;
                }
                parentNode = node;
                node = next;
              }
              while (true) {
                if (node === outerNode) {
                  break outer;
                }
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                  start = length;
                }
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }
              node = next;
            }
          if (start === -1 || end === -1) {
            return null;
          }
          return {
            start,
            end
          };
        }
        function setOffsets(node, offsets) {
          var doc = node.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node.textContent.length;
          var start = Math.min(offsets.start, length);
          var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
          if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
          }
          var startMarker = getNodeForCharacterOffset(node, start);
          var endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }
        function isTextNode(node) {
          return node && node.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node) {
          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
        }
        function isSameOriginFrame(iframe) {
          try {
            return typeof iframe.contentWindow.location.href === "string";
          } catch (err2) {
            return false;
          }
        }
        function getActiveElementDeep() {
          var win = window;
          var element = getActiveElement();
          while (element instanceof win.HTMLIFrameElement) {
            if (isSameOriginFrame(element)) {
              win = element.contentWindow;
            } else {
              return element;
            }
            element = getActiveElement(win.document);
          }
          return element;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === "function") {
              priorFocusedElem.focus();
            }
            for (var i = 0; i < ancestors.length; i++) {
              var info = ancestors[i];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection(input) {
          var selection;
          if ("selectionStart" in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection(input, offsets) {
          var start = offsets.start;
          var end = offsets.end;
          if (end === void 0) {
            end = start;
          }
          if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
        function registerEvents$3() {
          registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
        }
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection$1(node) {
          if ("selectionStart" in node && hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
            return;
          }
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.target = activeElement$1;
            }
          }
        }
        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          switch (domEventName) {
            case "focusin":
              if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                activeElement$1 = targetNode;
                activeElementInst$1 = targetInst;
                lastSelection = null;
              }
              break;
            case "focusout":
              activeElement$1 = null;
              activeElementInst$1 = null;
              lastSelection = null;
              break;
            case "mousedown":
              mouseDown = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = false;
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) {
                break;
              }
            case "keydown":
            case "keyup":
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          }
        }
        function makePrefixMap(styleProp, eventName) {
          var prefixes2 = {};
          prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes2["Webkit" + styleProp] = "webkit" + eventName;
          prefixes2["Moz" + styleProp] = "moz" + eventName;
          return prefixes2;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap("Animation", "AnimationEnd"),
          animationiteration: makePrefixMap("Animation", "AnimationIteration"),
          animationstart: makePrefixMap("Animation", "AnimationStart"),
          transitionend: makePrefixMap("Transition", "TransitionEnd")
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM) {
          style = document.createElement("div").style;
          if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!("TransitionEvent" in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var ANIMATION_END = getVendorPrefixedEventName("animationend");
        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
        var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
        var simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
        function registerSimpleEvent(domEventName, reactName) {
          topLevelEventsToReactNames.set(domEventName, reactName);
          registerTwoPhaseEvent(reactName, [domEventName]);
        }
        function registerSimpleEvents() {
          for (var i = 0; i < simpleEventPluginEvents.length; i++) {
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
          }
          registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
          registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
          registerSimpleEvent(ANIMATION_START, "onAnimationStart");
          registerSimpleEvent("dblclick", "onDoubleClick");
          registerSimpleEvent("focusin", "onFocus");
          registerSimpleEvent("focusout", "onBlur");
          registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
        }
        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (reactName === void 0) {
            return;
          }
          var SyntheticEventCtor = SyntheticEvent;
          var reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0) {
                return;
              }
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2) {
                return;
              }
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
            var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
        registerSimpleEvents();
        registerEvents$2();
        registerEvents$1();
        registerEvents$3();
        registerEvents();
        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
          if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
        }
        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
        function executeDispatch(event, listener, currentTarget) {
          var type = event.type || "unknown-event";
          event.currentTarget = currentTarget;
          invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
          event.currentTarget = null;
        }
        function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
          var previousInstance;
          if (inCapturePhase) {
            for (var i = dispatchListeners.length - 1; i >= 0; i--) {
              var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, listener, currentTarget);
              previousInstance = instance;
            }
          } else {
            for (var _i = 0; _i < dispatchListeners.length; _i++) {
              var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
              if (_instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, _listener, _currentTarget);
              previousInstance = _instance;
            }
          }
        }
        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          for (var i = 0; i < dispatchQueue.length; i++) {
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
          }
          rethrowCaughtError();
        }
        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var dispatchQueue = [];
          extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          processDispatchQueue(dispatchQueue, eventSystemFlags);
        }
        function listenToNonDelegatedEvent(domEventName, targetElement) {
          {
            if (!nonDelegatedEvents.has(domEventName)) {
              error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var isCapturePhaseListener = false;
          var listenerSet = getEventListenerSet(targetElement);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
          {
            if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
              error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var eventSystemFlags = 0;
          if (isCapturePhaseListener) {
            eventSystemFlags |= IS_CAPTURE_PHASE;
          }
          addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
        }
        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
        function listenToAllSupportedEvents(rootContainerElement) {
          if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
              if (domEventName !== "selectionchange") {
                if (!nonDelegatedEvents.has(domEventName)) {
                  listenToNativeEvent(domEventName, false, rootContainerElement);
                }
                listenToNativeEvent(domEventName, true, rootContainerElement);
              }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) {
              if (!ownerDocument[listeningMarker]) {
                ownerDocument[listeningMarker] = true;
                listenToNativeEvent("selectionchange", false, ownerDocument);
              }
            }
          }
        }
        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
          var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
          var isPassiveListener = void 0;
          if (passiveBrowserEventsSupported) {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
              isPassiveListener = true;
            }
          }
          targetContainer = targetContainer;
          var unsubscribeListener;
          if (isCapturePhaseListener) {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
            }
          } else {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
            }
          }
        }
        function isMatchingRootContainer(grandContainer, targetContainer) {
          return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
        }
        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var ancestorInst = targetInst;
          if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer;
            if (targetInst !== null) {
              var node = targetInst;
              mainLoop:
                while (true) {
                  if (node === null) {
                    return;
                  }
                  var nodeTag = node.tag;
                  if (nodeTag === HostRoot || nodeTag === HostPortal) {
                    var container = node.stateNode.containerInfo;
                    if (isMatchingRootContainer(container, targetContainerNode)) {
                      break;
                    }
                    if (nodeTag === HostPortal) {
                      var grandNode = node.return;
                      while (grandNode !== null) {
                        var grandTag = grandNode.tag;
                        if (grandTag === HostRoot || grandTag === HostPortal) {
                          var grandContainer = grandNode.stateNode.containerInfo;
                          if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                            return;
                          }
                        }
                        grandNode = grandNode.return;
                      }
                    }
                    while (container !== null) {
                      var parentNode = getClosestInstanceFromNode(container);
                      if (parentNode === null) {
                        return;
                      }
                      var parentTag = parentNode.tag;
                      if (parentTag === HostComponent || parentTag === HostText) {
                        node = ancestorInst = parentNode;
                        continue mainLoop;
                      }
                      container = container.parentNode;
                    }
                  }
                  node = node.return;
                }
            }
          }
          batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
          });
        }
        function createDispatchListener(instance, listener, currentTarget) {
          return {
            instance,
            listener,
            currentTarget
          };
        }
        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
          var captureName = reactName !== null ? reactName + "Capture" : null;
          var reactEventName = inCapturePhase ? captureName : reactName;
          var listeners = [];
          var instance = targetFiber;
          var lastHostComponent = null;
          while (instance !== null) {
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
            if (tag === HostComponent && stateNode !== null) {
              lastHostComponent = stateNode;
              if (reactEventName !== null) {
                var listener = getListener(instance, reactEventName);
                if (listener != null) {
                  listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
              }
            }
            if (accumulateTargetOnly) {
              break;
            }
            instance = instance.return;
          }
          return listeners;
        }
        function accumulateTwoPhaseListeners(targetFiber, reactName) {
          var captureName = reactName + "Capture";
          var listeners = [];
          var instance = targetFiber;
          while (instance !== null) {
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              var captureListener = getListener(instance, captureName);
              if (captureListener != null) {
                listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
              }
              var bubbleListener = getListener(instance, reactName);
              if (bubbleListener != null) {
                listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
              }
            }
            instance = instance.return;
          }
          return listeners;
        }
        function getParent(inst) {
          if (inst === null) {
            return null;
          }
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var nodeA = instA;
          var nodeB = instB;
          var depthA = 0;
          for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            nodeA = getParent(nodeA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            nodeB = getParent(nodeB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
              return nodeA;
            }
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
          }
          return null;
        }
        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
          var registrationName = event._reactName;
          var listeners = [];
          var instance = target;
          while (instance !== null) {
            if (instance === common) {
              break;
            }
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) {
              break;
            }
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              if (inCapturePhase) {
                var captureListener = getListener(instance, registrationName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
              } else if (!inCapturePhase) {
                var bubbleListener = getListener(instance, registrationName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
            }
            instance = instance.return;
          }
          if (listeners.length !== 0) {
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          if (from !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
          }
          if (to !== null && enterEvent !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
          }
        }
        function getListenerSetKey(domEventName, capture) {
          return domEventName + "__" + (capture ? "capture" : "bubble");
        }
        var didWarnInvalidHydration = false;
        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
        var AUTOFOCUS = "autoFocus";
        var CHILDREN = "children";
        var STYLE = "style";
        var HTML$1 = "__html";
        var warnedUnknownTags;
        var validatePropertiesInDevelopment;
        var warnForPropDifference;
        var warnForExtraAttributes;
        var warnForInvalidEventListener;
        var canDiffStyleForHydrationWarning;
        var normalizeHTML;
        {
          warnedUnknownTags = {
            dialog: true,
            webview: true
          };
          validatePropertiesInDevelopment = function(type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, {
              registrationNameDependencies,
              possibleRegistrationNames
            });
          };
          canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
          warnForPropDifference = function(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function(name) {
              names.push(name);
            });
            error("Extra attributes from the server: %s", names);
          };
          warnForInvalidEventListener = function(registrationName, listener) {
            if (listener === false) {
              error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
            } else {
              error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
            }
          };
          normalizeHTML = function(parent, html) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }
        var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
        var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
        function normalizeMarkupForTextOrAttribute(markup) {
          {
            checkHtmlStringCoercion(markup);
          }
          var markupString = typeof markup === "string" ? markup : "" + markup;
          return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
        }
        function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
          var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
          var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
          if (normalizedServerText === normalizedClientText) {
            return;
          }
          if (shouldWarnDev) {
            {
              if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
              }
            }
          }
          if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
            throw new Error("Text content does not match server-rendered HTML.");
          }
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop() {
        }
        function trapClickOnNonInteractiveElement(node) {
          node.onclick = noop;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === "number") {
                setTextContent(domElement, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement(type, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag;
          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE) {
            namespaceURI = getIntrinsicNamespace(type);
          }
          if (namespaceURI === HTML_NAMESPACE) {
            {
              isCustomComponentTag = isCustomComponent(type, props);
              if (!isCustomComponentTag && type !== type.toLowerCase()) {
                error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
            if (type === "script") {
              var div = ownerDocument.createElement("div");
              div.innerHTML = "<script><\/script>";
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") {
              domElement = ownerDocument.createElement(type, {
                is: props.is
              });
            } else {
              domElement = ownerDocument.createElement(type);
              if (type === "select") {
                var node = domElement;
                if (props.multiple) {
                  node.multiple = true;
                } else if (props.size) {
                  node.size = props.size;
                }
              }
            }
          } else {
            domElement = ownerDocument.createElementNS(namespaceURI, type);
          }
          {
            if (namespaceURI === HTML_NAMESPACE) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
          }
          var props;
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              props = rawProps;
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              props = rawProps;
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              props = rawProps;
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              props = rawProps;
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              props = rawProps;
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "option":
              postMountWrapper$1(domElement, rawProps);
              break;
            case "select":
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps;
          var nextProps;
          switch (tag) {
            case "input":
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "select":
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "textarea":
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey;
          var styleName;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = "";
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
              ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : void 0;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string" || typeof nextProp === "number") {
                (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            }
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case "input":
              updateWrapper(domElement, nextRawProps);
              break;
            case "textarea":
              updateWrapper$1(domElement, nextRawProps);
              break;
            case "select":
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
          var isCustomComponentTag;
          var extraAttributeNames;
          {
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
          }
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = /* @__PURE__ */ new Set();
            var attributes = domElement.attributes;
            for (var _i = 0; _i < attributes.length; _i++) {
              var name = attributes[_i].name.toLowerCase();
              switch (name) {
                case "value":
                  break;
                case "checked":
                  break;
                case "selected":
                  break;
                default:
                  extraAttributeNames.add(attributes[_i].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                if (domElement.textContent !== nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === "number") {
                if (domElement.textContent !== "" + nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, "" + nextProp];
                }
              }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (shouldWarnDev && true && typeof isCustomComponentTag === "boolean") {
              var serverValue = void 0;
              var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
              if (rawProps[SUPPRESS_HYDRATION_WARNING] === true)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                ;
              else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  var expectedHTML = normalizeHTML(domElement, nextHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                }
              } else if (propKey === STYLE) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                var dontWarnCustomElement = enableCustomElementPropertySupport;
                if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (shouldWarnDev) {
              if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                warnForExtraAttributes(extraAttributeNames);
              }
            }
          }
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "select":
            case "option":
              break;
            default:
              if (typeof rawProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text, isConcurrentMode) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === "") {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$3(domElement, tag, props) {
          switch (tag) {
            case "input":
              restoreControlledState(domElement, props);
              return;
            case "textarea":
              restoreControlledState$2(domElement, props);
              return;
            case "select":
              restoreControlledState$1(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function() {
        };
        var updatedAncestorInfo = function() {
        };
        {
          var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
          var inScopeTags = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            "foreignObject",
            "desc",
            "title"
          ];
          var buttonScopeTags = inScopeTags.concat(["button"]);
          var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function(oldInfo, tag) {
            var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
            var info = {
              tag
            };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === "form") {
              ancestorInfo.formTag = info;
            }
            if (tag === "a") {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === "button") {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === "nobr") {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === "p") {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === "li") {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === "dd" || tag === "dt") {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function(tag, parentTag) {
            switch (parentTag) {
              case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
              case "optgroup":
                return tag === "option" || tag === "#text";
              case "option":
                return tag === "#text";
              case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
              case "tbody":
              case "thead":
              case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
              case "colgroup":
                return tag === "col" || tag === "template";
              case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
              case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
              case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
              case "frameset":
                return tag === "frame";
              case "#document":
                return tag === "html";
            }
            switch (tag) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
              case "rp":
              case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frameset":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function(tag, ancestorInfo) {
            switch (tag) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return ancestorInfo.pTagInButtonScope;
              case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case "li":
                return ancestorInfo.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
              case "button":
                return ancestorInfo.buttonTagInScope;
              case "a":
                return ancestorInfo.aTagInScope;
              case "nobr":
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn$1 = {};
          validateDOMNesting = function(childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              if (childTag != null) {
                error("validateDOMNesting: when childText is passed, childTag should be null");
              }
              childTag = "#text";
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (didWarn$1[warnKey]) {
              return;
            }
            didWarn$1[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = "";
            if (childTag === "#text") {
              if (/\S/.test(childText)) {
                tagDisplayName = "Text nodes";
              } else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
              }
            } else {
              tagDisplayName = "<" + childTag + ">";
            }
            if (invalidParent) {
              var info = "";
              if (ancestorTag === "table" && childTag === "tr") {
                info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
              }
              error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
            } else {
              error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          };
        }
        var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
        var SUSPENSE_START_DATA = "$";
        var SUSPENSE_END_DATA = "/$";
        var SUSPENSE_PENDING_START_DATA = "$?";
        var SUSPENSE_FALLBACK_START_DATA = "$!";
        var STYLE$1 = "style";
        var eventsEnabled = null;
        var selectionInformation = null;
        function getRootHostContext(rootContainerInstance) {
          var type;
          var namespace;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE: {
              type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
              var root3 = rootContainerInstance.documentElement;
              namespace = root3 ? root3.namespaceURI : getChildNamespace(null, "");
              break;
            }
            default: {
              var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container.namespaceURI || null;
              type = container.tagName;
              namespace = getChildNamespace(ownNamespace, type);
              break;
            }
          }
          {
            var validatedTag = type.toLowerCase();
            var ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var namespace = getChildNamespace(parentHostContextDev.namespace, type);
            var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getPublicInstance(instance) {
          return instance;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          var activeInstance = null;
          setEnabled(false);
          return activeInstance;
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          setEnabled(eventsEnabled);
          eventsEnabled = null;
          selectionInformation = null;
        }
        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type, null, hostContextDev.ancestorInfo);
            if (typeof props.children === "string" || typeof props.children === "number") {
              var string = "" + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type, props, rootContainerInstance);
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!props.autoFocus;
            case "img":
              return true;
            default:
              return false;
          }
        }
        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
              var string = "" + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type, oldProps, newProps);
        }
        function shouldSetTextContent(type, props) {
          return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        function getCurrentEventPriority() {
          var currentEvent = window.event;
          if (currentEvent === void 0) {
            return DefaultEventPriority;
          }
          return getEventPriority(currentEvent.type);
        }
        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
        var noTimeout = -1;
        var localPromise = typeof Promise === "function" ? Promise : void 0;
        var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
          return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
        } : scheduleTimeout;
        function handleErrorInNextTick(error2) {
          setTimeout(function() {
            throw error2;
          });
        }
        function commitMount(domElement, type, newProps, internalInstanceHandle) {
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              if (newProps.autoFocus) {
                domElement.focus();
              }
              return;
            case "img": {
              if (newProps.src) {
                domElement.src = newProps.src;
              }
              return;
            }
          }
        }
        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
          updateProperties(domElement, updatePayload, type, oldProps, newProps);
          updateFiberProps(domElement, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, "");
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container, child) {
          var parentNode;
          if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
          } else {
            parentNode = container;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container._reactRootContainer;
          if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container, child, beforeChild) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.insertBefore(child, beforeChild);
          } else {
            container.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container, child) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.removeChild(child);
          } else {
            container.removeChild(child);
          }
        }
        function clearSuspenseBoundary(parentInstance, suspenseInstance) {
          var node = suspenseInstance;
          var depth = 0;
          do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
              var data = nextNode.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  parentInstance.removeChild(nextNode);
                  retryIfBlockedOn(suspenseInstance);
                  return;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
                depth++;
              }
            }
            node = nextNode;
          } while (node);
          retryIfBlockedOn(suspenseInstance);
        }
        function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
          if (container.nodeType === COMMENT_NODE) {
            clearSuspenseBoundary(container.parentNode, suspenseInstance);
          } else if (container.nodeType === ELEMENT_NODE) {
            clearSuspenseBoundary(container, suspenseInstance);
          }
          retryIfBlockedOn(container);
        }
        function hideInstance(instance) {
          instance = instance;
          var style2 = instance.style;
          if (typeof style2.setProperty === "function") {
            style2.setProperty("display", "none", "important");
          } else {
            style2.display = "none";
          }
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = "";
        }
        function unhideInstance(instance, props) {
          instance = instance;
          var styleProp = props[STYLE$1];
          var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
          instance.style.display = dangerousStyleValue("display", display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        function clearContainer(container) {
          if (container.nodeType === ELEMENT_NODE) {
            container.textContent = "";
          } else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) {
              container.removeChild(container.documentElement);
            }
          }
        }
        function canHydrateInstance(instance, type, props) {
          if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
            return null;
          }
          return instance;
        }
        function canHydrateTextInstance(instance, text) {
          if (text === "" || instance.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance;
        }
        function canHydrateSuspenseInstance(instance) {
          if (instance.nodeType !== COMMENT_NODE) {
            return null;
          }
          return instance;
        }
        function isSuspenseInstancePending(instance) {
          return instance.data === SUSPENSE_PENDING_START_DATA;
        }
        function isSuspenseInstanceFallback(instance) {
          return instance.data === SUSPENSE_FALLBACK_START_DATA;
        }
        function getSuspenseInstanceFallbackErrorDetails(instance) {
          var dataset = instance.nextSibling && instance.nextSibling.dataset;
          var digest, message, stack;
          if (dataset) {
            digest = dataset.dgst;
            {
              message = dataset.msg;
              stack = dataset.stck;
            }
          }
          {
            return {
              message,
              digest,
              stack
            };
          }
        }
        function registerSuspenseInstanceRetry(instance, callback) {
          instance._reactRetry = callback;
        }
        function getNextHydratable(node) {
          for (; node != null; node = node.nextSibling) {
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
              break;
            }
            if (nodeType === COMMENT_NODE) {
              var nodeData = node.data;
              if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
                break;
              }
              if (nodeData === SUSPENSE_END_DATA) {
                return null;
              }
            }
          }
          return node;
        }
        function getNextHydratableSibling(instance) {
          return getNextHydratable(instance.nextSibling);
        }
        function getFirstHydratableChild(parentInstance) {
          return getNextHydratable(parentInstance.firstChild);
        }
        function getFirstHydratableChildWithinContainer(parentContainer) {
          return getNextHydratable(parentContainer.firstChild);
        }
        function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
          return getNextHydratable(parentInstance.nextSibling);
        }
        function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, instance);
          updateFiberProps(instance, props);
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedText(textInstance, text);
        }
        function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, suspenseInstance);
        }
        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
          var node = suspenseInstance.nextSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  return getNextHydratableSibling(node);
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                depth++;
              }
            }
            node = node.nextSibling;
          }
          return null;
        }
        function getParentSuspenseInstance(targetInstance) {
          var node = targetInstance.previousSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                if (depth === 0) {
                  return node;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_END_DATA) {
                depth++;
              }
            }
            node = node.previousSibling;
          }
          return null;
        }
        function commitHydratedContainer(container) {
          retryIfBlockedOn(container);
        }
        function commitHydratedSuspenseInstance(suspenseInstance) {
          retryIfBlockedOn(suspenseInstance);
        }
        function shouldDeleteUnhydratedTailInstances(parentType) {
          return parentType !== "head" && parentType !== "body";
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
          var shouldWarnDev = true;
          checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
          }
        }
        function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
          {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentContainer, instance);
            }
          }
        }
        function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentNode, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentNode, instance);
              }
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentInstance, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentInstance, instance);
              }
            }
          }
        }
        function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type);
          }
        }
        function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedElement(parentNode, type);
          }
        }
        function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedText(parentNode, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedElement(parentInstance, type);
            }
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedText(parentInstance, text);
            }
          }
        }
        function errorHydratingContainer(parentContainer) {
          {
            error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
          }
        }
        function preparePortalMount(portalInstance) {
          listenToAllSupportedEvents(portalInstance);
        }
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = "__reactFiber$" + randomKey;
        var internalPropsKey = "__reactProps$" + randomKey;
        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
        var internalEventHandlersKey = "__reactEvents$" + randomKey;
        var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
        var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
        function detachDeletedInstance(node) {
          delete node[internalInstanceKey];
          delete node[internalPropsKey];
          delete node[internalEventHandlersKey];
          delete node[internalEventHandlerListenersKey];
          delete node[internalEventHandlesSetKey];
        }
        function precacheFiberNode(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }
        function markContainerAsRoot(hostRoot, node) {
          node[internalContainerInstanceKey] = hostRoot;
        }
        function unmarkContainerAsRoot(node) {
          node[internalContainerInstanceKey] = null;
        }
        function isContainerMarkedAsRoot(node) {
          return !!node[internalContainerInstanceKey];
        }
        function getClosestInstanceFromNode(targetNode) {
          var targetInst = targetNode[internalInstanceKey];
          if (targetInst) {
            return targetInst;
          }
          var parentNode = targetNode.parentNode;
          while (parentNode) {
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
              var alternate = targetInst.alternate;
              if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                var suspenseInstance = getParentSuspenseInstance(targetNode);
                while (suspenseInstance !== null) {
                  var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                  if (targetSuspenseInst) {
                    return targetSuspenseInst;
                  }
                  suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                }
              }
              return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
          }
          return null;
        }
        function getInstanceFromNode(node) {
          var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          throw new Error("getNodeFromInstance: Invalid argument.");
        }
        function getFiberCurrentPropsFromNode(node) {
          return node[internalPropsKey] || null;
        }
        function updateFiberProps(node, props) {
          node[internalPropsKey] = props;
        }
        function getEventListenerSet(node) {
          var elementListenerSet = node[internalEventHandlersKey];
          if (elementListenerSet === void 0) {
            elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set();
          }
          return elementListenerSet;
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has2 = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has2(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var valueStack = [];
        var fiberStack;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue) {
          return {
            current: defaultValue
          };
        }
        function pop(cursor, fiber) {
          if (index < 0) {
            {
              error("Unexpected pop.");
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              error("Unexpected Fiber popped.");
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push(cursor, value, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value;
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
          {
            if (didPushOwnContextIfProvider && isContextProvider(Component)) {
              return previousContext;
            }
            return contextStackCursor.current;
          }
        }
        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
          {
            var instance = workInProgress2.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }
        }
        function getMaskedContext(workInProgress2, unmaskedContext) {
          {
            var type = workInProgress2.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var instance = workInProgress2.stateNode;
            if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromFiber(workInProgress2) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            if (instance) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return context;
          }
        }
        function hasContextChanged() {
          {
            return didPerformWorkStackCursor.current;
          }
        }
        function isContextProvider(type) {
          {
            var childContextTypes = type.childContextTypes;
            return childContextTypes !== null && childContextTypes !== void 0;
          }
        }
        function popContext(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function popTopLevelContextObject(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function pushTopLevelContextObject(fiber, context, didChange) {
          {
            if (contextStackCursor.current !== emptyContextObject) {
              throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
            }
            push(contextStackCursor, context, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }
        }
        function processChildContext(fiber, type, parentContext) {
          {
            var instance = fiber.stateNode;
            var childContextTypes = type.childContextTypes;
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromFiber(fiber) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromFiber(fiber) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        function pushContextProvider(workInProgress2) {
          {
            var instance = workInProgress2.stateNode;
            var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
            previousContext = contextStackCursor.current;
            push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
            push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
            return true;
          }
        }
        function invalidateContextProvider(workInProgress2, type, didChange) {
          {
            var instance = workInProgress2.stateNode;
            if (!instance) {
              throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
            }
            if (didChange) {
              var mergedContext = processChildContext(workInProgress2, type, previousContext);
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;
              pop(didPerformWorkStackCursor, workInProgress2);
              pop(contextStackCursor, workInProgress2);
              push(contextStackCursor, mergedContext, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            } else {
              pop(didPerformWorkStackCursor, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            }
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          {
            if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
              throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
            }
            var node = fiber;
            do {
              switch (node.tag) {
                case HostRoot:
                  return node.stateNode.context;
                case ClassComponent: {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode.__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
              }
              node = node.return;
            } while (node !== null);
            throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        var LegacyRoot = 0;
        var ConcurrentRoot = 1;
        var syncQueue = null;
        var includesLegacySyncCallbacks = false;
        var isFlushingSyncQueue = false;
        function scheduleSyncCallback(callback) {
          if (syncQueue === null) {
            syncQueue = [callback];
          } else {
            syncQueue.push(callback);
          }
        }
        function scheduleLegacySyncCallback(callback) {
          includesLegacySyncCallbacks = true;
          scheduleSyncCallback(callback);
        }
        function flushSyncCallbacksOnlyInLegacyMode() {
          if (includesLegacySyncCallbacks) {
            flushSyncCallbacks();
          }
        }
        function flushSyncCallbacks() {
          if (!isFlushingSyncQueue && syncQueue !== null) {
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
              var isSync = true;
              var queue = syncQueue;
              setCurrentUpdatePriority(DiscreteEventPriority);
              for (; i < queue.length; i++) {
                var callback = queue[i];
                do {
                  callback = callback(isSync);
                } while (callback !== null);
              }
              syncQueue = null;
              includesLegacySyncCallbacks = false;
            } catch (error2) {
              if (syncQueue !== null) {
                syncQueue = syncQueue.slice(i + 1);
              }
              scheduleCallback(ImmediatePriority, flushSyncCallbacks);
              throw error2;
            } finally {
              setCurrentUpdatePriority(previousUpdatePriority);
              isFlushingSyncQueue = false;
            }
          }
          return null;
        }
        var forkStack = [];
        var forkStackIndex = 0;
        var treeForkProvider = null;
        var treeForkCount = 0;
        var idStack = [];
        var idStackIndex = 0;
        var treeContextProvider = null;
        var treeContextId = 1;
        var treeContextOverflow = "";
        function isForkedChild(workInProgress2) {
          warnIfNotHydrating();
          return (workInProgress2.flags & Forked) !== NoFlags;
        }
        function getForksAtLevel(workInProgress2) {
          warnIfNotHydrating();
          return treeForkCount;
        }
        function getTreeId() {
          var overflow = treeContextOverflow;
          var idWithLeadingBit = treeContextId;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeFork(workInProgress2, totalChildren) {
          warnIfNotHydrating();
          forkStack[forkStackIndex++] = treeForkCount;
          forkStack[forkStackIndex++] = treeForkProvider;
          treeForkProvider = workInProgress2;
          treeForkCount = totalChildren;
        }
        function pushTreeId(workInProgress2, totalChildren, index2) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextProvider = workInProgress2;
          var baseIdWithLeadingBit = treeContextId;
          var baseOverflow = treeContextOverflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index2 + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
          }
        }
        function pushMaterializedTreeId(workInProgress2) {
          warnIfNotHydrating();
          var returnFiber = workInProgress2.return;
          if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress2, numberOfForks);
            pushTreeId(workInProgress2, numberOfForks, slotIndex);
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        function popTreeContext(workInProgress2) {
          while (workInProgress2 === treeForkProvider) {
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
          }
          while (workInProgress2 === treeContextProvider) {
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
          }
        }
        function getSuspendedTreeContext() {
          warnIfNotHydrating();
          if (treeContextProvider !== null) {
            return {
              id: treeContextId,
              overflow: treeContextOverflow
            };
          } else {
            return null;
          }
        }
        function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextId = suspendedContext.id;
          treeContextOverflow = suspendedContext.overflow;
          treeContextProvider = workInProgress2;
        }
        function warnIfNotHydrating() {
          {
            if (!getIsHydrating()) {
              error("Expected to be hydrating. This is a bug in React. Please file an issue.");
            }
          }
        }
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        var didSuspendOrErrorDEV = false;
        var hydrationErrors = null;
        function warnIfHydrating() {
          {
            if (isHydrating) {
              error("We should not be hydrating here. This is a bug in React. Please file a bug.");
            }
          }
        }
        function markDidThrowWhileHydratingDEV() {
          {
            didSuspendOrErrorDEV = true;
          }
        }
        function didSuspendOrErrorWhileHydratingDEV() {
          {
            return didSuspendOrErrorDEV;
          }
        }
        function enterHydrationState(fiber) {
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          return true;
        }
        function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
          nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          if (treeContext !== null) {
            restoreSuspendedTreeContext(fiber, treeContext);
          }
          return true;
        }
        function warnUnhydratedInstance(returnFiber, instance) {
          {
            switch (returnFiber.tag) {
              case HostRoot: {
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
              }
              case HostComponent: {
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null)
                  didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
              }
            }
          }
        }
        function deleteHydratableInstance(returnFiber, instance) {
          warnUnhydratedInstance(returnFiber, instance);
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance;
          childToDelete.return = returnFiber;
          var deletions = returnFiber.deletions;
          if (deletions === null) {
            returnFiber.deletions = [childToDelete];
            returnFiber.flags |= ChildDeletion;
          } else {
            deletions.push(childToDelete);
          }
        }
        function warnNonhydratedInstance(returnFiber, fiber) {
          {
            if (didSuspendOrErrorDEV) {
              return;
            }
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch (fiber.tag) {
                  case HostComponent:
                    var type = fiber.type;
                    var props = fiber.pendingProps;
                    didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                    break;
                  case HostText:
                    var text = fiber.pendingProps;
                    didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                    break;
                }
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch (fiber.tag) {
                  case HostComponent: {
                    var _type = fiber.type;
                    var _props = fiber.pendingProps;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                    break;
                  }
                  case HostText: {
                    var _text = fiber.pendingProps;
                    var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                    break;
                  }
                }
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null)
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type2 = fiber.type;
                      var _props2 = fiber.pendingProps;
                      didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                      break;
                    case HostText:
                      var _text2 = fiber.pendingProps;
                      didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                      break;
                  }
                break;
              }
              default:
                return;
            }
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.flags = fiber.flags & ~Hydrating | Placement;
          warnNonhydratedInstance(returnFiber, fiber);
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent: {
              var type = fiber.type;
              var props = fiber.pendingProps;
              var instance = canHydrateInstance(nextInstance, type);
              if (instance !== null) {
                fiber.stateNode = instance;
                hydrationParentFiber = fiber;
                nextHydratableInstance = getFirstHydratableChild(instance);
                return true;
              }
              return false;
            }
            case HostText: {
              var text = fiber.pendingProps;
              var textInstance = canHydrateTextInstance(nextInstance, text);
              if (textInstance !== null) {
                fiber.stateNode = textInstance;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            case SuspenseComponent: {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
              if (suspenseInstance !== null) {
                var suspenseState = {
                  dehydrated: suspenseInstance,
                  treeContext: getSuspendedTreeContext(),
                  retryLane: OffscreenLane
                };
                fiber.memoizedState = suspenseState;
                var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                dehydratedFragment.return = fiber;
                fiber.child = dehydratedFragment;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            default:
              return false;
          }
        }
        function shouldClientRenderOnMismatch(fiber) {
          return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
        }
        function throwOnHydrationMismatch(fiber) {
          throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
          }
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          var instance = fiber.stateNode;
          var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          if (shouldUpdate) {
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                  break;
                }
              }
            }
          }
          return shouldUpdate;
        }
        function prepareToHydrateHostSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          hydrateSuspenseInstance(suspenseInstance, fiber);
        }
        function skipPastDehydratedSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
              if (shouldClientRenderOnMismatch(fiber)) {
                warnIfUnhydratedTailNodes(fiber);
                throwOnHydrationMismatch();
              } else {
                while (nextInstance) {
                  deleteHydratableInstance(fiber, nextInstance);
                  nextInstance = getNextHydratableSibling(nextInstance);
                }
              }
            }
          }
          popToNextHostParent(fiber);
          if (fiber.tag === SuspenseComponent) {
            nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
          } else {
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          }
          return true;
        }
        function hasUnhydratedTailNodes() {
          return isHydrating && nextHydratableInstance !== null;
        }
        function warnIfUnhydratedTailNodes(fiber) {
          var nextInstance = nextHydratableInstance;
          while (nextInstance) {
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
          }
        }
        function resetHydrationState() {
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
          didSuspendOrErrorDEV = false;
        }
        function upgradeHydrationErrorsToRecoverable() {
          if (hydrationErrors !== null) {
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
          }
        }
        function getIsHydrating() {
          return isHydrating;
        }
        function queueHydrationError(error2) {
          if (hydrationErrors === null) {
            hydrationErrors = [error2];
          } else {
            hydrationErrors.push(error2);
          }
        }
        var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
        var NoTransition = null;
        function requestCurrentTransition() {
          return ReactCurrentBatchConfig$1.transition;
        }
        var ReactStrictModeWarnings = {
          recordUnsafeLifecycleWarnings: function(fiber, instance) {
          },
          flushPendingUnsafeLifecycleWarnings: function() {
          },
          recordLegacyContextWarning: function(fiber, instance) {
          },
          flushLegacyContextWarning: function() {
          },
          discardPendingWarnings: function() {
          }
        };
        {
          var findStrictRoot = function(fiber) {
            var maybeStrictRoot = null;
            var node = fiber;
            while (node !== null) {
              if (node.mode & StrictLegacyMode) {
                maybeStrictRoot = node;
              }
              node = node.return;
            }
            return maybeStrictRoot;
          };
          var setToSortedString = function(set2) {
            var array = [];
            set2.forEach(function(value) {
              array.push(value);
            });
            return array.sort().join(", ");
          };
          var pendingComponentWillMountWarnings = [];
          var pendingUNSAFE_ComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUNSAFE_ComponentWillUpdateWarnings = [];
          var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") {
              pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
              pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
            var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillMountWarnings.length > 0) {
              pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillMountWarnings = [];
            }
            var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
              pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillMountWarnings = [];
            }
            var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillReceivePropsWarnings = [];
            }
            var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            }
            var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillUpdateWarnings.length > 0) {
              pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillUpdateWarnings = [];
            }
            var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
              pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
            }
            if (UNSAFE_componentWillMountUniqueNames.size > 0) {
              var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
              error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
            }
            if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
              error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
            }
            if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
              error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
            }
            if (componentWillMountUniqueNames.size > 0) {
              var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
              warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
            }
            if (componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
              warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
            }
            if (componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
              warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
            }
          };
          var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
              if (warningsForRoot === void 0) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function() {
            pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
              if (fiberArray.length === 0) {
                return;
              }
              var firstFiber = fiberArray[0];
              var uniqueNames = /* @__PURE__ */ new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
              } finally {
                resetCurrentFiber();
              }
            });
          };
          ReactStrictModeWarnings.discardPendingWarnings = function() {
            pendingComponentWillMountWarnings = [];
            pendingUNSAFE_ComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
            pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          };
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        var valueCursor = createCursor(null);
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastFullyObservedContext = null;
        var isDisallowedContextReadInDEV = false;
        function resetContextDependencies() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function enterDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = true;
          }
        }
        function exitDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function pushProvider(providerFiber, context, nextValue) {
          {
            push(valueCursor, context._currentValue, providerFiber);
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
        }
        function popProvider(context, providerFiber) {
          var currentValue = valueCursor.current;
          pop(valueCursor, providerFiber);
          {
            {
              context._currentValue = currentValue;
            }
          }
        }
        function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
          var node = parent;
          while (node !== null) {
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
              node.childLanes = mergeLanes(node.childLanes, renderLanes2);
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
              alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
            }
            if (node === propagationRoot) {
              break;
            }
            node = node.return;
          }
          {
            if (node !== propagationRoot) {
              error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function propagateContextChange(workInProgress2, context, renderLanes2) {
          {
            propagateContextChange_eager(workInProgress2, context, renderLanes2);
          }
        }
        function propagateContextChange_eager(workInProgress2, context, renderLanes2) {
          var fiber = workInProgress2.child;
          if (fiber !== null) {
            fiber.return = workInProgress2;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var list = fiber.dependencies;
            if (list !== null) {
              nextFiber = fiber.child;
              var dependency = list.firstContext;
              while (dependency !== null) {
                if (dependency.context === context) {
                  if (fiber.tag === ClassComponent) {
                    var lane = pickArbitraryLane(renderLanes2);
                    var update = createUpdate(NoTimestamp, lane);
                    update.tag = ForceUpdate;
                    var updateQueue = fiber.updateQueue;
                    if (updateQueue === null)
                      ;
                    else {
                      var sharedQueue = updateQueue.shared;
                      var pending = sharedQueue.pending;
                      if (pending === null) {
                        update.next = update;
                      } else {
                        update.next = pending.next;
                        pending.next = update;
                      }
                      sharedQueue.pending = update;
                    }
                  }
                  fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                  }
                  scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2);
                  list.lanes = mergeLanes(list.lanes, renderLanes2);
                  break;
                }
                dependency = dependency.next;
              }
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
            } else if (fiber.tag === DehydratedFragment) {
              var parentSuspense = fiber.return;
              if (parentSuspense === null) {
                throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
              }
              parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
              var _alternate = parentSuspense.alternate;
              if (_alternate !== null) {
                _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2);
              }
              scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2);
              nextFiber = fiber.sibling;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress2) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress2, renderLanes2) {
          currentlyRenderingFiber = workInProgress2;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          var dependencies = workInProgress2.dependencies;
          if (dependencies !== null) {
            {
              var firstContext = dependencies.firstContext;
              if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                  markWorkInProgressReceivedUpdate();
                }
                dependencies.firstContext = null;
              }
            }
          }
        }
        function readContext(context) {
          {
            if (isDisallowedContextReadInDEV) {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          var value = context._currentValue;
          if (lastFullyObservedContext === context)
            ;
          else {
            var contextItem = {
              context,
              memoizedValue: value,
              next: null
            };
            if (lastContextDependency === null) {
              if (currentlyRenderingFiber === null) {
                throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
              }
              lastContextDependency = contextItem;
              currentlyRenderingFiber.dependencies = {
                lanes: NoLanes,
                firstContext: contextItem
              };
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return value;
        }
        var concurrentQueues = null;
        function pushConcurrentUpdateQueue(queue) {
          if (concurrentQueues === null) {
            concurrentQueues = [queue];
          } else {
            concurrentQueues.push(queue);
          }
        }
        function finishQueueingConcurrentUpdates() {
          if (concurrentQueues !== null) {
            for (var i = 0; i < concurrentQueues.length; i++) {
              var queue = concurrentQueues[i];
              var lastInterleavedUpdate = queue.interleaved;
              if (lastInterleavedUpdate !== null) {
                queue.interleaved = null;
                var firstInterleavedUpdate = lastInterleavedUpdate.next;
                var lastPendingUpdate = queue.pending;
                if (lastPendingUpdate !== null) {
                  var firstPendingUpdate = lastPendingUpdate.next;
                  lastPendingUpdate.next = firstInterleavedUpdate;
                  lastInterleavedUpdate.next = firstPendingUpdate;
                }
                queue.pending = lastInterleavedUpdate;
              }
            }
            concurrentQueues = null;
          }
        }
        function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update.next = update;
            pushConcurrentUpdateQueue(queue);
          } else {
            update.next = interleaved.next;
            interleaved.next = update;
          }
          queue.interleaved = update;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update.next = update;
            pushConcurrentUpdateQueue(queue);
          } else {
            update.next = interleaved.next;
            interleaved.next = update;
          }
          queue.interleaved = update;
        }
        function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update.next = update;
            pushConcurrentUpdateQueue(queue);
          } else {
            update.next = interleaved.next;
            interleaved.next = update;
          }
          queue.interleaved = update;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentRenderForLane(fiber, lane) {
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
          var alternate = sourceFiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, lane);
          }
          {
            if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
          var node = sourceFiber;
          var parent = sourceFiber.return;
          while (parent !== null) {
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) {
              alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            } else {
              {
                if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                  warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                }
              }
            }
            node = parent;
            parent = parent.return;
          }
          if (node.tag === HostRoot) {
            var root3 = node.stateNode;
            return root3;
          } else {
            return null;
          }
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate;
        var currentlyProcessingQueue;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
        }
        function initializeUpdateQueue(fiber) {
          var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
              pending: null,
              interleaved: null,
              lanes: NoLanes
            },
            effects: null
          };
          fiber.updateQueue = queue;
        }
        function cloneUpdateQueue(current2, workInProgress2) {
          var queue = workInProgress2.updateQueue;
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var clone = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: currentQueue.firstBaseUpdate,
              lastBaseUpdate: currentQueue.lastBaseUpdate,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            };
            workInProgress2.updateQueue = clone;
          }
        }
        function createUpdate(eventTime, lane) {
          var update = {
            eventTime,
            lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
          };
          return update;
        }
        function enqueueUpdate(fiber, update, lane) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return null;
          }
          var sharedQueue = updateQueue.shared;
          {
            if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
              error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
              didWarnUpdateInsideUpdate = true;
            }
          }
          if (isUnsafeClassRenderPhaseUpdate()) {
            var pending = sharedQueue.pending;
            if (pending === null) {
              update.next = update;
            } else {
              update.next = pending.next;
              pending.next = update;
            }
            sharedQueue.pending = update;
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
          } else {
            return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
          }
        }
        function entangleTransitions(root3, fiber, lane) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return;
          }
          var sharedQueue = updateQueue.shared;
          if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes;
            queueLanes = intersectLanes(queueLanes, root3.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes;
            markRootEntangled(root3, newQueueLanes);
          }
        }
        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
          var queue = workInProgress2.updateQueue;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var newFirst = null;
              var newLast = null;
              var firstBaseUpdate = queue.firstBaseUpdate;
              if (firstBaseUpdate !== null) {
                var update = firstBaseUpdate;
                do {
                  var clone = {
                    eventTime: update.eventTime,
                    lane: update.lane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  if (newLast === null) {
                    newFirst = newLast = clone;
                  } else {
                    newLast.next = clone;
                    newLast = clone;
                  }
                  update = update.next;
                } while (update !== null);
                if (newLast === null) {
                  newFirst = newLast = capturedUpdate;
                } else {
                  newLast.next = capturedUpdate;
                  newLast = capturedUpdate;
                }
              } else {
                newFirst = newLast = capturedUpdate;
              }
              queue = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = queue;
              return;
            }
          }
          var lastBaseUpdate = queue.lastBaseUpdate;
          if (lastBaseUpdate === null) {
            queue.firstBaseUpdate = capturedUpdate;
          } else {
            lastBaseUpdate.next = capturedUpdate;
          }
          queue.lastBaseUpdate = capturedUpdate;
        }
        function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
          switch (update.tag) {
            case ReplaceState: {
              var payload = update.payload;
              if (typeof payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                var nextState = payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      payload.call(instance, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
                return nextState;
              }
              return payload;
            }
            case CaptureUpdate: {
              workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
            }
            case UpdateState: {
              var _payload = update.payload;
              var partialState;
              if (typeof _payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                partialState = _payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      _payload.call(instance, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
              } else {
                partialState = _payload;
              }
              if (partialState === null || partialState === void 0) {
                return prevState;
              }
              return assign({}, prevState, partialState);
            }
            case ForceUpdate: {
              hasForceUpdate = true;
              return prevState;
            }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
          var queue = workInProgress2.updateQueue;
          hasForceUpdate = false;
          {
            currentlyProcessingQueue = queue.shared;
          }
          var firstBaseUpdate = queue.firstBaseUpdate;
          var lastBaseUpdate = queue.lastBaseUpdate;
          var pendingQueue = queue.shared.pending;
          if (pendingQueue !== null) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            if (lastBaseUpdate === null) {
              firstBaseUpdate = firstPendingUpdate;
            } else {
              lastBaseUpdate.next = firstPendingUpdate;
            }
            lastBaseUpdate = lastPendingUpdate;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
              if (currentLastBaseUpdate !== lastBaseUpdate) {
                if (currentLastBaseUpdate === null) {
                  currentQueue.firstBaseUpdate = firstPendingUpdate;
                } else {
                  currentLastBaseUpdate.next = firstPendingUpdate;
                }
                currentQueue.lastBaseUpdate = lastPendingUpdate;
              }
            }
          }
          if (firstBaseUpdate !== null) {
            var newState = queue.baseState;
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
              var updateLane = update.lane;
              var updateEventTime = update.eventTime;
              if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                var clone = {
                  eventTime: updateEventTime,
                  lane: updateLane,
                  tag: update.tag,
                  payload: update.payload,
                  callback: update.callback,
                  next: null
                };
                if (newLastBaseUpdate === null) {
                  newFirstBaseUpdate = newLastBaseUpdate = clone;
                  newBaseState = newState;
                } else {
                  newLastBaseUpdate = newLastBaseUpdate.next = clone;
                }
                newLanes = mergeLanes(newLanes, updateLane);
              } else {
                if (newLastBaseUpdate !== null) {
                  var _clone = {
                    eventTime: updateEventTime,
                    lane: NoLane,
                    tag: update.tag,
                    payload: update.payload,
                    callback: update.callback,
                    next: null
                  };
                  newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                }
                newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
                var callback = update.callback;
                if (callback !== null && update.lane !== NoLane) {
                  workInProgress2.flags |= Callback;
                  var effects = queue.effects;
                  if (effects === null) {
                    queue.effects = [update];
                  } else {
                    effects.push(update);
                  }
                }
              }
              update = update.next;
              if (update === null) {
                pendingQueue = queue.shared.pending;
                if (pendingQueue === null) {
                  break;
                } else {
                  var _lastPendingUpdate = pendingQueue;
                  var _firstPendingUpdate = _lastPendingUpdate.next;
                  _lastPendingUpdate.next = null;
                  update = _firstPendingUpdate;
                  queue.lastBaseUpdate = _lastPendingUpdate;
                  queue.shared.pending = null;
                }
              }
            } while (true);
            if (newLastBaseUpdate === null) {
              newBaseState = newState;
            }
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate;
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
              var interleaved = lastInterleaved;
              do {
                newLanes = mergeLanes(newLanes, interleaved.lane);
                interleaved = interleaved.next;
              } while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) {
              queue.shared.lanes = NoLanes;
            }
            markSkippedUpdateLanes(newLanes);
            workInProgress2.lanes = newLanes;
            workInProgress2.memoizedState = newState;
          }
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context) {
          if (typeof callback !== "function") {
            throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
          }
          callback.call(context);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance) {
          var effects = finishedQueue.effects;
          finishedQueue.effects = null;
          if (effects !== null) {
            for (var i = 0; i < effects.length; i++) {
              var effect = effects[i];
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
              }
            }
          }
        }
        var fakeInternalInstance = {};
        var emptyRefsObject = new React2.Component().refs;
        var didWarnAboutStateAssignmentForComponent;
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, "_processChildContext", {
            enumerable: false,
            value: function() {
              throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress2.memoizedState;
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          workInProgress2.memoizedState = memoizedState;
          if (workInProgress2.lanes === NoLanes) {
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted,
          enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "setState");
              }
              update.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "replaceState");
              }
              update.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "forceUpdate");
              }
              update.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markForceUpdateScheduled(fiber, lane);
            }
          }
        };
        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance = workInProgress2.stateNode;
          if (typeof instance.shouldComponentUpdate === "function") {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              if (shouldUpdate === void 0) {
                error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
              }
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress2, ctor, newProps) {
          var instance = workInProgress2.stateNode;
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function adoptClassInstance(workInProgress2, instance) {
          instance.updater = classComponentUpdater;
          workInProgress2.stateNode = instance;
          set(instance, workInProgress2);
          {
            instance._reactInternalInstance = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress2, ctor, props) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
          }
          var instance = new ctor(props, context);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                instance = new ctor(props, context);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
          }
          var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
          adoptClassInstance(workInProgress2, instance);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress2, unmaskedContext, context);
          }
          return instance;
        }
        function callComponentWillMount(workInProgress2, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
          var oldState = instance.state;
          if (typeof instance.componentWillReceiveProps === "function") {
            instance.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          if (instance.state !== oldState) {
            {
              var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          {
            checkClassInstance(workInProgress2, ctor, newProps);
          }
          var instance = workInProgress2.stateNode;
          instance.props = newProps;
          instance.state = workInProgress2.memoizedState;
          instance.refs = emptyRefsObject;
          initializeUpdateQueue(workInProgress2);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            instance.context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
            }
            {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
            }
          }
          instance.state = workInProgress2.memoizedState;
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress2, instance);
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof instance.componentDidMount === "function") {
            var fiberFlags = Update;
            {
              fiberFlags |= LayoutStatic;
            }
            if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
              fiberFlags |= MountLayoutDev;
            }
            workInProgress2.flags |= fiberFlags;
          }
        }
        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          var oldProps = workInProgress2.memoizedProps;
          instance.props = oldProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidMount === "function") {
              var fiberFlags = Update;
              {
                fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= fiberFlags;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              if (typeof instance.componentWillMount === "function") {
                instance.componentWillMount();
              }
              if (typeof instance.UNSAFE_componentWillMount === "function") {
                instance.UNSAFE_componentWillMount();
              }
            }
            if (typeof instance.componentDidMount === "function") {
              var _fiberFlags = Update;
              {
                _fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags;
            }
          } else {
            if (typeof instance.componentDidMount === "function") {
              var _fiberFlags2 = Update;
              {
                _fiberFlags2 |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags2 |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags2;
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          cloneUpdateQueue(current2, workInProgress2);
          var unresolvedOldProps = workInProgress2.memoizedProps;
          var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
          instance.props = oldProps;
          var unresolvedNewProps = workInProgress2.pendingProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
              if (typeof instance.componentWillUpdate === "function") {
                instance.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
            }
            if (typeof instance.componentDidUpdate === "function") {
              workInProgress2.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              workInProgress2.flags |= Snapshot;
            }
          } else {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps;
        var didWarnAboutGenerators;
        var didWarnAboutStringRefs;
        var ownerHasKeyUseWarning;
        var ownerHasFunctionTypeWarning;
        var warnForMissingKey = function(child, returnFiber) {
        };
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefs = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function(child, returnFiber) {
            if (child === null || typeof child !== "object") {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            if (typeof child._store !== "object") {
              throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            }
            child._store.validated = true;
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasKeyUseWarning[componentName]) {
              return;
            }
            ownerHasKeyUseWarning[componentName] = true;
            error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
          };
        }
        function coerceRef(returnFiber, current2, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            {
              if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                  {
                    error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                  }
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
            if (element._owner) {
              var owner = element._owner;
              var inst;
              if (owner) {
                var ownerFiber = owner;
                if (ownerFiber.tag !== ClassComponent) {
                  throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                }
                inst = ownerFiber.stateNode;
              }
              if (!inst) {
                throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
              }
              var resolvedInst = inst;
              {
                checkPropStringCoercion(mixedRef, "ref");
              }
              var stringRef = "" + mixedRef;
              if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                return current2.ref;
              }
              var ref = function(value) {
                var refs = resolvedInst.refs;
                if (refs === emptyRefsObject) {
                  refs = resolvedInst.refs = {};
                }
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              if (typeof mixedRef !== "string") {
                throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
              }
              if (!element._owner) {
                throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
              }
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          var childString = Object.prototype.toString.call(newChild);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        function warnOnFunctionType(returnFiber) {
          {
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasFunctionTypeWarning[componentName]) {
              return;
            }
            ownerHasFunctionTypeWarning[componentName] = true;
            error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
        }
        function resolveLazy(lazyType) {
          var payload = lazyType._payload;
          var init = lazyType._init;
          return init(payload);
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [childToDelete];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(childToDelete);
            }
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = /* @__PURE__ */ new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps) {
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              newFiber.flags |= Forked;
              return lastPlacedIndex;
            }
            var current2 = newFiber.alternate;
            if (current2 !== null) {
              var oldIndex = current2.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.flags |= Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.flags |= Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.flags |= Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current2, textContent, lanes) {
            if (current2 === null || current2.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, textContent);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current2, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) {
              return updateFragment2(returnFiber, current2, element.props.children, lanes, element.key);
            }
            if (current2 !== null) {
              if (current2.elementType === elementType || isCompatibleFamilyForHotReloading(current2, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type) {
                var existing = useFiber(current2, element.props);
                existing.ref = coerceRef(returnFiber, current2, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              }
            }
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current2, element);
            created.return = returnFiber;
            return created;
          }
          function updatePortal(returnFiber, current2, portal, lanes) {
            if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, portal.children || []);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment2(returnFiber, current2, fragment, lanes, key) {
            if (current2 === null || current2.tag !== Fragment) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, fragment);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                  _created.ref = coerceRef(returnFiber, null, newChild);
                  _created.return = returnFiber;
                  return _created;
                }
                case REACT_PORTAL_TYPE: {
                  var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                  _created2.return = returnFiber;
                  return _created2;
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return createChild(returnFiber, init(payload), lanes);
                }
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  if (newChild.key === key) {
                    return updateElement(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_PORTAL_TYPE: {
                  if (newChild.key === key) {
                    return updatePortal(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                }
                case REACT_PORTAL_TYPE: {
                  var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
                case REACT_LAZY_TYPE:
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
              }
              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys, returnFiber) {
            {
              if (typeof child !== "object" || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child, returnFiber);
                  var key = child.key;
                  if (typeof key !== "string") {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = /* @__PURE__ */ new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                  break;
                case REACT_LAZY_TYPE:
                  var payload = child._payload;
                  var init = child._init;
                  warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            {
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                if (_newFiber === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              if (getIsHydrating()) {
                var _numberOfForks = newIdx;
                pushTreeFork(returnFiber, _numberOfForks);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
              if (_newFiber2 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks2 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") {
              throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            }
            {
              if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) {
                  error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                }
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) {
                  error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                }
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) {
              throw new Error("An iterable object provided no iterator.");
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, lanes);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              if (getIsHydrating()) {
                var _numberOfForks3 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks3);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks4 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                var elementType = element.type;
                if (elementType === REACT_FRAGMENT_TYPE) {
                  if (child.tag === Fragment) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, element.props.children);
                    existing.return = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  }
                } else {
                  if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var _existing = useFiber(child, element.props);
                    _existing.ref = coerceRef(returnFiber, child, element);
                    _existing.return = returnFiber;
                    {
                      _existing._debugSource = element._source;
                      _existing._debugOwner = element._owner;
                    }
                    return _existing;
                  }
                }
                deleteRemainingChildren(returnFiber, child);
                break;
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || []);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_LAZY_TYPE:
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
              }
              if (isArray(newChild)) {
                return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
              }
              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers2;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current2, workInProgress2) {
          if (current2 !== null && workInProgress2.child !== current2.child) {
            throw new Error("Resuming work not yet implemented.");
          }
          if (workInProgress2.child === null) {
            return;
          }
          var currentChild = workInProgress2.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          workInProgress2.child = newChild;
          newChild.return = workInProgress2;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress2;
          }
          newChild.sibling = null;
        }
        function resetChildFibers(workInProgress2, lanes) {
          var child = workInProgress2.child;
          while (child !== null) {
            resetWorkInProgress(child, lanes);
            child = child.sibling;
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c) {
          if (c === NO_CONTEXT) {
            throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
          }
          return c;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push(rootInstanceStackCursor, nextRootInstance, fiber);
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop(contextStackCursor$1, fiber);
          push(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
          pop(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context = requiredContext(contextStackCursor$1.current);
          return context;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context, fiber.type);
          if (context === nextContext) {
            return;
          }
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
        }
        var DefaultSuspenseContext = 0;
        var SubtreeSuspenseContextMask = 1;
        var InvisibleParentSuspenseContext = 1;
        var ForceSuspenseFallback = 2;
        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
        function hasSuspenseContext(parentContext, flag) {
          return (parentContext & flag) !== 0;
        }
        function setDefaultShallowSuspenseContext(parentContext) {
          return parentContext & SubtreeSuspenseContextMask;
        }
        function setShallowSuspenseContext(parentContext, shallowContext) {
          return parentContext & SubtreeSuspenseContextMask | shallowContext;
        }
        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
          return parentContext | subtreeContext;
        }
        function pushSuspenseContext(fiber, newContext) {
          push(suspenseStackCursor, newContext, fiber);
        }
        function popSuspenseContext(fiber) {
          pop(suspenseStackCursor, fiber);
        }
        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
          var nextState = workInProgress2.memoizedState;
          if (nextState !== null) {
            if (nextState.dehydrated !== null) {
              return true;
            }
            return false;
          }
          var props = workInProgress2.memoizedProps;
          {
            return true;
          }
        }
        function findFirstSuspended(row) {
          var node = row;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                var dehydrated = state.dehydrated;
                if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                  return node;
                }
              }
            } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
              var didSuspend = (node.flags & DidCapture) !== NoFlags;
              if (didSuspend) {
                return node;
              }
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === row) {
              return null;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === row) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        var NoFlags$1 = 0;
        var HasEffect = 1;
        var Insertion = 2;
        var Layout = 4;
        var Passive$1 = 8;
        var workInProgressSources = [];
        function resetWorkInProgressVersions() {
          for (var i = 0; i < workInProgressSources.length; i++) {
            var mutableSource = workInProgressSources[i];
            {
              mutableSource._workInProgressVersionPrimary = null;
            }
          }
          workInProgressSources.length = 0;
        }
        function registerMutableSourceForHydration(root3, mutableSource) {
          var getVersion = mutableSource._getVersion;
          var version = getVersion(mutableSource._source);
          if (root3.mutableSourceEagerHydrationData == null) {
            root3.mutableSourceEagerHydrationData = [mutableSource, version];
          } else {
            root3.mutableSourceEagerHydrationData.push(mutableSource, version);
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
        var didWarnAboutMismatchedHooksForComponent;
        var didWarnUncachedGetSnapshot;
        {
          didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
        }
        var renderLanes = NoLanes;
        var currentlyRenderingFiber$1 = null;
        var currentHook = null;
        var workInProgressHook = null;
        var didScheduleRenderPhaseUpdate = false;
        var didScheduleRenderPhaseUpdateDuringThisPass = false;
        var localIdCounter = 0;
        var globalClientIdCounter = 0;
        var RE_RENDER_LIMIT = 25;
        var currentHookNameInDev = null;
        var hookTypesDev = null;
        var hookTypesUpdateIndexDev = -1;
        var ignorePreviousDependencies = false;
        function mountHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev === null) {
              hookTypesDev = [hookName];
            } else {
              hookTypesDev.push(hookName);
            }
          }
        }
        function updateHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev !== null) {
              hookTypesUpdateIndexDev++;
              if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                warnOnHookMismatchInDev(hookName);
              }
            }
          }
        }
        function checkDepsAreArrayDev(deps) {
          {
            if (deps !== void 0 && deps !== null && !isArray(deps)) {
              error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
            }
          }
        }
        function warnOnHookMismatchInDev(currentHookName) {
          {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
              didWarnAboutMismatchedHooksForComponent.add(componentName);
              if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
                  var oldHookName = hookTypesDev[i];
                  var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                  var row = i + 1 + ". " + oldHookName;
                  while (row.length < secondColumnStart) {
                    row += " ";
                  }
                  row += newHookName + "\n";
                  table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
              }
            }
          }
        }
        function throwInvalidHookError() {
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          {
            if (ignorePreviousDependencies) {
              return false;
            }
          }
          if (prevDeps === null) {
            {
              error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
          renderLanes = nextRenderLanes;
          currentlyRenderingFiber$1 = workInProgress2;
          {
            hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
            hookTypesUpdateIndexDev = -1;
            ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
          }
          workInProgress2.memoizedState = null;
          workInProgress2.updateQueue = null;
          workInProgress2.lanes = NoLanes;
          {
            if (current2 !== null && current2.memoizedState !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
            } else if (hookTypesDev !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
            } else {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
            }
          }
          var children = Component(props, secondArg);
          if (didScheduleRenderPhaseUpdateDuringThisPass) {
            var numberOfReRenders = 0;
            do {
              didScheduleRenderPhaseUpdateDuringThisPass = false;
              localIdCounter = 0;
              if (numberOfReRenders >= RE_RENDER_LIMIT) {
                throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
              }
              numberOfReRenders += 1;
              {
                ignorePreviousDependencies = false;
              }
              currentHook = null;
              workInProgressHook = null;
              workInProgress2.updateQueue = null;
              {
                hookTypesUpdateIndexDev = -1;
              }
              ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
              children = Component(props, secondArg);
            } while (didScheduleRenderPhaseUpdateDuringThisPass);
          }
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          {
            workInProgress2._debugHookTypes = hookTypesDev;
          }
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            currentHookNameInDev = null;
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            if (current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && (current2.mode & ConcurrentMode) !== NoMode) {
              error("Internal React error: Expected static flag was missing. Please notify the React team.");
            }
          }
          didScheduleRenderPhaseUpdate = false;
          if (didRenderTooFewHooks) {
            throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
          }
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          localIdCounter = 0;
          return didRenderIdHook;
        }
        function bailoutHooks(current2, workInProgress2, lanes) {
          workInProgress2.updateQueue = current2.updateQueue;
          if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
            workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
          } else {
            workInProgress2.flags &= ~(Passive | Update);
          }
          current2.lanes = removeLanes(current2.lanes, lanes);
        }
        function resetHooksAfterThrow() {
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          if (didScheduleRenderPhaseUpdate) {
            var hook = currentlyRenderingFiber$1.memoizedState;
            while (hook !== null) {
              var queue = hook.queue;
              if (queue !== null) {
                queue.pending = null;
              }
              hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
          }
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            currentHookNameInDev = null;
            isUpdatingOpaqueValueInRenderPhase = false;
          }
          didScheduleRenderPhaseUpdateDuringThisPass = false;
          localIdCounter = 0;
        }
        function mountWorkInProgressHook() {
          var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
          };
          if (workInProgressHook === null) {
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
          } else {
            workInProgressHook = workInProgressHook.next = hook;
          }
          return workInProgressHook;
        }
        function updateWorkInProgressHook() {
          var nextCurrentHook;
          if (currentHook === null) {
            var current2 = currentlyRenderingFiber$1.alternate;
            if (current2 !== null) {
              nextCurrentHook = current2.memoizedState;
            } else {
              nextCurrentHook = null;
            }
          } else {
            nextCurrentHook = currentHook.next;
          }
          var nextWorkInProgressHook;
          if (workInProgressHook === null) {
            nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
          } else {
            nextWorkInProgressHook = workInProgressHook.next;
          }
          if (nextWorkInProgressHook !== null) {
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
          } else {
            if (nextCurrentHook === null) {
              throw new Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            var newHook = {
              memoizedState: currentHook.memoizedState,
              baseState: currentHook.baseState,
              baseQueue: currentHook.baseQueue,
              queue: currentHook.queue,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            } else {
              workInProgressHook = workInProgressHook.next = newHook;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return {
            lastEffect: null,
            stores: null
          };
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function mountReducer(reducer, initialArg, init) {
          var hook = mountWorkInProgressHook();
          var initialState;
          if (init !== void 0) {
            initialState = init(initialArg);
          } else {
            initialState = initialArg;
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var current2 = currentHook;
          var baseQueue = current2.baseQueue;
          var pendingQueue = queue.pending;
          if (pendingQueue !== null) {
            if (baseQueue !== null) {
              var baseFirst = baseQueue.next;
              var pendingFirst = pendingQueue.next;
              baseQueue.next = pendingFirst;
              pendingQueue.next = baseFirst;
            }
            {
              if (current2.baseQueue !== baseQueue) {
                error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
              }
            }
            current2.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
          }
          if (baseQueue !== null) {
            var first = baseQueue.next;
            var newState = current2.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
              var updateLane = update.lane;
              if (!isSubsetOfLanes(renderLanes, updateLane)) {
                var clone = {
                  lane: updateLane,
                  action: update.action,
                  hasEagerState: update.hasEagerState,
                  eagerState: update.eagerState,
                  next: null
                };
                if (newBaseQueueLast === null) {
                  newBaseQueueFirst = newBaseQueueLast = clone;
                  newBaseState = newState;
                } else {
                  newBaseQueueLast = newBaseQueueLast.next = clone;
                }
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                markSkippedUpdateLanes(updateLane);
              } else {
                if (newBaseQueueLast !== null) {
                  var _clone = {
                    lane: NoLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                  };
                  newBaseQueueLast = newBaseQueueLast.next = _clone;
                }
                if (update.hasEagerState) {
                  newState = update.eagerState;
                } else {
                  var action = update.action;
                  newState = reducer(newState, action);
                }
              }
              update = update.next;
            } while (update !== null && update !== first);
            if (newBaseQueueLast === null) {
              newBaseState = newState;
            } else {
              newBaseQueueLast.next = newBaseQueueFirst;
            }
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
          }
          var lastInterleaved = queue.interleaved;
          if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
              var interleavedLane = interleaved.lane;
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
              markSkippedUpdateLanes(interleavedLane);
              interleaved = interleaved.next;
            } while (interleaved !== lastInterleaved);
          } else if (baseQueue === null) {
            queue.lanes = NoLanes;
          }
          var dispatch = queue.dispatch;
          return [hook.memoizedState, dispatch];
        }
        function rerenderReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var dispatch = queue.dispatch;
          var lastRenderPhaseUpdate = queue.pending;
          var newState = hook.memoizedState;
          if (lastRenderPhaseUpdate !== null) {
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
              var action = update.action;
              newState = reducer(newState, action);
              update = update.next;
            } while (update !== firstRenderPhaseUpdate);
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            if (hook.baseQueue === null) {
              hook.baseState = newState;
            }
            queue.lastRenderedState = newState;
          }
          return [newState, dispatch];
        }
        function mountMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function updateMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = mountWorkInProgressHook();
          var nextSnapshot;
          var isHydrating2 = getIsHydrating();
          if (isHydrating2) {
            if (getServerSnapshot === void 0) {
              throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            }
            nextSnapshot = getServerSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                  error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
          } else {
            nextSnapshot = getSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                  error("The result of getSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
            var root3 = getWorkInProgressRoot();
            if (root3 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root3, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          hook.memoizedState = nextSnapshot;
          var inst = {
            value: nextSnapshot,
            getSnapshot
          };
          hook.queue = inst;
          mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          fiber.flags |= Passive;
          pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
          return nextSnapshot;
        }
        function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = updateWorkInProgressHook();
          var nextSnapshot = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedSnapshot = getSnapshot();
              if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var prevSnapshot = hook.memoizedState;
          var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
          if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
          }
          var inst = hook.queue;
          updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
            var root3 = getWorkInProgressRoot();
            if (root3 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root3, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          return nextSnapshot;
        }
        function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
          fiber.flags |= StoreConsistency;
          var check = {
            getSnapshot,
            value: renderedSnapshot
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [check];
          } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) {
              componentUpdateQueue.stores = [check];
            } else {
              stores.push(check);
            }
          }
        }
        function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
          inst.value = nextSnapshot;
          inst.getSnapshot = getSnapshot;
          if (checkIfSnapshotChanged(inst)) {
            forceStoreRerender(fiber);
          }
        }
        function subscribeToStore(fiber, inst, subscribe) {
          var handleStoreChange = function() {
            if (checkIfSnapshotChanged(inst)) {
              forceStoreRerender(fiber);
            }
          };
          return subscribe(handleStoreChange);
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function forceStoreRerender(fiber) {
          var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          if (root3 !== null) {
            scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
          }
        }
        function mountState(initialState) {
          var hook = mountWorkInProgressHook();
          if (typeof initialState === "function") {
            initialState = initialState();
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateState(initialState) {
          return updateReducer(basicStateReducer);
        }
        function rerenderState(initialState) {
          return rerenderReducer(basicStateReducer);
        }
        function pushEffect(tag, create, destroy, deps) {
          var effect = {
            tag,
            create,
            destroy,
            deps,
            next: null
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = lastEffect.next;
              lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function mountRef(initialValue) {
          var hook = mountWorkInProgressHook();
          {
            var _ref2 = {
              current: initialValue
            };
            hook.memoizedState = _ref2;
            return _ref2;
          }
        }
        function updateRef(initialValue) {
          var hook = updateWorkInProgressHook();
          return hook.memoizedState;
        }
        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
        }
        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var destroy = void 0;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
              var prevDeps = prevEffect.deps;
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                return;
              }
            }
          }
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
        }
        function mountEffect(create, deps) {
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
          } else {
            return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
          }
        }
        function updateEffect(create, deps) {
          return updateEffectImpl(Passive, Passive$1, create, deps);
        }
        function mountInsertionEffect(create, deps) {
          return mountEffectImpl(Update, Insertion, create, deps);
        }
        function updateInsertionEffect(create, deps) {
          return updateEffectImpl(Update, Insertion, create, deps);
        }
        function mountLayoutEffect(create, deps) {
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout, create, deps);
        }
        function updateLayoutEffect(create, deps) {
          return updateEffectImpl(Update, Layout, create, deps);
        }
        function imperativeHandleEffect(create, ref) {
          if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
              refCallback(null);
            };
          } else if (ref !== null && ref !== void 0) {
            var refObject = ref;
            {
              if (!refObject.hasOwnProperty("current")) {
                error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
              }
            }
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
              refObject.current = null;
            };
          }
        }
        function mountImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function updateImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function mountDebugValue(value, formatterFn) {
        }
        var updateDebugValue = mountDebugValue;
        function mountCallback(callback, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function updateCallback(callback, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function mountMemo(nextCreate, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function updateMemo(nextCreate, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function mountDeferredValue(value) {
          var hook = mountWorkInProgressHook();
          hook.memoizedState = value;
          return value;
        }
        function updateDeferredValue(value) {
          var hook = updateWorkInProgressHook();
          var resolvedCurrentHook = currentHook;
          var prevValue = resolvedCurrentHook.memoizedState;
          return updateDeferredValueImpl(hook, prevValue, value);
        }
        function rerenderDeferredValue(value) {
          var hook = updateWorkInProgressHook();
          if (currentHook === null) {
            hook.memoizedState = value;
            return value;
          } else {
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
          }
        }
        function updateDeferredValueImpl(hook, prevValue, value) {
          var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
          if (shouldDeferValue) {
            if (!objectIs(value, prevValue)) {
              var deferredLane = claimNextTransitionLane();
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
              markSkippedUpdateLanes(deferredLane);
              hook.baseState = true;
            }
            return prevValue;
          } else {
            if (hook.baseState) {
              hook.baseState = false;
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
          }
        }
        function startTransition(setPending, callback, options2) {
          var previousPriority = getCurrentUpdatePriority();
          setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
          setPending(true);
          var prevTransition = ReactCurrentBatchConfig$2.transition;
          ReactCurrentBatchConfig$2.transition = {};
          var currentTransition = ReactCurrentBatchConfig$2.transition;
          {
            ReactCurrentBatchConfig$2.transition._updatedFibers = /* @__PURE__ */ new Set();
          }
          try {
            setPending(false);
            callback();
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        function mountTransition() {
          var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1];
          var start = startTransition.bind(null, setPending);
          var hook = mountWorkInProgressHook();
          hook.memoizedState = start;
          return [isPending, start];
        }
        function updateTransition() {
          var _updateState = updateState(), isPending = _updateState[0];
          var hook = updateWorkInProgressHook();
          var start = hook.memoizedState;
          return [isPending, start];
        }
        function rerenderTransition() {
          var _rerenderState = rerenderState(), isPending = _rerenderState[0];
          var hook = updateWorkInProgressHook();
          var start = hook.memoizedState;
          return [isPending, start];
        }
        var isUpdatingOpaqueValueInRenderPhase = false;
        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
          {
            return isUpdatingOpaqueValueInRenderPhase;
          }
        }
        function mountId() {
          var hook = mountWorkInProgressHook();
          var root3 = getWorkInProgressRoot();
          var identifierPrefix = root3.identifierPrefix;
          var id;
          if (getIsHydrating()) {
            var treeId = getTreeId();
            id = ":" + identifierPrefix + "R" + treeId;
            var localId = localIdCounter++;
            if (localId > 0) {
              id += "H" + localId.toString(32);
            }
            id += ":";
          } else {
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
          }
          hook.memoizedState = id;
          return id;
        }
        function updateId() {
          var hook = updateWorkInProgressHook();
          var id = hook.memoizedState;
          return id;
        }
        function dispatchReducerAction(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update);
          } else {
            var root3 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root3 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitionUpdate(root3, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function dispatchSetState(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update);
          } else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
              var lastRenderedReducer = queue.lastRenderedReducer;
              if (lastRenderedReducer !== null) {
                var prevDispatcher;
                {
                  prevDispatcher = ReactCurrentDispatcher$1.current;
                  ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                }
                try {
                  var currentState = queue.lastRenderedState;
                  var eagerState = lastRenderedReducer(currentState, action);
                  update.hasEagerState = true;
                  update.eagerState = eagerState;
                  if (objectIs(eagerState, currentState)) {
                    enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                    return;
                  }
                } catch (error2) {
                } finally {
                  {
                    ReactCurrentDispatcher$1.current = prevDispatcher;
                  }
                }
              }
            }
            var root3 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root3 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitionUpdate(root3, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function isRenderPhaseUpdate(fiber) {
          var alternate = fiber.alternate;
          return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
        }
        function enqueueRenderPhaseUpdate(queue, update) {
          didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
          var pending = queue.pending;
          if (pending === null) {
            update.next = update;
          } else {
            update.next = pending.next;
            pending.next = update;
          }
          queue.pending = update;
        }
        function entangleTransitionUpdate(root3, queue, lane) {
          if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes;
            queueLanes = intersectLanes(queueLanes, root3.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes;
            markRootEntangled(root3, newQueueLanes);
          }
        }
        function markUpdateInDevTools(fiber, lane, action) {
          {
            markStateUpdateScheduled(fiber, lane);
          }
        }
        var ContextOnlyDispatcher = {
          readContext,
          useCallback: throwInvalidHookError,
          useContext: throwInvalidHookError,
          useEffect: throwInvalidHookError,
          useImperativeHandle: throwInvalidHookError,
          useInsertionEffect: throwInvalidHookError,
          useLayoutEffect: throwInvalidHookError,
          useMemo: throwInvalidHookError,
          useReducer: throwInvalidHookError,
          useRef: throwInvalidHookError,
          useState: throwInvalidHookError,
          useDebugValue: throwInvalidHookError,
          useDeferredValue: throwInvalidHookError,
          useTransition: throwInvalidHookError,
          useMutableSource: throwInvalidHookError,
          useSyncExternalStore: throwInvalidHookError,
          useId: throwInvalidHookError,
          unstable_isNewReconciler: enableNewReconciler
        };
        var HooksDispatcherOnMountInDEV = null;
        var HooksDispatcherOnMountWithHookTypesInDEV = null;
        var HooksDispatcherOnUpdateInDEV = null;
        var HooksDispatcherOnRerenderInDEV = null;
        var InvalidNestedHooksDispatcherOnMountInDEV = null;
        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
        {
          var warnInvalidContextAccess = function() {
            error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          };
          var warnInvalidHookAccess = function() {
            error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
          };
          HooksDispatcherOnMountInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              mountHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnMountWithHookTypesInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnUpdateInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnRerenderInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnMountInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnUpdateInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnRerenderInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
        }
        var now$1 = Scheduler.unstable_now;
        var commitTime = 0;
        var layoutEffectStartTime = -1;
        var profilerStartTime = -1;
        var passiveEffectStartTime = -1;
        var currentUpdateIsNested = false;
        var nestedUpdateScheduled = false;
        function isCurrentUpdateNested() {
          return currentUpdateIsNested;
        }
        function markNestedUpdateScheduled() {
          {
            nestedUpdateScheduled = true;
          }
        }
        function resetNestedUpdateFlag() {
          {
            currentUpdateIsNested = false;
            nestedUpdateScheduled = false;
          }
        }
        function syncNestedUpdateFlag() {
          {
            currentUpdateIsNested = nestedUpdateScheduled;
            nestedUpdateScheduled = false;
          }
        }
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          commitTime = now$1();
        }
        function startProfilerTimer(fiber) {
          profilerStartTime = now$1();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = now$1();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function recordLayoutEffectDuration(fiber) {
          if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root3 = parentFiber.stateNode;
                  root3.effectDuration += elapsedTime;
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  parentStateNode.effectDuration += elapsedTime;
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function recordPassiveEffectDuration(fiber) {
          if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root3 = parentFiber.stateNode;
                  if (root3 !== null) {
                    root3.passiveEffectDuration += elapsedTime;
                  }
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  if (parentStateNode !== null) {
                    parentStateNode.passiveEffectDuration += elapsedTime;
                  }
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function startLayoutEffectTimer() {
          layoutEffectStartTime = now$1();
        }
        function startPassiveEffectTimer() {
          passiveEffectStartTime = now$1();
        }
        function transferActualDuration(fiber) {
          var child = fiber.child;
          while (child) {
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
          }
        }
        function createCapturedValueAtFiber(value, source) {
          return {
            value,
            source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
          };
        }
        function createCapturedValue(value, digest, stack) {
          return {
            value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
          };
        }
        function showErrorDialog(boundary, errorInfo) {
          return true;
        }
        function logCapturedError(boundary, errorInfo) {
          try {
            var logError = showErrorDialog(boundary, errorInfo);
            if (logError === false) {
              return;
            }
            var error2 = errorInfo.value;
            if (true) {
              var source = errorInfo.source;
              var stack = errorInfo.stack;
              var componentStack = stack !== null ? stack : "";
              if (error2 != null && error2._suppressLogging) {
                if (boundary.tag === ClassComponent) {
                  return;
                }
                console["error"](error2);
              }
              var componentName = source ? getComponentNameFromFiber(source) : null;
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              if (boundary.tag === HostRoot) {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
              } else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
              }
              var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console["error"](combinedMessage);
            } else {
              console["error"](error2);
            }
          } catch (e) {
            setTimeout(function() {
              throw e;
            });
          }
        }
        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          update.payload = {
            element: null
          };
          var error2 = errorInfo.value;
          update.callback = function() {
            onUncaughtError(error2);
            logCapturedError(fiber, errorInfo);
          };
          return update;
        }
        function createClassErrorUpdate(fiber, errorInfo, lane) {
          var update = createUpdate(NoTimestamp, lane);
          update.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
              return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === "function") {
            update.callback = function callback() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
              if (typeof getDerivedStateFromError !== "function") {
                markLegacyErrorBoundaryAsFailed(this);
              }
              var error$12 = errorInfo.value;
              var stack = errorInfo.stack;
              this.componentDidCatch(error$12, {
                componentStack: stack !== null ? stack : ""
              });
              {
                if (typeof getDerivedStateFromError !== "function") {
                  if (!includesSomeLane(fiber.lanes, SyncLane)) {
                    error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
                  }
                }
              }
            };
          }
          return update;
        }
        function attachPingListener(root3, wakeable, lanes) {
          var pingCache = root3.pingCache;
          var threadIDs;
          if (pingCache === null) {
            pingCache = root3.pingCache = new PossiblyWeakMap$1();
            threadIDs = /* @__PURE__ */ new Set();
            pingCache.set(wakeable, threadIDs);
          } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === void 0) {
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(wakeable, threadIDs);
            }
          }
          if (!threadIDs.has(lanes)) {
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root3, wakeable, lanes);
            {
              if (isDevToolsPresent) {
                restorePendingUpdaters(root3, lanes);
              }
            }
            wakeable.then(ping, ping);
          }
        }
        function attachRetryListener(suspenseBoundary, root3, wakeable, lanes) {
          var wakeables = suspenseBoundary.updateQueue;
          if (wakeables === null) {
            var updateQueue = /* @__PURE__ */ new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
          } else {
            wakeables.add(wakeable);
          }
        }
        function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
          var tag = sourceFiber.tag;
          if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
              sourceFiber.updateQueue = currentSource.updateQueue;
              sourceFiber.memoizedState = currentSource.memoizedState;
              sourceFiber.lanes = currentSource.lanes;
            } else {
              sourceFiber.updateQueue = null;
              sourceFiber.memoizedState = null;
            }
          }
        }
        function getNearestSuspenseBoundaryToCapture(returnFiber) {
          var node = returnFiber;
          do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
              return node;
            }
            node = node.return;
          } while (node !== null);
          return null;
        }
        function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes) {
          if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            if (suspenseBoundary === returnFiber) {
              suspenseBoundary.flags |= ShouldCapture;
            } else {
              suspenseBoundary.flags |= DidCapture;
              sourceFiber.flags |= ForceUpdateForLegacySuspense;
              sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;
                if (currentSourceFiber === null) {
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  var update = createUpdate(NoTimestamp, SyncLane);
                  update.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update, SyncLane);
                }
              }
              sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
          }
          suspenseBoundary.flags |= ShouldCapture;
          suspenseBoundary.lanes = rootRenderLanes;
          return suspenseBoundary;
        }
        function throwException(root3, returnFiber, sourceFiber, value, rootRenderLanes) {
          sourceFiber.flags |= Incomplete;
          {
            if (isDevToolsPresent) {
              restorePendingUpdaters(root3, rootRenderLanes);
            }
          }
          if (value !== null && typeof value === "object" && typeof value.then === "function") {
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            {
              if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                markDidThrowWhileHydratingDEV();
              }
            }
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
              suspenseBoundary.flags &= ~ForceClientRender;
              markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes);
              if (suspenseBoundary.mode & ConcurrentMode) {
                attachPingListener(root3, wakeable, rootRenderLanes);
              }
              attachRetryListener(suspenseBoundary, root3, wakeable);
              return;
            } else {
              if (!includesSyncLane(rootRenderLanes)) {
                attachPingListener(root3, wakeable, rootRenderLanes);
                renderDidSuspendDelayIfPossible();
                return;
              }
              var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
              value = uncaughtSuspenseError;
            }
          } else {
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
              markDidThrowWhileHydratingDEV();
              var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
              if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
                  _suspenseBoundary.flags |= ForceClientRender;
                }
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes);
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
              }
            }
          }
          value = createCapturedValueAtFiber(value, sourceFiber);
          renderDidError(value);
          var workInProgress2 = returnFiber;
          do {
            switch (workInProgress2.tag) {
              case HostRoot: {
                var _errorInfo = value;
                workInProgress2.flags |= ShouldCapture;
                var lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                enqueueCapturedUpdate(workInProgress2, update);
                return;
              }
              case ClassComponent:
                var errorInfo = value;
                var ctor = workInProgress2.type;
                var instance = workInProgress2.stateNode;
                if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                  workInProgress2.flags |= ShouldCapture;
                  var _lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                  var _update = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                  enqueueCapturedUpdate(workInProgress2, _update);
                  return;
                }
                break;
            }
            workInProgress2 = workInProgress2.return;
          } while (workInProgress2 !== null);
        }
        function getSuspendedCache() {
          {
            return null;
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var didReceiveUpdate = false;
        var didWarnAboutBadClass;
        var didWarnAboutModulePatternComponent;
        var didWarnAboutContextTypeOnFunctionComponent;
        var didWarnAboutGetDerivedStateOnFunctionComponent;
        var didWarnAboutFunctionRefs;
        var didWarnAboutReassigningProps;
        var didWarnAboutRevealOrder;
        var didWarnAboutTailOptions;
        {
          didWarnAboutBadClass = {};
          didWarnAboutModulePatternComponent = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
          didWarnAboutRevealOrder = {};
          didWarnAboutTailOptions = {};
        }
        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
          if (current2 === null) {
            workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
          }
        }
        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
          workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
        }
        function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var render2 = Component.render;
          var ref = workInProgress2.ref;
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          if (current2 === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === void 0) {
              var resolvedType = type;
              {
                resolvedType = resolveFunctionForHotReloading(type);
              }
              workInProgress2.tag = SimpleMemoComponent;
              workInProgress2.type = resolvedType;
              {
                validateFunctionComponentInDev(workInProgress2, type);
              }
              return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
            }
            {
              var innerPropTypes = type.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(type));
              }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
            child.ref = workInProgress2.ref;
            child.return = workInProgress2;
            workInProgress2.child = child;
            return child;
          }
          {
            var _type = Component.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentNameFromType(_type));
            }
          }
          var currentChild = current2.child;
          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
          if (!hasScheduledUpdateOrContext) {
            var prevProps = currentChild.memoizedProps;
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
          }
          workInProgress2.flags |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps);
          newChild.ref = workInProgress2.ref;
          newChild.return = workInProgress2;
          workInProgress2.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerMemoType = workInProgress2.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  outerMemoType = init(payload);
                } catch (x) {
                  outerMemoType = null;
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, nextProps, "prop", getComponentNameFromType(outerMemoType));
                }
              }
            }
          }
          if (current2 !== null) {
            var prevProps = current2.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
              didReceiveUpdate = false;
              workInProgress2.pendingProps = nextProps = prevProps;
              if (!checkScheduledUpdateOrContext(current2, renderLanes2)) {
                workInProgress2.lanes = current2.lanes;
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              }
            }
          }
          return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
        }
        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          var prevState = current2 !== null ? current2.memoizedState : null;
          if (nextProps.mode === "hidden" || enableLegacyHidden) {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              var nextState = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = nextState;
              pushRenderLanes(workInProgress2, renderLanes2);
            } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
              var spawnedCachePool = null;
              var nextBaseLanes;
              if (prevState !== null) {
                var prevBaseLanes = prevState.baseLanes;
                nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
              } else {
                nextBaseLanes = renderLanes2;
              }
              workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
              var _nextState = {
                baseLanes: nextBaseLanes,
                cachePool: spawnedCachePool,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState;
              workInProgress2.updateQueue = null;
              pushRenderLanes(workInProgress2, nextBaseLanes);
              return null;
            } else {
              var _nextState2 = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState2;
              var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
              pushRenderLanes(workInProgress2, subtreeRenderLanes2);
            }
          } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
              _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
              workInProgress2.memoizedState = null;
            } else {
              _subtreeRenderLanes = renderLanes2;
            }
            pushRenderLanes(workInProgress2, _subtreeRenderLanes);
          }
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateFragment(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMode(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateProfiler(current2, workInProgress2, renderLanes2) {
          {
            workInProgress2.flags |= Update;
            {
              var stateNode = workInProgress2.stateNode;
              stateNode.effectDuration = 0;
              stateNode.passiveEffectDuration = 0;
            }
          }
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markRef(current2, workInProgress2) {
          var ref = workInProgress2.ref;
          if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
            workInProgress2.flags |= Ref;
            {
              workInProgress2.flags |= RefStatic;
            }
          }
        }
        function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            switch (shouldError(workInProgress2)) {
              case false: {
                var _instance = workInProgress2.stateNode;
                var ctor = workInProgress2.type;
                var tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
              }
              case true: {
                workInProgress2.flags |= DidCapture;
                workInProgress2.flags |= ShouldCapture;
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes2);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
                enqueueCapturedUpdate(workInProgress2, update);
                break;
              }
            }
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var instance = workInProgress2.stateNode;
          var shouldUpdate;
          if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2);
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            shouldUpdate = true;
          } else if (current2 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          } else {
            shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
          {
            var inst = workInProgress2.stateNode;
            if (shouldUpdate && inst.props !== nextProps) {
              if (!didWarnAboutReassigningProps) {
                error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
          markRef(current2, workInProgress2);
          var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, false);
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var instance = workInProgress2.stateNode;
          ReactCurrentOwner$1.current = workInProgress2;
          var nextChildren;
          if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            nextChildren = null;
            {
              stopProfilerTimerIfRunning();
            }
          } else {
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              setIsRendering(true);
              nextChildren = instance.render();
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  instance.render();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
          }
          workInProgress2.flags |= PerformedWork;
          if (current2 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          workInProgress2.memoizedState = instance.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress2, Component, true);
          }
          return workInProgress2.child;
        }
        function pushHostRootContext(workInProgress2) {
          var root3 = workInProgress2.stateNode;
          if (root3.pendingContext) {
            pushTopLevelContextObject(workInProgress2, root3.pendingContext, root3.pendingContext !== root3.context);
          } else if (root3.context) {
            pushTopLevelContextObject(workInProgress2, root3.context, false);
          }
          pushHostContainer(workInProgress2, root3.containerInfo);
        }
        function updateHostRoot(current2, workInProgress2, renderLanes2) {
          pushHostRootContext(workInProgress2);
          if (current2 === null) {
            throw new Error("Should have a current fiber. This is a bug in React.");
          }
          var nextProps = workInProgress2.pendingProps;
          var prevState = workInProgress2.memoizedState;
          var prevChildren = prevState.element;
          cloneUpdateQueue(current2, workInProgress2);
          processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
          var nextState = workInProgress2.memoizedState;
          var root3 = workInProgress2.stateNode;
          var nextChildren = nextState.element;
          if (prevState.isDehydrated) {
            var overrideState = {
              element: nextChildren,
              isDehydrated: false,
              cache: nextState.cache,
              pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
              transitions: nextState.transitions
            };
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = overrideState;
            workInProgress2.memoizedState = overrideState;
            if (workInProgress2.flags & ForceClientRender) {
              var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
            } else if (nextChildren !== prevChildren) {
              var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
            } else {
              enterHydrationState(workInProgress2);
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
              workInProgress2.child = child;
              var node = child;
              while (node) {
                node.flags = node.flags & ~Placement | Hydrating;
                node = node.sibling;
              }
            }
          } else {
            resetHydrationState();
            if (nextChildren === prevChildren) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
          resetHydrationState();
          queueHydrationError(recoverableError);
          workInProgress2.flags |= ForceClientRender;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostComponent(current2, workInProgress2, renderLanes2) {
          pushHostContext(workInProgress2);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          var type = workInProgress2.type;
          var nextProps = workInProgress2.pendingProps;
          var prevProps = current2 !== null ? current2.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
            workInProgress2.flags |= ContentReset;
          }
          markRef(current2, workInProgress2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostText(current2, workInProgress2) {
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var lazyComponent = elementType;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          workInProgress2.type = Component;
          var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
          var resolvedProps = resolveDefaultProps(Component, props);
          var child;
          switch (resolvedTag) {
            case FunctionComponent: {
              {
                validateFunctionComponentInDev(workInProgress2, Component);
                workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
              }
              child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ClassComponent: {
              {
                workInProgress2.type = Component = resolveClassForHotReloading(Component);
              }
              child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ForwardRef: {
              {
                workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
              }
              child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case MemoComponent: {
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = Component.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentNameFromType(Component));
                  }
                }
              }
              child = updateMemoComponent(null, workInProgress2, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes2);
              return child;
            }
          }
          var hint = "";
          {
            if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
              hint = " Did you wrap a component in React.lazy() more than once?";
            }
          }
          throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
        }
        function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          workInProgress2.tag = ClassComponent;
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          constructClassInstance(workInProgress2, Component, nextProps);
          mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
        }
        function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var value;
          var hasId;
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
            }
            setIsRendering(true);
            ReactCurrentOwner$1.current = workInProgress2;
            value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
            hasId = checkDidRenderIdHook();
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            workInProgress2.tag = ClassComponent;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            var hasContext = false;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
            initializeUpdateQueue(workInProgress2);
            adoptClassInstance(workInProgress2, value);
            mountClassInstance(workInProgress2, Component, props, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          } else {
            workInProgress2.tag = FunctionComponent;
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                  hasId = checkDidRenderIdHook();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
            }
            if (getIsHydrating() && hasId) {
              pushMaterializedTreeId(workInProgress2);
            }
            reconcileChildren(null, workInProgress2, value, renderLanes2);
            {
              validateFunctionComponentInDev(workInProgress2, Component);
            }
            return workInProgress2.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress2, Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || "";
              var debugSource = workInProgress2._debugSource;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        var SUSPENDED_MARKER = {
          dehydrated: null,
          treeContext: null,
          retryLane: NoLane
        };
        function mountSuspenseOffscreenState(renderLanes2) {
          return {
            baseLanes: renderLanes2,
            cachePool: getSuspendedCache(),
            transitions: null
          };
        }
        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
          var cachePool = null;
          return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
            cachePool,
            transitions: prevOffscreenState.transitions
          };
        }
        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            var suspenseState = current2.memoizedState;
            if (suspenseState === null) {
              return false;
            }
          }
          return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        }
        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
          return removeLanes(current2.childLanes, renderLanes2);
        }
        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          {
            if (shouldSuspend(workInProgress2)) {
              workInProgress2.flags |= DidCapture;
            }
          }
          var suspenseContext = suspenseStackCursor.current;
          var showFallback = false;
          var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
            showFallback = true;
            workInProgress2.flags &= ~DidCapture;
          } else {
            if (current2 === null || current2.memoizedState !== null) {
              {
                suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
              }
            }
          }
          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          pushSuspenseContext(workInProgress2, suspenseContext);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
            var suspenseState = workInProgress2.memoizedState;
            if (suspenseState !== null) {
              var dehydrated = suspenseState.dehydrated;
              if (dehydrated !== null) {
                return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
              }
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
              var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackFragment;
            } else {
              return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
            }
          } else {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              var _dehydrated = prevState.dehydrated;
              if (_dehydrated !== null) {
                return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
              }
            }
            if (showFallback) {
              var _nextFallbackChildren = nextProps.fallback;
              var _nextPrimaryChildren = nextProps.children;
              var fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2);
              var _primaryChildFragment2 = workInProgress2.child;
              var prevOffscreenState = current2.child.memoizedState;
              _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
              _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            } else {
              var _nextPrimaryChildren2 = nextProps.children;
              var _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
              workInProgress2.memoizedState = null;
              return _primaryChildFragment3;
            }
          }
        }
        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
          primaryChildFragment.return = workInProgress2;
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var progressedPrimaryFragment = workInProgress2.child;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          var fallbackChildFragment;
          if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = 0;
              primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          }
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
          return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
        }
        function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
          return createWorkInProgress(current2, offscreenProps);
        }
        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
          });
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            primaryChildFragment.lanes = renderLanes2;
          }
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = null;
          if (currentFallbackChildFragment !== null) {
            var deletions = workInProgress2.deletions;
            if (deletions === null) {
              workInProgress2.deletions = [currentFallbackChildFragment];
              workInProgress2.flags |= ChildDeletion;
            } else {
              deletions.push(currentFallbackChildFragment);
            }
          }
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          if ((mode & ConcurrentMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress2.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
              primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            workInProgress2.deletions = null;
          } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
          }
          var fallbackChildFragment;
          if (currentFallbackChildFragment !== null) {
            fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
          } else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
          }
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
          if (recoverableError !== null) {
            queueHydrationError(recoverableError);
          }
          reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          var nextProps = workInProgress2.pendingProps;
          var primaryChildren = nextProps.children;
          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
          primaryChildFragment.flags |= Placement;
          workInProgress2.memoizedState = null;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var fiberMode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
          var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
          fallbackChildFragment.flags |= Placement;
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
            reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          }
          return fallbackChildFragment;
        }
        function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            {
              error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            }
            workInProgress2.lanes = laneToLanes(SyncLane);
          } else if (isSuspenseInstanceFallback(suspenseInstance)) {
            workInProgress2.lanes = laneToLanes(DefaultHydrationLane);
          } else {
            workInProgress2.lanes = laneToLanes(OffscreenLane);
          }
          return null;
        }
        function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
          if (!didSuspend) {
            warnIfHydrating();
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, null);
            }
            if (isSuspenseInstanceFallback(suspenseInstance)) {
              var digest, message, stack;
              {
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
              }
              var error2;
              if (message) {
                error2 = new Error(message);
              } else {
                error2 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
              }
              var capturedValue = createCapturedValue(error2, digest, stack);
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
            }
            var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
            if (didReceiveUpdate || hasContextChanged2) {
              var root3 = getWorkInProgressRoot();
              if (root3 !== null) {
                var attemptHydrationAtLane = getBumpedLaneForHydration(root3, renderLanes2);
                if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                  suspenseState.retryLane = attemptHydrationAtLane;
                  var eventTime = NoTimestamp;
                  enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane);
                  scheduleUpdateOnFiber(root3, current2, attemptHydrationAtLane, eventTime);
                }
              }
              renderDidSuspendDelayIfPossible();
              var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
              workInProgress2.flags |= DidCapture;
              workInProgress2.child = current2.child;
              var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
              registerSuspenseInstanceRetry(suspenseInstance, retry);
              return null;
            } else {
              reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
              var primaryChildren = nextProps.children;
              var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
              primaryChildFragment.flags |= Hydrating;
              return primaryChildFragment;
            }
          } else {
            if (workInProgress2.flags & ForceClientRender) {
              workInProgress2.flags &= ~ForceClientRender;
              var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
            } else if (workInProgress2.memoizedState !== null) {
              workInProgress2.child = current2.child;
              workInProgress2.flags |= DidCapture;
              return null;
            } else {
              var nextPrimaryChildren = nextProps.children;
              var nextFallbackChildren = nextProps.fallback;
              var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var _primaryChildFragment4 = workInProgress2.child;
              _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            }
          }
        }
        function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
          fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
          }
          scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
        }
        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
          var node = firstChild;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
              }
            } else if (node.tag === SuspenseListComponent) {
              scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === workInProgress2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === workInProgress2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function findLastContentRow(firstChild) {
          var row = firstChild;
          var lastContentRow = null;
          while (row !== null) {
            var currentRow = row.alternate;
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              lastContentRow = row;
            }
            row = row.sibling;
          }
          return lastContentRow;
        }
        function validateRevealOrder(revealOrder) {
          {
            if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
              didWarnAboutRevealOrder[revealOrder] = true;
              if (typeof revealOrder === "string") {
                switch (revealOrder.toLowerCase()) {
                  case "together":
                  case "forwards":
                  case "backwards": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  case "forward":
                  case "backward": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
                }
              } else {
                error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
              }
            }
          }
        }
        function validateTailOptions(tailMode, revealOrder) {
          {
            if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
              if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
              } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
              }
            }
          }
        }
        function validateSuspenseListNestedChild(childSlot, index2) {
          {
            var isAnArray = isArray(childSlot);
            var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
            if (isAnArray || isIterable) {
              var type = isAnArray ? "array" : "iterable";
              error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
              return false;
            }
          }
          return true;
        }
        function validateSuspenseListChildren(children, revealOrder) {
          {
            if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
              if (isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  if (!validateSuspenseListNestedChild(children[i], i)) {
                    return;
                  }
                }
              } else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                  var childrenIterator = iteratorFn.call(children);
                  if (childrenIterator) {
                    var step = childrenIterator.next();
                    var _i = 0;
                    for (; !step.done; step = childrenIterator.next()) {
                      if (!validateSuspenseListNestedChild(step.value, _i)) {
                        return;
                      }
                      _i++;
                    }
                  }
                } else {
                  error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                }
              }
            }
          }
        }
        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
          var renderState = workInProgress2.memoizedState;
          if (renderState === null) {
            workInProgress2.memoizedState = {
              isBackwards,
              rendering: null,
              renderingStartTime: 0,
              last: lastContentRow,
              tail,
              tailMode
            };
          } else {
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
          }
        }
        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var revealOrder = nextProps.revealOrder;
          var tailMode = nextProps.tail;
          var newChildren = nextProps.children;
          validateRevealOrder(revealOrder);
          validateTailOptions(tailMode, revealOrder);
          validateSuspenseListChildren(newChildren, revealOrder);
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          var suspenseContext = suspenseStackCursor.current;
          var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress2.flags |= DidCapture;
          } else {
            var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) {
              propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress2, suspenseContext);
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            workInProgress2.memoizedState = null;
          } else {
            switch (revealOrder) {
              case "forwards": {
                var lastContentRow = findLastContentRow(workInProgress2.child);
                var tail;
                if (lastContentRow === null) {
                  tail = workInProgress2.child;
                  workInProgress2.child = null;
                } else {
                  tail = lastContentRow.sibling;
                  lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress2, false, tail, lastContentRow, tailMode);
                break;
              }
              case "backwards": {
                var _tail = null;
                var row = workInProgress2.child;
                workInProgress2.child = null;
                while (row !== null) {
                  var currentRow = row.alternate;
                  if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                    workInProgress2.child = row;
                    break;
                  }
                  var nextRow = row.sibling;
                  row.sibling = _tail;
                  _tail = row;
                  row = nextRow;
                }
                initSuspenseListRenderState(workInProgress2, true, _tail, null, tailMode);
                break;
              }
              case "together": {
                initSuspenseListRenderState(workInProgress2, false, null, null, void 0);
                break;
              }
              default: {
                workInProgress2.memoizedState = null;
              }
            }
          }
          return workInProgress2.child;
        }
        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
          pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
          var nextChildren = workInProgress2.pendingProps;
          if (current2 === null) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
        function updateContextProvider(current2, workInProgress2, renderLanes2) {
          var providerType = workInProgress2.type;
          var context = providerType._context;
          var newProps = workInProgress2.pendingProps;
          var oldProps = workInProgress2.memoizedProps;
          var newValue = newProps.value;
          {
            if (!("value" in newProps)) {
              if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
              }
            }
            var providerPropTypes = workInProgress2.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
            }
          }
          pushProvider(workInProgress2, context, newValue);
          {
            if (oldProps !== null) {
              var oldValue = oldProps.value;
              if (objectIs(oldValue, newValue)) {
                if (oldProps.children === newProps.children && !hasContextChanged()) {
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                }
              } else {
                propagateContextChange(workInProgress2, context, renderLanes2);
              }
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
          var context = workInProgress2.type;
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var newProps = workInProgress2.pendingProps;
          var render2 = newProps.children;
          {
            if (typeof render2 !== "function") {
              error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var newValue = readContext(context);
          {
            markComponentRenderStarted(workInProgress2);
          }
          var newChildren;
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            newChildren = render2(newValue);
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markWorkInProgressReceivedUpdate() {
          didReceiveUpdate = true;
        }
        function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            if (current2 !== null) {
              current2.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
          }
        }
        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            workInProgress2.dependencies = current2.dependencies;
          }
          {
            stopProfilerTimerIfRunning();
          }
          markSkippedUpdateLanes(workInProgress2.lanes);
          if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
            {
              return null;
            }
          }
          cloneChildFibers(current2, workInProgress2);
          return workInProgress2.child;
        }
        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
          {
            var returnFiber = oldWorkInProgress.return;
            if (returnFiber === null) {
              throw new Error("Cannot swap the root fiber.");
            }
            current2.alternate = null;
            oldWorkInProgress.alternate = null;
            newWorkInProgress.index = oldWorkInProgress.index;
            newWorkInProgress.sibling = oldWorkInProgress.sibling;
            newWorkInProgress.return = oldWorkInProgress.return;
            newWorkInProgress.ref = oldWorkInProgress.ref;
            if (oldWorkInProgress === returnFiber.child) {
              returnFiber.child = newWorkInProgress;
            } else {
              var prevSibling = returnFiber.child;
              if (prevSibling === null) {
                throw new Error("Expected parent to have a child.");
              }
              while (prevSibling.sibling !== oldWorkInProgress) {
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) {
                  throw new Error("Expected to find the previous sibling.");
                }
              }
              prevSibling.sibling = newWorkInProgress;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [current2];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(current2);
            }
            newWorkInProgress.flags |= Placement;
            return newWorkInProgress;
          }
        }
        function checkScheduledUpdateOrContext(current2, renderLanes2) {
          var updateLanes = current2.lanes;
          if (includesSomeLane(updateLanes, renderLanes2)) {
            return true;
          }
          return false;
        }
        function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
          switch (workInProgress2.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress2);
              var root3 = workInProgress2.stateNode;
              resetHydrationState();
              break;
            case HostComponent:
              pushHostContext(workInProgress2);
              break;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                pushContextProvider(workInProgress2);
              }
              break;
            }
            case HostPortal:
              pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
              break;
            case ContextProvider: {
              var newValue = workInProgress2.memoizedProps.value;
              var context = workInProgress2.type._context;
              pushProvider(workInProgress2, context, newValue);
              break;
            }
            case Profiler:
              {
                var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                if (hasChildWork) {
                  workInProgress2.flags |= Update;
                }
                {
                  var stateNode = workInProgress2.stateNode;
                  stateNode.effectDuration = 0;
                  stateNode.passiveEffectDuration = 0;
                }
              }
              break;
            case SuspenseComponent: {
              var state = workInProgress2.memoizedState;
              if (state !== null) {
                if (state.dehydrated !== null) {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  workInProgress2.flags |= DidCapture;
                  return null;
                }
                var primaryChildFragment = workInProgress2.child;
                var primaryChildLanes = primaryChildFragment.childLanes;
                if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                  return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                } else {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                  if (child !== null) {
                    return child.sibling;
                  } else {
                    return null;
                  }
                }
              } else {
                pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
              }
              break;
            }
            case SuspenseListComponent: {
              var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
              var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
              if (didSuspendBefore) {
                if (_hasChildWork) {
                  return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                }
                workInProgress2.flags |= DidCapture;
              }
              var renderState = workInProgress2.memoizedState;
              if (renderState !== null) {
                renderState.rendering = null;
                renderState.tail = null;
                renderState.lastEffect = null;
              }
              pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
              if (_hasChildWork) {
                break;
              } else {
                return null;
              }
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              workInProgress2.lanes = NoLanes;
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        }
        function beginWork(current2, workInProgress2, renderLanes2) {
          {
            if (workInProgress2._debugNeedsRemount && current2 !== null) {
              return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
            }
          }
          if (current2 !== null) {
            var oldProps = current2.memoizedProps;
            var newProps = workInProgress2.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
              didReceiveUpdate = true;
            } else {
              var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
              if (!hasScheduledUpdateOrContext && (workInProgress2.flags & DidCapture) === NoFlags) {
                didReceiveUpdate = false;
                return attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
              }
              if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              } else {
                didReceiveUpdate = false;
              }
            }
          } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress2)) {
              var slotIndex = workInProgress2.index;
              var numberOfForks = getForksAtLevel();
              pushTreeId(workInProgress2, numberOfForks, slotIndex);
            }
          }
          workInProgress2.lanes = NoLanes;
          switch (workInProgress2.tag) {
            case IndeterminateComponent: {
              return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
            }
            case LazyComponent: {
              var elementType = workInProgress2.elementType;
              return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
            }
            case FunctionComponent: {
              var Component = workInProgress2.type;
              var unresolvedProps = workInProgress2.pendingProps;
              var resolvedProps = workInProgress2.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
              return updateFunctionComponent(current2, workInProgress2, Component, resolvedProps, renderLanes2);
            }
            case ClassComponent: {
              var _Component = workInProgress2.type;
              var _unresolvedProps = workInProgress2.pendingProps;
              var _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
              return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
            }
            case HostRoot:
              return updateHostRoot(current2, workInProgress2, renderLanes2);
            case HostComponent:
              return updateHostComponent(current2, workInProgress2, renderLanes2);
            case HostText:
              return updateHostText(current2, workInProgress2);
            case SuspenseComponent:
              return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
            case HostPortal:
              return updatePortalComponent(current2, workInProgress2, renderLanes2);
            case ForwardRef: {
              var type = workInProgress2.type;
              var _unresolvedProps2 = workInProgress2.pendingProps;
              var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
              return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
            }
            case Fragment:
              return updateFragment(current2, workInProgress2, renderLanes2);
            case Mode:
              return updateMode(current2, workInProgress2, renderLanes2);
            case Profiler:
              return updateProfiler(current2, workInProgress2, renderLanes2);
            case ContextProvider:
              return updateContextProvider(current2, workInProgress2, renderLanes2);
            case ContextConsumer:
              return updateContextConsumer(current2, workInProgress2, renderLanes2);
            case MemoComponent: {
              var _type2 = workInProgress2.type;
              var _unresolvedProps3 = workInProgress2.pendingProps;
              var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = _type2.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentNameFromType(_type2));
                  }
                }
              }
              _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
              return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
            }
            case SimpleMemoComponent: {
              return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
            }
            case IncompleteClassComponent: {
              var _Component2 = workInProgress2.type;
              var _unresolvedProps4 = workInProgress2.pendingProps;
              var _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
              return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
            }
            case SuspenseListComponent: {
              return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent: {
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function markUpdate(workInProgress2) {
          workInProgress2.flags |= Update;
        }
        function markRef$1(workInProgress2) {
          workInProgress2.flags |= Ref;
          {
            workInProgress2.flags |= RefStatic;
          }
        }
        var appendAllChildren;
        var updateHostContainer;
        var updateHostComponent$1;
        var updateHostText$1;
        {
          appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
            var node = workInProgress2.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function(current2, workInProgress2) {
          };
          updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
            var oldProps = current2.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance = workInProgress2.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress2.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress2);
            }
          };
          updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress2);
            }
          };
        }
        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
          if (getIsHydrating()) {
            return;
          }
          switch (renderState.tailMode) {
            case "hidden": {
              var tailNode = renderState.tail;
              var lastTailNode = null;
              while (tailNode !== null) {
                if (tailNode.alternate !== null) {
                  lastTailNode = tailNode;
                }
                tailNode = tailNode.sibling;
              }
              if (lastTailNode === null) {
                renderState.tail = null;
              } else {
                lastTailNode.sibling = null;
              }
              break;
            }
            case "collapsed": {
              var _tailNode = renderState.tail;
              var _lastTailNode = null;
              while (_tailNode !== null) {
                if (_tailNode.alternate !== null) {
                  _lastTailNode = _tailNode;
                }
                _tailNode = _tailNode.sibling;
              }
              if (_lastTailNode === null) {
                if (!hasRenderedATailFallback && renderState.tail !== null) {
                  renderState.tail.sibling = null;
                } else {
                  renderState.tail = null;
                }
              } else {
                _lastTailNode.sibling = null;
              }
              break;
            }
          }
        }
        function bubbleProperties(completedWork) {
          var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
          var newChildLanes = NoLanes;
          var subtreeFlags = NoFlags;
          if (!didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var actualDuration = completedWork.actualDuration;
              var treeBaseDuration = completedWork.selfBaseDuration;
              var child = completedWork.child;
              while (child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                subtreeFlags |= child.subtreeFlags;
                subtreeFlags |= child.flags;
                actualDuration += child.actualDuration;
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              completedWork.actualDuration = actualDuration;
              completedWork.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = completedWork.child;
              while (_child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                subtreeFlags |= _child.subtreeFlags;
                subtreeFlags |= _child.flags;
                _child.return = completedWork;
                _child = _child.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          } else {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var _treeBaseDuration = completedWork.selfBaseDuration;
              var _child2 = completedWork.child;
              while (_child2 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));
                subtreeFlags |= _child2.subtreeFlags & StaticMask;
                subtreeFlags |= _child2.flags & StaticMask;
                _treeBaseDuration += _child2.treeBaseDuration;
                _child2 = _child2.sibling;
              }
              completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
              var _child3 = completedWork.child;
              while (_child3 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));
                subtreeFlags |= _child3.subtreeFlags & StaticMask;
                subtreeFlags |= _child3.flags & StaticMask;
                _child3.return = completedWork;
                _child3 = _child3.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          }
          completedWork.childLanes = newChildLanes;
          return didBailout;
        }
        function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
          if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress2);
            resetHydrationState();
            workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
          }
          var wasHydrated = popHydrationState(workInProgress2);
          if (nextState !== null && nextState.dehydrated !== null) {
            if (current2 === null) {
              if (!wasHydrated) {
                throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              }
              prepareToHydrateHostSuspenseInstance(workInProgress2);
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var isTimedOutSuspense = nextState !== null;
                  if (isTimedOutSuspense) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            } else {
              resetHydrationState();
              if ((workInProgress2.flags & DidCapture) === NoFlags) {
                workInProgress2.memoizedState = null;
              }
              workInProgress2.flags |= Update;
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var _isTimedOutSuspense = nextState !== null;
                  if (_isTimedOutSuspense) {
                    var _primaryChildFragment = workInProgress2.child;
                    if (_primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            }
          } else {
            upgradeHydrationErrorsToRecoverable();
            return true;
          }
        }
        function completeWork(current2, workInProgress2, renderLanes2) {
          var newProps = workInProgress2.pendingProps;
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
              bubbleProperties(workInProgress2);
              return null;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostRoot: {
              var fiberRoot = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              if (fiberRoot.pendingContext) {
                fiberRoot.context = fiberRoot.pendingContext;
                fiberRoot.pendingContext = null;
              }
              if (current2 === null || current2.child === null) {
                var wasHydrated = popHydrationState(workInProgress2);
                if (wasHydrated) {
                  markUpdate(workInProgress2);
                } else {
                  if (current2 !== null) {
                    var prevState = current2.memoizedState;
                    if (!prevState.isDehydrated || (workInProgress2.flags & ForceClientRender) !== NoFlags) {
                      workInProgress2.flags |= Snapshot;
                      upgradeHydrationErrorsToRecoverable();
                    }
                  }
                }
              }
              updateHostContainer(current2, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              var rootContainerInstance = getRootHostContainer();
              var type = workInProgress2.type;
              if (current2 !== null && workInProgress2.stateNode != null) {
                updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                if (current2.ref !== workInProgress2.ref) {
                  markRef$1(workInProgress2);
                }
              } else {
                if (!newProps) {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  bubbleProperties(workInProgress2);
                  return null;
                }
                var currentHostContext = getHostContext();
                var _wasHydrated = popHydrationState(workInProgress2);
                if (_wasHydrated) {
                  if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                  appendAllChildren(instance, workInProgress2, false, false);
                  workInProgress2.stateNode = instance;
                  if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                    markUpdate(workInProgress2);
                  }
                }
                if (workInProgress2.ref !== null) {
                  markRef$1(workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostText: {
              var newText = newProps;
              if (current2 && workInProgress2.stateNode != null) {
                var oldText = current2.memoizedProps;
                updateHostText$1(current2, workInProgress2, oldText, newText);
              } else {
                if (typeof newText !== "string") {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var _rootContainerInstance = getRootHostContainer();
                var _currentHostContext = getHostContext();
                var _wasHydrated2 = popHydrationState(workInProgress2);
                if (_wasHydrated2) {
                  if (prepareToHydrateHostTextInstance(workInProgress2)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var nextState = workInProgress2.memoizedState;
              if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
                var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
                if (!fallthroughToNormalSuspensePath) {
                  if (workInProgress2.flags & ShouldCapture) {
                    return workInProgress2;
                  } else {
                    return null;
                  }
                }
              }
              if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                workInProgress2.lanes = renderLanes2;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              var nextDidTimeout = nextState !== null;
              var prevDidTimeout = current2 !== null && current2.memoizedState !== null;
              if (nextDidTimeout !== prevDidTimeout) {
                if (nextDidTimeout) {
                  var _offscreenFiber2 = workInProgress2.child;
                  _offscreenFiber2.flags |= Visibility;
                  if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                    var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                    if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                      renderDidSuspend();
                    } else {
                      renderDidSuspendDelayIfPossible();
                    }
                  }
                }
              }
              var wakeables = workInProgress2.updateQueue;
              if (wakeables !== null) {
                workInProgress2.flags |= Update;
              }
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  if (nextDidTimeout) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              updateHostContainer(current2, workInProgress2);
              if (current2 === null) {
                preparePortalMount(workInProgress2.stateNode.containerInfo);
              }
              bubbleProperties(workInProgress2);
              return null;
            case ContextProvider:
              var context = workInProgress2.type._context;
              popProvider(context, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            case IncompleteClassComponent: {
              var _Component = workInProgress2.type;
              if (isContextProvider(_Component)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              var renderState = workInProgress2.memoizedState;
              if (renderState === null) {
                bubbleProperties(workInProgress2);
                return null;
              }
              var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
              var renderedTail = renderState.rendering;
              if (renderedTail === null) {
                if (!didSuspendAlready) {
                  var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                  if (!cannotBeSuspended) {
                    var row = workInProgress2.child;
                    while (row !== null) {
                      var suspended = findFirstSuspended(row);
                      if (suspended !== null) {
                        didSuspendAlready = true;
                        workInProgress2.flags |= DidCapture;
                        cutOffTailIfNeeded(renderState, false);
                        var newThenables = suspended.updateQueue;
                        if (newThenables !== null) {
                          workInProgress2.updateQueue = newThenables;
                          workInProgress2.flags |= Update;
                        }
                        workInProgress2.subtreeFlags = NoFlags;
                        resetChildFibers(workInProgress2, renderLanes2);
                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                        return workInProgress2.child;
                      }
                      row = row.sibling;
                    }
                  }
                  if (renderState.tail !== null && now() > getRenderTargetTime()) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                } else {
                  cutOffTailIfNeeded(renderState, false);
                }
              } else {
                if (!didSuspendAlready) {
                  var _suspended = findFirstSuspended(renderedTail);
                  if (_suspended !== null) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    var _newThenables = _suspended.updateQueue;
                    if (_newThenables !== null) {
                      workInProgress2.updateQueue = _newThenables;
                      workInProgress2.flags |= Update;
                    }
                    cutOffTailIfNeeded(renderState, true);
                    if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                      bubbleProperties(workInProgress2);
                      return null;
                    }
                  } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                }
                if (renderState.isBackwards) {
                  renderedTail.sibling = workInProgress2.child;
                  workInProgress2.child = renderedTail;
                } else {
                  var previousSibling = renderState.last;
                  if (previousSibling !== null) {
                    previousSibling.sibling = renderedTail;
                  } else {
                    workInProgress2.child = renderedTail;
                  }
                  renderState.last = renderedTail;
                }
              }
              if (renderState.tail !== null) {
                var next = renderState.tail;
                renderState.rendering = next;
                renderState.tail = next.sibling;
                renderState.renderingStartTime = now();
                next.sibling = null;
                var suspenseContext = suspenseStackCursor.current;
                if (didSuspendAlready) {
                  suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                } else {
                  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                }
                pushSuspenseContext(workInProgress2, suspenseContext);
                return next;
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              popRenderLanes(workInProgress2);
              var _nextState = workInProgress2.memoizedState;
              var nextIsHidden = _nextState !== null;
              if (current2 !== null) {
                var _prevState = current2.memoizedState;
                var prevIsHidden = _prevState !== null;
                if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {
                  workInProgress2.flags |= Visibility;
                }
              }
              if (!nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode) {
                bubbleProperties(workInProgress2);
              } else {
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                  bubbleProperties(workInProgress2);
                  {
                    if (workInProgress2.subtreeFlags & (Placement | Update)) {
                      workInProgress2.flags |= Visibility;
                    }
                  }
                }
              }
              return null;
            }
            case CacheComponent: {
              return null;
            }
            case TracingMarkerComponent: {
              return null;
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function unwindWork(current2, workInProgress2, renderLanes2) {
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              var flags = workInProgress2.flags;
              if (flags & ShouldCapture) {
                workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case HostRoot: {
              var root3 = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var _flags = workInProgress2.flags;
              if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress2;
              }
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var suspenseState = workInProgress2.memoizedState;
              if (suspenseState !== null && suspenseState.dehydrated !== null) {
                if (workInProgress2.alternate === null) {
                  throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                }
                resetHydrationState();
              }
              var _flags2 = workInProgress2.flags;
              if (_flags2 & ShouldCapture) {
                workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              return null;
            case ContextProvider:
              var context = workInProgress2.type._context;
              popProvider(context, workInProgress2);
              return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(workInProgress2);
              return null;
            case CacheComponent:
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
          popTreeContext(interruptedWork);
          switch (interruptedWork.tag) {
            case ClassComponent: {
              var childContextTypes = interruptedWork.type.childContextTypes;
              if (childContextTypes !== null && childContextTypes !== void 0) {
                popContext(interruptedWork);
              }
              break;
            }
            case HostRoot: {
              var root3 = interruptedWork.stateNode;
              popHostContainer(interruptedWork);
              popTopLevelContextObject(interruptedWork);
              resetWorkInProgressVersions();
              break;
            }
            case HostComponent: {
              popHostContext(interruptedWork);
              break;
            }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case SuspenseComponent:
              popSuspenseContext(interruptedWork);
              break;
            case SuspenseListComponent:
              popSuspenseContext(interruptedWork);
              break;
            case ContextProvider:
              var context = interruptedWork.type._context;
              popProvider(context, interruptedWork);
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(interruptedWork);
              break;
          }
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
        }
        var offscreenSubtreeIsHidden = false;
        var offscreenSubtreeWasHidden = false;
        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
        var nextEffect = null;
        var inProgressLanes = null;
        var inProgressRoot = null;
        function reportUncaughtErrorInDEV(error2) {
          {
            invokeGuardedCallback(null, function() {
              throw error2;
            });
            clearCaughtError();
          }
        }
        var callComponentWillUnmountWithTimer = function(current2, instance) {
          instance.props = current2.memoizedProps;
          instance.state = current2.memoizedState;
          if (current2.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              instance.componentWillUnmount();
            } finally {
              recordLayoutEffectDuration(current2);
            }
          } else {
            instance.componentWillUnmount();
          }
        };
        function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
          try {
            commitHookEffectListMount(Layout, current2);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance) {
          try {
            callComponentWillUnmountWithTimer(current2, instance);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance) {
          try {
            instance.componentDidMount();
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyAttachRef(current2, nearestMountedAncestor) {
          try {
            commitAttachRef(current2);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyDetachRef(current2, nearestMountedAncestor) {
          var ref = current2.ref;
          if (ref !== null) {
            if (typeof ref === "function") {
              var retVal;
              try {
                if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    retVal = ref(null);
                  } finally {
                    recordLayoutEffectDuration(current2);
                  }
                } else {
                  retVal = ref(null);
                }
              } catch (error2) {
                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
              }
              {
                if (typeof retVal === "function") {
                  error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current2, nearestMountedAncestor, destroy) {
          try {
            destroy();
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        var focusedInstanceHandle = null;
        var shouldFireAfterActiveInstanceBlur = false;
        function commitBeforeMutationEffects(root3, firstChild) {
          focusedInstanceHandle = prepareForCommit(root3.containerInfo);
          nextEffect = firstChild;
          commitBeforeMutationEffects_begin();
          var shouldFire = shouldFireAfterActiveInstanceBlur;
          shouldFireAfterActiveInstanceBlur = false;
          focusedInstanceHandle = null;
          return shouldFire;
        }
        function commitBeforeMutationEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitBeforeMutationEffects_complete();
            }
          }
        }
        function commitBeforeMutationEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitBeforeMutationEffectsOnFiber(finishedWork) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                break;
              }
              case ClassComponent: {
                if (current2 !== null) {
                  var prevProps = current2.memoizedProps;
                  var prevState = current2.memoizedState;
                  var instance = finishedWork.stateNode;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                  {
                    var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                    if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                      didWarnSet.add(finishedWork.type);
                      error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                    }
                  }
                  instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                }
                break;
              }
              case HostRoot: {
                {
                  var root3 = finishedWork.stateNode;
                  clearContainer(root3.containerInfo);
                }
                break;
              }
              case HostComponent:
              case HostText:
              case HostPortal:
              case IncompleteClassComponent:
                break;
              default: {
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            resetCurrentFiber();
          }
        }
        function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                var destroy = effect.destroy;
                effect.destroy = void 0;
                if (destroy !== void 0) {
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStarted(finishedWork);
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStarted(finishedWork);
                    }
                  }
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(true);
                    }
                  }
                  safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(false);
                    }
                  }
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStopped();
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStopped();
                    }
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitHookEffectListMount(flags, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStarted(finishedWork);
                  } else if ((flags & Layout) !== NoFlags$1) {
                    markComponentLayoutEffectMountStarted(finishedWork);
                  }
                }
                var create = effect.create;
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(true);
                  }
                }
                effect.destroy = create();
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(false);
                  }
                }
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStopped();
                  } else if ((flags & Layout) !== NoFlags$1) {
                    markComponentLayoutEffectMountStopped();
                  }
                }
                {
                  var destroy = effect.destroy;
                  if (destroy !== void 0 && typeof destroy !== "function") {
                    var hookName = void 0;
                    if ((effect.tag & Layout) !== NoFlags) {
                      hookName = "useLayoutEffect";
                    } else if ((effect.tag & Insertion) !== NoFlags) {
                      hookName = "useInsertionEffect";
                    } else {
                      hookName = "useEffect";
                    }
                    var addendum = void 0;
                    if (destroy === null) {
                      addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                    } else if (typeof destroy.then === "function") {
                      addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                    } else {
                      addendum = " You returned: " + destroy;
                    }
                    error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitPassiveEffectDurations(finishedRoot, finishedWork) {
          {
            if ((finishedWork.flags & Update) !== NoFlags) {
              switch (finishedWork.tag) {
                case Profiler: {
                  var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                  var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit;
                  var commitTime2 = getCommitTime();
                  var phase = finishedWork.alternate === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onPostCommit === "function") {
                    onPostCommit(id, phase, passiveEffectDuration, commitTime2);
                  }
                  var parentFiber = finishedWork.return;
                  outer:
                    while (parentFiber !== null) {
                      switch (parentFiber.tag) {
                        case HostRoot:
                          var root3 = parentFiber.stateNode;
                          root3.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                        case Profiler:
                          var parentStateNode = parentFiber.stateNode;
                          parentStateNode.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                      }
                      parentFiber = parentFiber.return;
                    }
                  break;
                }
              }
            }
          }
        }
        function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
          if ((finishedWork.flags & LayoutMask) !== NoFlags) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (!offscreenSubtreeWasHidden) {
                  if (finishedWork.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally {
                      recordLayoutEffectDuration(finishedWork);
                    }
                  } else {
                    commitHookEffectListMount(Layout | HasEffect, finishedWork);
                  }
                }
                break;
              }
              case ClassComponent: {
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                  if (!offscreenSubtreeWasHidden) {
                    if (current2 === null) {
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance.props !== finishedWork.memoizedProps) {
                            error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance.state !== finishedWork.memoizedState) {
                            error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance.componentDidMount();
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance.componentDidMount();
                      }
                    } else {
                      var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                      var prevState = current2.memoizedState;
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance.props !== finishedWork.memoizedProps) {
                            error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance.state !== finishedWork.memoizedState) {
                            error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                      }
                    }
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;
                if (current2 === null && finishedWork.flags & Update) {
                  var type = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type, props);
                }
                break;
              }
              case HostText: {
                break;
              }
              case HostPortal: {
                break;
              }
              case Profiler: {
                {
                  var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                  var effectDuration = finishedWork.stateNode.effectDuration;
                  var commitTime2 = getCommitTime();
                  var phase = current2 === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onRender === "function") {
                    onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                  }
                  {
                    if (typeof onCommit === "function") {
                      onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2);
                    }
                    enqueuePendingPassiveProfilerEffect(finishedWork);
                    var parentFiber = finishedWork.return;
                    outer:
                      while (parentFiber !== null) {
                        switch (parentFiber.tag) {
                          case HostRoot:
                            var root3 = parentFiber.stateNode;
                            root3.effectDuration += effectDuration;
                            break outer;
                          case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                        }
                        parentFiber = parentFiber.return;
                      }
                  }
                }
                break;
              }
              case SuspenseComponent: {
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
              }
              case SuspenseListComponent:
              case IncompleteClassComponent:
              case ScopeComponent:
              case OffscreenComponent:
              case LegacyHiddenComponent:
              case TracingMarkerComponent: {
                break;
              }
              default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (!offscreenSubtreeWasHidden) {
            {
              if (finishedWork.flags & Ref) {
                commitAttachRef(finishedWork);
              }
            }
          }
        }
        function reappearLayoutEffectsOnFiber(node) {
          switch (node.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (node.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally {
                  recordLayoutEffectDuration(node);
                }
              } else {
                safelyCallCommitHookLayoutEffectListMount(node, node.return);
              }
              break;
            }
            case ClassComponent: {
              var instance = node.stateNode;
              if (typeof instance.componentDidMount === "function") {
                safelyCallComponentDidMount(node, node.return, instance);
              }
              safelyAttachRef(node, node.return);
              break;
            }
            case HostComponent: {
              safelyAttachRef(node, node.return);
              break;
            }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden) {
          var hostSubtreeRoot = null;
          {
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                  hostSubtreeRoot = node;
                  try {
                    var instance = node.stateNode;
                    if (isHidden) {
                      hideInstance(instance);
                    } else {
                      unhideInstance(node.stateNode, node.memoizedProps);
                    }
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) {
                  try {
                    var _instance3 = node.stateNode;
                    if (isHidden) {
                      hideTextInstance(_instance3);
                    } else {
                      unhideTextInstance(_instance3, node.memoizedProps);
                    }
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                if (hostSubtreeRoot === node) {
                  hostSubtreeRoot = null;
                }
                node = node.return;
              }
              if (hostSubtreeRoot === node) {
                hostSubtreeRoot = null;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance);
                break;
              default:
                instanceToUse = instance;
            }
            if (typeof ref === "function") {
              var retVal;
              if (finishedWork.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  retVal = ref(instanceToUse);
                } finally {
                  recordLayoutEffectDuration(finishedWork);
                }
              } else {
                retVal = ref(instanceToUse);
              }
              {
                if (typeof retVal === "function") {
                  error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
                }
              }
            } else {
              {
                if (!ref.hasOwnProperty("current")) {
                  error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function detachFiberMutation(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.return = null;
          }
          fiber.return = null;
        }
        function detachFiberAfterEffects(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
          }
          {
            fiber.child = null;
            fiber.deletions = null;
            fiber.sibling = null;
            if (fiber.tag === HostComponent) {
              var hostInstance = fiber.stateNode;
              if (hostInstance !== null) {
                detachDeletedInstance(hostInstance);
              }
            }
            fiber.stateNode = null;
            {
              fiber._debugOwner = null;
            }
            {
              fiber.return = null;
              fiber.dependencies = null;
              fiber.memoizedProps = null;
              fiber.memoizedState = null;
              fiber.pendingProps = null;
              fiber.stateNode = null;
              fiber.updateQueue = null;
            }
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node = fiber;
          siblings:
            while (true) {
              while (node.sibling === null) {
                if (node.return === null || isHostParent(node.return)) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
              while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                if (node.flags & Placement) {
                  continue siblings;
                }
                if (node.child === null || node.tag === HostPortal) {
                  continue siblings;
                } else {
                  node.child.return = node;
                  node = node.child;
                }
              }
              if (!(node.flags & Placement)) {
                return node.stateNode;
              }
            }
        }
        function commitPlacement(finishedWork) {
          var parentFiber = getHostParentFiber(finishedWork);
          switch (parentFiber.tag) {
            case HostComponent: {
              var parent = parentFiber.stateNode;
              if (parentFiber.flags & ContentReset) {
                resetTextContent(parent);
                parentFiber.flags &= ~ContentReset;
              }
              var before = getHostSibling(finishedWork);
              insertOrAppendPlacementNode(finishedWork, before, parent);
              break;
            }
            case HostRoot:
            case HostPortal: {
              var _parent = parentFiber.stateNode.containerInfo;
              var _before = getHostSibling(finishedWork);
              insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
              break;
            }
            default:
              throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node.stateNode;
            if (before) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              appendChildToContainer(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNodeIntoContainer(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function insertOrAppendPlacementNode(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node.stateNode;
            if (before) {
              insertBefore(parent, stateNode, before);
            } else {
              appendChild(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNode(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNode(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        var hostParent = null;
        var hostParentIsContainer = false;
        function commitDeletionEffects(root3, returnFiber, deletedFiber) {
          {
            var parent = returnFiber;
            findParent:
              while (parent !== null) {
                switch (parent.tag) {
                  case HostComponent: {
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                  }
                  case HostRoot: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                  case HostPortal: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                }
                parent = parent.return;
              }
            if (hostParent === null) {
              throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
            commitDeletionEffectsOnFiber(root3, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = false;
          }
          detachFiberMutation(deletedFiber);
        }
        function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
          var child = parent.child;
          while (child !== null) {
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
          }
        }
        function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
          onCommitUnmount(deletedFiber);
          switch (deletedFiber.tag) {
            case HostComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
              }
            }
            case HostText: {
              {
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    removeChildFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    removeChild(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case DehydratedFragment: {
              {
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case HostPortal: {
              {
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
              }
              return;
            }
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              if (!offscreenSubtreeWasHidden) {
                var updateQueue = deletedFiber.updateQueue;
                if (updateQueue !== null) {
                  var lastEffect = updateQueue.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var effect = firstEffect;
                    do {
                      var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                      if (destroy !== void 0) {
                        if ((tag & Insertion) !== NoFlags$1) {
                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                        } else if ((tag & Layout) !== NoFlags$1) {
                          {
                            markComponentLayoutEffectUnmountStarted(deletedFiber);
                          }
                          if (deletedFiber.mode & ProfileMode) {
                            startLayoutEffectTimer();
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                            recordLayoutEffectDuration(deletedFiber);
                          } else {
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                          }
                          {
                            markComponentLayoutEffectUnmountStopped();
                          }
                        }
                      }
                      effect = effect.next;
                    } while (effect !== firstEffect);
                  }
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ClassComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var instance = deletedFiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ScopeComponent: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case OffscreenComponent: {
              if (deletedFiber.mode & ConcurrentMode) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              }
              break;
            }
            default: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
          }
        }
        function commitSuspenseCallback(finishedWork) {
          var newState = finishedWork.memoizedState;
        }
        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState === null) {
            var current2 = finishedWork.alternate;
            if (current2 !== null) {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var suspenseInstance = prevState.dehydrated;
                if (suspenseInstance !== null) {
                  commitHydratedSuspenseInstance(suspenseInstance);
                }
              }
            }
          }
        }
        function attachSuspenseRetryListeners(finishedWork) {
          var wakeables = finishedWork.updateQueue;
          if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) {
              retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            }
            wakeables.forEach(function(wakeable) {
              var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
              if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                {
                  if (isDevToolsPresent) {
                    if (inProgressLanes !== null && inProgressRoot !== null) {
                      restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    } else {
                      throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                  }
                }
                wakeable.then(retry, retry);
              }
            });
          }
        }
        function commitMutationEffects(root3, finishedWork, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root3;
          setCurrentFiber(finishedWork);
          commitMutationEffectsOnFiber(finishedWork, root3);
          setCurrentFiber(finishedWork);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function recursivelyTraverseMutationEffects(root3, parentFiber, lanes) {
          var deletions = parentFiber.deletions;
          if (deletions !== null) {
            for (var i = 0; i < deletions.length; i++) {
              var childToDelete = deletions[i];
              try {
                commitDeletionEffects(root3, parentFiber, childToDelete);
              } catch (error2) {
                captureCommitPhaseError(childToDelete, parentFiber, error2);
              }
            }
          }
          var prevDebugFiber = getCurrentFiber();
          if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while (child !== null) {
              setCurrentFiber(child);
              commitMutationEffectsOnFiber(child, root3);
              child = child.sibling;
            }
          }
          setCurrentFiber(prevDebugFiber);
        }
        function commitMutationEffectsOnFiber(finishedWork, root3, lanes) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                try {
                  commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                  commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
                if (finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                  recordLayoutEffectDuration(finishedWork);
                } else {
                  try {
                    commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              }
              return;
            }
            case ClassComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              return;
            }
            case HostComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              {
                if (finishedWork.flags & ContentReset) {
                  var instance = finishedWork.stateNode;
                  try {
                    resetTextContent(instance);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
                if (flags & Update) {
                  var _instance4 = finishedWork.stateNode;
                  if (_instance4 != null) {
                    var newProps = finishedWork.memoizedProps;
                    var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                    var type = finishedWork.type;
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) {
                      try {
                        commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                      } catch (error2) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostText: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (finishedWork.stateNode === null) {
                    throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  var textInstance = finishedWork.stateNode;
                  var newText = finishedWork.memoizedProps;
                  var oldText = current2 !== null ? current2.memoizedProps : newText;
                  try {
                    commitTextUpdate(textInstance, oldText, newText);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              }
              return;
            }
            case HostRoot: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (current2 !== null) {
                    var prevRootState = current2.memoizedState;
                    if (prevRootState.isDehydrated) {
                      try {
                        commitHydratedContainer(root3.containerInfo);
                      } catch (error2) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostPortal: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
            case SuspenseComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              var offscreenFiber = finishedWork.child;
              if (offscreenFiber.flags & Visibility) {
                var offscreenInstance = offscreenFiber.stateNode;
                var newState = offscreenFiber.memoizedState;
                var isHidden = newState !== null;
                offscreenInstance.isHidden = isHidden;
                if (isHidden) {
                  var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                  if (!wasHidden) {
                    markCommitTimeOfFallback();
                  }
                }
              }
              if (flags & Update) {
                try {
                  commitSuspenseCallback(finishedWork);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case OffscreenComponent: {
              var _wasHidden = current2 !== null && current2.memoizedState !== null;
              if (finishedWork.mode & ConcurrentMode) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                recursivelyTraverseMutationEffects(root3, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseMutationEffects(root3, finishedWork);
              }
              commitReconciliationEffects(finishedWork);
              if (flags & Visibility) {
                var _offscreenInstance = finishedWork.stateNode;
                var _newState = finishedWork.memoizedState;
                var _isHidden = _newState !== null;
                var offscreenBoundary = finishedWork;
                _offscreenInstance.isHidden = _isHidden;
                {
                  if (_isHidden) {
                    if (!_wasHidden) {
                      if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                        nextEffect = offscreenBoundary;
                        var offscreenChild = offscreenBoundary.child;
                        while (offscreenChild !== null) {
                          nextEffect = offscreenChild;
                          disappearLayoutEffects_begin(offscreenChild);
                          offscreenChild = offscreenChild.sibling;
                        }
                      }
                    }
                  }
                }
                {
                  hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
              }
              return;
            }
            case SuspenseListComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case ScopeComponent: {
              return;
            }
            default: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
          }
        }
        function commitReconciliationEffects(finishedWork) {
          var flags = finishedWork.flags;
          if (flags & Placement) {
            try {
              commitPlacement(finishedWork);
            } catch (error2) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error2);
            }
            finishedWork.flags &= ~Placement;
          }
          if (flags & Hydrating) {
            finishedWork.flags &= ~Hydrating;
          }
        }
        function commitLayoutEffects(finishedWork, root3, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root3;
          nextEffect = finishedWork;
          commitLayoutEffects_begin(finishedWork, root3, committedLanes);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function commitLayoutEffects_begin(subtreeRoot, root3, committedLanes) {
          var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
              var isHidden = fiber.memoizedState !== null;
              var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
              if (newOffscreenSubtreeIsHidden) {
                commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
                continue;
              } else {
                var current2 = fiber.alternate;
                var wasHidden = current2 !== null && current2.memoizedState !== null;
                var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                  nextEffect = fiber;
                  reappearLayoutEffects_begin(fiber);
                }
                var child = firstChild;
                while (child !== null) {
                  nextEffect = child;
                  commitLayoutEffects_begin(child, root3, committedLanes);
                  child = child.sibling;
                }
                nextEffect = fiber;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
                continue;
              }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
            }
          }
        }
        function commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
              var current2 = fiber.alternate;
              setCurrentFiber(fiber);
              try {
                commitLayoutEffectOnFiber(root3, current2, fiber, committedLanes);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function disappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                if (fiber.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout, fiber, fiber.return);
                  } finally {
                    recordLayoutEffectDuration(fiber);
                  }
                } else {
                  commitHookEffectListUnmount(Layout, fiber, fiber.return);
                }
                break;
              }
              case ClassComponent: {
                safelyDetachRef(fiber, fiber.return);
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                }
                break;
              }
              case HostComponent: {
                safelyDetachRef(fiber, fiber.return);
                break;
              }
              case OffscreenComponent: {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                  disappearLayoutEffects_complete(subtreeRoot);
                  continue;
                }
                break;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              disappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function disappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function reappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
              var isHidden = fiber.memoizedState !== null;
              if (isHidden) {
                reappearLayoutEffects_complete(subtreeRoot);
                continue;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              reappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function reappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              reappearLayoutEffectsOnFiber(fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountEffects(root3, finishedWork, committedLanes, committedTransitions) {
          nextEffect = finishedWork;
          commitPassiveMountEffects_begin(finishedWork, root3, committedLanes, committedTransitions);
        }
        function commitPassiveMountEffects_begin(subtreeRoot, root3, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitPassiveMountEffects_complete(subtreeRoot, root3, committedLanes, committedTransitions);
            }
          }
        }
        function commitPassiveMountEffects_complete(subtreeRoot, root3, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              try {
                commitPassiveMountOnFiber(root3, fiber, committedLanes, committedTransitions);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                } finally {
                  recordPassiveEffectDuration(finishedWork);
                }
              } else {
                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffects(firstChild) {
          nextEffect = firstChild;
          commitPassiveUnmountEffects_begin();
        }
        function commitPassiveUnmountEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
              var deletions = fiber.deletions;
              if (deletions !== null) {
                for (var i = 0; i < deletions.length; i++) {
                  var fiberToDelete = deletions[i];
                  nextEffect = fiberToDelete;
                  commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                }
                {
                  var previousFiber = fiber.alternate;
                  if (previousFiber !== null) {
                    var detachedChild = previousFiber.child;
                    if (detachedChild !== null) {
                      previousFiber.child = null;
                      do {
                        var detachedSibling = detachedChild.sibling;
                        detachedChild.sibling = null;
                        detachedChild = detachedSibling;
                      } while (detachedChild !== null);
                    }
                  }
                }
                nextEffect = fiber;
              }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffects_complete();
            }
          }
        }
        function commitPassiveUnmountEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              commitPassiveUnmountOnFiber(fiber);
              resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveUnmountOnFiber(finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                recordPassiveEffectDuration(finishedWork);
              } else {
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child;
            if (child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            {
              detachFiberAfterEffects(fiber);
              if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
              }
            }
            if (sibling !== null) {
              sibling.return = returnFiber;
              nextEffect = sibling;
              return;
            }
            nextEffect = returnFiber;
          }
        }
        function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
          switch (current2.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (current2.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                recordPassiveEffectDuration(current2);
              } else {
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
              }
              break;
            }
          }
        }
        function invokeLayoutEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
              case ClassComponent: {
                var instance = fiber.stateNode;
                try {
                  instance.componentDidMount();
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
            }
          }
        }
        function invokeLayoutEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
              case ClassComponent: {
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
              }
            }
          }
        }
        var COMPONENT_TYPE = 0;
        var HAS_PSEUDO_CLASS_TYPE = 1;
        var ROLE_TYPE = 2;
        var TEST_NAME_TYPE = 3;
        var TEXT_TYPE = 4;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          COMPONENT_TYPE = symbolFor("selector.component");
          HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
          ROLE_TYPE = symbolFor("selector.role");
          TEST_NAME_TYPE = symbolFor("selector.test_id");
          TEXT_TYPE = symbolFor("selector.text");
        }
        var commitHooks = [];
        function onCommitRoot$1() {
          {
            commitHooks.forEach(function(commitHook) {
              return commitHook();
            });
          }
        }
        var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
        function isLegacyActEnvironment(fiber) {
          {
            var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
            var jestIsDefined = typeof jest !== "undefined";
            return jestIsDefined && isReactActEnvironmentGlobal !== false;
          }
        }
        function isConcurrentActEnvironment() {
          {
            var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
            if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
              error("The current testing environment is not configured to support act(...)");
            }
            return isReactActEnvironmentGlobal;
          }
        }
        var ceil = Math.ceil;
        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
        var NoContext = 0;
        var BatchedContext = 1;
        var RenderContext = 2;
        var CommitContext = 4;
        var RootInProgress = 0;
        var RootFatalErrored = 1;
        var RootErrored = 2;
        var RootSuspended = 3;
        var RootSuspendedWithDelay = 4;
        var RootCompleted = 5;
        var RootDidNotComplete = 6;
        var executionContext = NoContext;
        var workInProgressRoot = null;
        var workInProgress = null;
        var workInProgressRootRenderLanes = NoLanes;
        var subtreeRenderLanes = NoLanes;
        var subtreeRenderLanesCursor = createCursor(NoLanes);
        var workInProgressRootExitStatus = RootInProgress;
        var workInProgressRootFatalError = null;
        var workInProgressRootIncludedLanes = NoLanes;
        var workInProgressRootSkippedLanes = NoLanes;
        var workInProgressRootInterleavedUpdatedLanes = NoLanes;
        var workInProgressRootPingedLanes = NoLanes;
        var workInProgressRootConcurrentErrors = null;
        var workInProgressRootRecoverableErrors = null;
        var globalMostRecentFallbackTime = 0;
        var FALLBACK_THROTTLE_MS = 500;
        var workInProgressRootRenderTargetTime = Infinity;
        var RENDER_TIMEOUT_MS = 500;
        var workInProgressTransitions = null;
        function resetRenderTimer() {
          workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
        }
        function getRenderTargetTime() {
          return workInProgressRootRenderTargetTime;
        }
        var hasUncaughtError = false;
        var firstUncaughtError = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var rootDoesHavePassiveEffects = false;
        var rootWithPendingPassiveEffects = null;
        var pendingPassiveEffectsLanes = NoLanes;
        var pendingPassiveProfilerEffects = [];
        var pendingPassiveTransitions = null;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var rootWithNestedUpdates = null;
        var isFlushingPassiveEffects = false;
        var didScheduleUpdateDuringPassiveEffects = false;
        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
        var nestedPassiveUpdateCount = 0;
        var rootWithPassiveNestedUpdates = null;
        var currentEventTime = NoTimestamp;
        var currentEventTransitionLane = NoLanes;
        var isRunningInsertionEffect = false;
        function getWorkInProgressRoot() {
          return workInProgressRoot;
        }
        function requestEventTime() {
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            return now();
          }
          if (currentEventTime !== NoTimestamp) {
            return currentEventTime;
          }
          currentEventTime = now();
          return currentEventTime;
        }
        function requestUpdateLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
            return pickArbitraryLane(workInProgressRootRenderLanes);
          }
          var isTransition = requestCurrentTransition() !== NoTransition;
          if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
              var transition = ReactCurrentBatchConfig$3.transition;
              if (!transition._updatedFibers) {
                transition._updatedFibers = /* @__PURE__ */ new Set();
              }
              transition._updatedFibers.add(fiber);
            }
            if (currentEventTransitionLane === NoLane) {
              currentEventTransitionLane = claimNextTransitionLane();
            }
            return currentEventTransitionLane;
          }
          var updateLane = getCurrentUpdatePriority();
          if (updateLane !== NoLane) {
            return updateLane;
          }
          var eventLane = getCurrentEventPriority();
          return eventLane;
        }
        function requestRetryLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          }
          return claimNextRetryLane();
        }
        function scheduleUpdateOnFiber(root3, fiber, lane, eventTime) {
          checkForNestedUpdates();
          {
            if (isRunningInsertionEffect) {
              error("useInsertionEffect must not schedule updates.");
            }
          }
          {
            if (isFlushingPassiveEffects) {
              didScheduleUpdateDuringPassiveEffects = true;
            }
          }
          markRootUpdated(root3, lane, eventTime);
          if ((executionContext & RenderContext) !== NoLanes && root3 === workInProgressRoot) {
            warnAboutRenderPhaseUpdatesInDEV(fiber);
          } else {
            {
              if (isDevToolsPresent) {
                addFiberToLanesMap(root3, fiber, lane);
              }
            }
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root3 === workInProgressRoot) {
              if ((executionContext & RenderContext) === NoContext) {
                workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
              }
              if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                markRootSuspended$1(root3, workInProgressRootRenderLanes);
              }
            }
            ensureRootIsScheduled(root3, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function scheduleInitialHydrationOnRoot(root3, lane, eventTime) {
          var current2 = root3.current;
          current2.lanes = lane;
          markRootUpdated(root3, lane, eventTime);
          ensureRootIsScheduled(root3, eventTime);
        }
        function isUnsafeClassRenderPhaseUpdate(fiber) {
          return (executionContext & RenderContext) !== NoContext;
        }
        function ensureRootIsScheduled(root3, currentTime) {
          var existingCallbackNode = root3.callbackNode;
          markStarvedLanesAsExpired(root3, currentTime);
          var nextLanes = getNextLanes(root3, root3 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (nextLanes === NoLanes) {
            if (existingCallbackNode !== null) {
              cancelCallback$1(existingCallbackNode);
            }
            root3.callbackNode = null;
            root3.callbackPriority = NoLane;
            return;
          }
          var newCallbackPriority = getHighestPriorityLane(nextLanes);
          var existingCallbackPriority = root3.callbackPriority;
          if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            {
              if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
                error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return;
          }
          if (existingCallbackNode != null) {
            cancelCallback$1(existingCallbackNode);
          }
          var newCallbackNode;
          if (newCallbackPriority === SyncLane) {
            if (root3.tag === LegacyRoot) {
              if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {
                ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
              }
              scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root3));
            } else {
              scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root3));
            }
            {
              if (ReactCurrentActQueue$1.current !== null) {
                ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
              } else {
                scheduleMicrotask(function() {
                  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                    flushSyncCallbacks();
                  }
                });
              }
            }
            newCallbackNode = null;
          } else {
            var schedulerPriorityLevel;
            switch (lanesToEventPriority(nextLanes)) {
              case DiscreteEventPriority:
                schedulerPriorityLevel = ImmediatePriority;
                break;
              case ContinuousEventPriority:
                schedulerPriorityLevel = UserBlockingPriority;
                break;
              case DefaultEventPriority:
                schedulerPriorityLevel = NormalPriority;
                break;
              case IdleEventPriority:
                schedulerPriorityLevel = IdlePriority;
                break;
              default:
                schedulerPriorityLevel = NormalPriority;
                break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root3));
          }
          root3.callbackPriority = newCallbackPriority;
          root3.callbackNode = newCallbackNode;
        }
        function performConcurrentWorkOnRoot(root3, didTimeout) {
          {
            resetNestedUpdateFlag();
          }
          currentEventTime = NoTimestamp;
          currentEventTransitionLane = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var originalCallbackNode = root3.callbackNode;
          var didFlushPassiveEffects = flushPassiveEffects();
          if (didFlushPassiveEffects) {
            if (root3.callbackNode !== originalCallbackNode) {
              return null;
            }
          }
          var lanes = getNextLanes(root3, root3 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (lanes === NoLanes) {
            return null;
          }
          var shouldTimeSlice = !includesBlockingLane(root3, lanes) && !includesExpiredLane(root3, lanes) && !didTimeout;
          var exitStatus = shouldTimeSlice ? renderRootConcurrent(root3, lanes) : renderRootSync(root3, lanes);
          if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
              var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
              if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root3, errorRetryLanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root3, NoLanes);
              markRootSuspended$1(root3, lanes);
              ensureRootIsScheduled(root3, now());
              throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) {
              markRootSuspended$1(root3, lanes);
            } else {
              var renderWasConcurrent = !includesBlockingLane(root3, lanes);
              var finishedWork = root3.current.alternate;
              if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                exitStatus = renderRootSync(root3, lanes);
                if (exitStatus === RootErrored) {
                  var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
                  if (_errorRetryLanes !== NoLanes) {
                    lanes = _errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root3, _errorRetryLanes);
                  }
                }
                if (exitStatus === RootFatalErrored) {
                  var _fatalError = workInProgressRootFatalError;
                  prepareFreshStack(root3, NoLanes);
                  markRootSuspended$1(root3, lanes);
                  ensureRootIsScheduled(root3, now());
                  throw _fatalError;
                }
              }
              root3.finishedWork = finishedWork;
              root3.finishedLanes = lanes;
              finishConcurrentRender(root3, exitStatus, lanes);
            }
          }
          ensureRootIsScheduled(root3, now());
          if (root3.callbackNode === originalCallbackNode) {
            return performConcurrentWorkOnRoot.bind(null, root3);
          }
          return null;
        }
        function recoverFromConcurrentError(root3, errorRetryLanes) {
          var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
          if (isRootDehydrated(root3)) {
            var rootWorkInProgress = prepareFreshStack(root3, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            {
              errorHydratingContainer(root3.containerInfo);
            }
          }
          var exitStatus = renderRootSync(root3, errorRetryLanes);
          if (exitStatus !== RootErrored) {
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt;
            if (errorsFromSecondAttempt !== null) {
              queueRecoverableErrors(errorsFromSecondAttempt);
            }
          }
          return exitStatus;
        }
        function queueRecoverableErrors(errors) {
          if (workInProgressRootRecoverableErrors === null) {
            workInProgressRootRecoverableErrors = errors;
          } else {
            workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
          }
        }
        function finishConcurrentRender(root3, exitStatus, lanes) {
          switch (exitStatus) {
            case RootInProgress:
            case RootFatalErrored: {
              throw new Error("Root did not complete. This is a bug in React.");
            }
            case RootErrored: {
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspended: {
              markRootSuspended$1(root3, lanes);
              if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                if (msUntilTimeout > 10) {
                  var nextLanes = getNextLanes(root3, NoLanes);
                  if (nextLanes !== NoLanes) {
                    break;
                  }
                  var suspendedLanes = root3.suspendedLanes;
                  if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                    var eventTime = requestEventTime();
                    markRootPinged(root3, suspendedLanes);
                    break;
                  }
                  root3.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root3, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                  break;
                }
              }
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspendedWithDelay: {
              markRootSuspended$1(root3, lanes);
              if (includesOnlyTransitions(lanes)) {
                break;
              }
              if (!shouldForceFlushFallbacksInDEV()) {
                var mostRecentEventTime = getMostRecentEventTime(root3, lanes);
                var eventTimeMs = mostRecentEventTime;
                var timeElapsedMs = now() - eventTimeMs;
                var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                if (_msUntilTimeout > 10) {
                  root3.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root3, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                  break;
                }
              }
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootCompleted: {
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            default: {
              throw new Error("Unknown root exit status.");
            }
          }
        }
        function isRenderConsistentWithExternalStores(finishedWork) {
          var node = finishedWork;
          while (true) {
            if (node.flags & StoreConsistency) {
              var updateQueue = node.updateQueue;
              if (updateQueue !== null) {
                var checks = updateQueue.stores;
                if (checks !== null) {
                  for (var i = 0; i < checks.length; i++) {
                    var check = checks[i];
                    var getSnapshot = check.getSnapshot;
                    var renderedValue = check.value;
                    try {
                      if (!objectIs(getSnapshot(), renderedValue)) {
                        return false;
                      }
                    } catch (error2) {
                      return false;
                    }
                  }
                }
              }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
              child.return = node;
              node = child;
              continue;
            }
            if (node === finishedWork) {
              return true;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === finishedWork) {
                return true;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return true;
        }
        function markRootSuspended$1(root3, suspendedLanes) {
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
          markRootSuspended(root3, suspendedLanes);
        }
        function performSyncWorkOnRoot(root3) {
          {
            syncNestedUpdateFlag();
          }
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          flushPassiveEffects();
          var lanes = getNextLanes(root3, NoLanes);
          if (!includesSomeLane(lanes, SyncLane)) {
            ensureRootIsScheduled(root3, now());
            return null;
          }
          var exitStatus = renderRootSync(root3, lanes);
          if (root3.tag !== LegacyRoot && exitStatus === RootErrored) {
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
            if (errorRetryLanes !== NoLanes) {
              lanes = errorRetryLanes;
              exitStatus = recoverFromConcurrentError(root3, errorRetryLanes);
            }
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root3, NoLanes);
            markRootSuspended$1(root3, lanes);
            ensureRootIsScheduled(root3, now());
            throw fatalError;
          }
          if (exitStatus === RootDidNotComplete) {
            throw new Error("Root did not complete. This is a bug in React.");
          }
          var finishedWork = root3.current.alternate;
          root3.finishedWork = finishedWork;
          root3.finishedLanes = lanes;
          commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
          ensureRootIsScheduled(root3, now());
          return null;
        }
        function flushRoot(root3, lanes) {
          if (lanes !== NoLanes) {
            markRootEntangled(root3, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root3, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              resetRenderTimer();
              flushSyncCallbacks();
            }
          }
        }
        function batchedUpdates$1(fn, a) {
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          try {
            return fn(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function discreteUpdates(fn, a, b, c, d) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) {
              resetRenderTimer();
            }
          }
        }
        function flushSync(fn) {
          if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
            flushPassiveEffects();
          }
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          var previousPriority = getCurrentUpdatePriority();
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) {
              return fn();
            } else {
              return void 0;
            }
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext;
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              flushSyncCallbacks();
            }
          }
        }
        function isAlreadyRendering() {
          return (executionContext & (RenderContext | CommitContext)) !== NoContext;
        }
        function pushRenderLanes(fiber, lanes) {
          push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
          subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
          workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
        }
        function popRenderLanes(fiber) {
          subtreeRenderLanes = subtreeRenderLanesCursor.current;
          pop(subtreeRenderLanesCursor, fiber);
        }
        function prepareFreshStack(root3, lanes) {
          root3.finishedWork = null;
          root3.finishedLanes = NoLanes;
          var timeoutHandle = root3.timeoutHandle;
          if (timeoutHandle !== noTimeout) {
            root3.timeoutHandle = noTimeout;
            cancelTimeout(timeoutHandle);
          }
          if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while (interruptedWork !== null) {
              var current2 = interruptedWork.alternate;
              unwindInterruptedWork(current2, interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          workInProgressRoot = root3;
          var rootWorkInProgress = createWorkInProgress(root3.current, null);
          workInProgress = rootWorkInProgress;
          workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
          workInProgressRootExitStatus = RootInProgress;
          workInProgressRootFatalError = null;
          workInProgressRootSkippedLanes = NoLanes;
          workInProgressRootInterleavedUpdatedLanes = NoLanes;
          workInProgressRootPingedLanes = NoLanes;
          workInProgressRootConcurrentErrors = null;
          workInProgressRootRecoverableErrors = null;
          finishQueueingConcurrentUpdates();
          {
            ReactStrictModeWarnings.discardPendingWarnings();
          }
          return rootWorkInProgress;
        }
        function handleError(root3, thrownValue) {
          do {
            var erroredWork = workInProgress;
            try {
              resetContextDependencies();
              resetHooksAfterThrow();
              resetCurrentFiber();
              ReactCurrentOwner$2.current = null;
              if (erroredWork === null || erroredWork.return === null) {
                workInProgressRootExitStatus = RootFatalErrored;
                workInProgressRootFatalError = thrownValue;
                workInProgress = null;
                return;
              }
              if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
              }
              if (enableSchedulingProfiler) {
                markComponentRenderStopped();
                if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                  var wakeable = thrownValue;
                  markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                } else {
                  markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
              }
              throwException(root3, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
              completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
              thrownValue = yetAnotherThrownValue;
              if (workInProgress === erroredWork && erroredWork !== null) {
                erroredWork = erroredWork.return;
                workInProgress = erroredWork;
              } else {
                erroredWork = workInProgress;
              }
              continue;
            }
            return;
          } while (true);
        }
        function pushDispatcher() {
          var prevDispatcher = ReactCurrentDispatcher$2.current;
          ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
          if (prevDispatcher === null) {
            return ContextOnlyDispatcher;
          } else {
            return prevDispatcher;
          }
        }
        function popDispatcher(prevDispatcher) {
          ReactCurrentDispatcher$2.current = prevDispatcher;
        }
        function markCommitTimeOfFallback() {
          globalMostRecentFallbackTime = now();
        }
        function markSkippedUpdateLanes(lane) {
          workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
        }
        function renderDidSuspend() {
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootSuspended;
          }
        }
        function renderDidSuspendDelayIfPossible() {
          if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
            workInProgressRootExitStatus = RootSuspendedWithDelay;
          }
          if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
            markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
          }
        }
        function renderDidError(error2) {
          if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
            workInProgressRootExitStatus = RootErrored;
          }
          if (workInProgressRootConcurrentErrors === null) {
            workInProgressRootConcurrentErrors = [error2];
          } else {
            workInProgressRootConcurrentErrors.push(error2);
          }
        }
        function renderHasNotSuspendedYet() {
          return workInProgressRootExitStatus === RootInProgress;
        }
        function renderRootSync(root3, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root3 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root3.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root3, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root3, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root3, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root3, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);
          if (workInProgress !== null) {
            throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
          {
            markRenderStopped();
          }
          workInProgressRoot = null;
          workInProgressRootRenderLanes = NoLanes;
          return workInProgressRootExitStatus;
        }
        function workLoopSync() {
          while (workInProgress !== null) {
            performUnitOfWork(workInProgress);
          }
        }
        function renderRootConcurrent(root3, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root3 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root3.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root3, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root3, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root3, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root3, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          popDispatcher(prevDispatcher);
          executionContext = prevExecutionContext;
          if (workInProgress !== null) {
            {
              markRenderYielded();
            }
            return RootInProgress;
          } else {
            {
              markRenderStopped();
            }
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
        }
        function workLoopConcurrent() {
          while (workInProgress !== null && !shouldYield()) {
            performUnitOfWork(workInProgress);
          }
        }
        function performUnitOfWork(unitOfWork) {
          var current2 = unitOfWork.alternate;
          setCurrentFiber(unitOfWork);
          var next;
          if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
          } else {
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
          }
          resetCurrentFiber();
          unitOfWork.memoizedProps = unitOfWork.pendingProps;
          if (next === null) {
            completeUnitOfWork(unitOfWork);
          } else {
            workInProgress = next;
          }
          ReactCurrentOwner$2.current = null;
        }
        function completeUnitOfWork(unitOfWork) {
          var completedWork = unitOfWork;
          do {
            var current2 = completedWork.alternate;
            var returnFiber = completedWork.return;
            if ((completedWork.flags & Incomplete) === NoFlags) {
              setCurrentFiber(completedWork);
              var next = void 0;
              if ((completedWork.mode & ProfileMode) === NoMode) {
                next = completeWork(current2, completedWork, subtreeRenderLanes);
              } else {
                startProfilerTimer(completedWork);
                next = completeWork(current2, completedWork, subtreeRenderLanes);
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
              }
              resetCurrentFiber();
              if (next !== null) {
                workInProgress = next;
                return;
              }
            } else {
              var _next = unwindWork(current2, completedWork);
              if (_next !== null) {
                _next.flags &= HostEffectMask;
                workInProgress = _next;
                return;
              }
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                var actualDuration = completedWork.actualDuration;
                var child = completedWork.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
              }
              if (returnFiber !== null) {
                returnFiber.flags |= Incomplete;
                returnFiber.subtreeFlags = NoFlags;
                returnFiber.deletions = null;
              } else {
                workInProgressRootExitStatus = RootDidNotComplete;
                workInProgress = null;
                return;
              }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
              workInProgress = siblingFiber;
              return;
            }
            completedWork = returnFiber;
            workInProgress = completedWork;
          } while (completedWork !== null);
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootCompleted;
          }
        }
        function commitRoot(root3, recoverableErrors, transitions) {
          var previousUpdateLanePriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root3, recoverableErrors, transitions, previousUpdateLanePriority);
          } finally {
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
          }
          return null;
        }
        function commitRootImpl(root3, recoverableErrors, transitions, renderPriorityLevel) {
          do {
            flushPassiveEffects();
          } while (rootWithPendingPassiveEffects !== null);
          flushRenderPhaseStrictModeWarningsInDEV();
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var finishedWork = root3.finishedWork;
          var lanes = root3.finishedLanes;
          {
            markCommitStarted(lanes);
          }
          if (finishedWork === null) {
            {
              markCommitStopped();
            }
            return null;
          } else {
            {
              if (lanes === NoLanes) {
                error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
              }
            }
          }
          root3.finishedWork = null;
          root3.finishedLanes = NoLanes;
          if (finishedWork === root3.current) {
            throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
          }
          root3.callbackNode = null;
          root3.callbackPriority = NoLane;
          var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
          markRootFinished(root3, remainingLanes);
          if (root3 === workInProgressRoot) {
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
          }
          if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              pendingPassiveTransitions = transitions;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
          var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            ReactCurrentOwner$2.current = null;
            var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root3, finishedWork);
            {
              recordCommitTime();
            }
            commitMutationEffects(root3, finishedWork, lanes);
            resetAfterCommit(root3.containerInfo);
            root3.current = finishedWork;
            {
              markLayoutEffectsStarted(lanes);
            }
            commitLayoutEffects(finishedWork, root3, lanes);
            {
              markLayoutEffectsStopped();
            }
            requestPaint();
            executionContext = prevExecutionContext;
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
          } else {
            root3.current = finishedWork;
            {
              recordCommitTime();
            }
          }
          var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
          if (rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root3;
            pendingPassiveEffectsLanes = lanes;
          } else {
            {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
            }
          }
          remainingLanes = root3.pendingLanes;
          if (remainingLanes === NoLanes) {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          {
            if (!rootDidHavePassiveEffects) {
              commitDoubleInvokeEffectsInDEV(root3.current, false);
            }
          }
          onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
          {
            if (isDevToolsPresent) {
              root3.memoizedUpdaters.clear();
            }
          }
          {
            onCommitRoot$1();
          }
          ensureRootIsScheduled(root3, now());
          if (recoverableErrors !== null) {
            var onRecoverableError = root3.onRecoverableError;
            for (var i = 0; i < recoverableErrors.length; i++) {
              var recoverableError = recoverableErrors[i];
              var componentStack = recoverableError.stack;
              var digest = recoverableError.digest;
              onRecoverableError(recoverableError.value, {
                componentStack,
                digest
              });
            }
          }
          if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
          }
          if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root3.tag !== LegacyRoot) {
            flushPassiveEffects();
          }
          remainingLanes = root3.pendingLanes;
          if (includesSomeLane(remainingLanes, SyncLane)) {
            {
              markNestedUpdateScheduled();
            }
            if (root3 === rootWithNestedUpdates) {
              nestedUpdateCount++;
            } else {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = root3;
            }
          } else {
            nestedUpdateCount = 0;
          }
          flushSyncCallbacks();
          {
            markCommitStopped();
          }
          return null;
        }
        function flushPassiveEffects() {
          if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(priority);
              return flushPassiveEffectsImpl();
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
            }
          }
          return false;
        }
        function enqueuePendingPassiveProfilerEffect(fiber) {
          {
            pendingPassiveProfilerEffects.push(fiber);
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
        }
        function flushPassiveEffectsImpl() {
          if (rootWithPendingPassiveEffects === null) {
            return false;
          }
          var transitions = pendingPassiveTransitions;
          pendingPassiveTransitions = null;
          var root3 = rootWithPendingPassiveEffects;
          var lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Cannot flush passive effects while already rendering.");
          }
          {
            isFlushingPassiveEffects = true;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          {
            markPassiveEffectsStarted(lanes);
          }
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          commitPassiveUnmountEffects(root3.current);
          commitPassiveMountEffects(root3, root3.current, lanes, transitions);
          {
            var profilerEffects = pendingPassiveProfilerEffects;
            pendingPassiveProfilerEffects = [];
            for (var i = 0; i < profilerEffects.length; i++) {
              var _fiber = profilerEffects[i];
              commitPassiveEffectDurations(root3, _fiber);
            }
          }
          {
            markPassiveEffectsStopped();
          }
          {
            commitDoubleInvokeEffectsInDEV(root3.current, true);
          }
          executionContext = prevExecutionContext;
          flushSyncCallbacks();
          {
            if (didScheduleUpdateDuringPassiveEffects) {
              if (root3 === rootWithPassiveNestedUpdates) {
                nestedPassiveUpdateCount++;
              } else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root3;
              }
            } else {
              nestedPassiveUpdateCount = 0;
            }
            isFlushingPassiveEffects = false;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          onPostCommitRoot(root3);
          {
            var stateNode = root3.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }
          return true;
        }
        function isAlreadyFailedLegacyErrorBoundary(instance) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
        }
        function markLegacyErrorBoundaryAsFailed(instance) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance);
          }
        }
        function prepareToThrowUncaughtError(error2) {
          if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error2;
          }
        }
        var onUncaughtError = prepareToThrowUncaughtError;
        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
          var errorInfo = createCapturedValueAtFiber(error2, sourceFiber);
          var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
          var root3 = enqueueUpdate(rootFiber, update, SyncLane);
          var eventTime = requestEventTime();
          if (root3 !== null) {
            markRootUpdated(root3, SyncLane, eventTime);
            ensureRootIsScheduled(root3, eventTime);
          }
        }
        function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
          {
            reportUncaughtErrorInDEV(error$1);
            setIsRunningInsertionEffect(false);
          }
          if (sourceFiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
          }
          var fiber = null;
          {
            fiber = nearestMountedAncestor;
          }
          while (fiber !== null) {
            if (fiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
              return;
            } else if (fiber.tag === ClassComponent) {
              var ctor = fiber.type;
              var instance = fiber.stateNode;
              if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                var root3 = enqueueUpdate(fiber, update, SyncLane);
                var eventTime = requestEventTime();
                if (root3 !== null) {
                  markRootUpdated(root3, SyncLane, eventTime);
                  ensureRootIsScheduled(root3, eventTime);
                }
                return;
              }
            }
            fiber = fiber.return;
          }
          {
            error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
          }
        }
        function pingSuspendedRoot(root3, wakeable, pingedLanes) {
          var pingCache = root3.pingCache;
          if (pingCache !== null) {
            pingCache.delete(wakeable);
          }
          var eventTime = requestEventTime();
          markRootPinged(root3, pingedLanes);
          warnIfSuspenseResolutionNotWrappedWithActDEV(root3);
          if (workInProgressRoot === root3 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
              prepareFreshStack(root3, NoLanes);
            } else {
              workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
            }
          }
          ensureRootIsScheduled(root3, eventTime);
        }
        function retryTimedOutBoundary(boundaryFiber, retryLane) {
          if (retryLane === NoLane) {
            retryLane = requestRetryLane(boundaryFiber);
          }
          var eventTime = requestEventTime();
          var root3 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
          if (root3 !== null) {
            markRootUpdated(root3, retryLane, eventTime);
            ensureRootIsScheduled(root3, eventTime);
          }
        }
        function retryDehydratedSuspenseBoundary(boundaryFiber) {
          var suspenseState = boundaryFiber.memoizedState;
          var retryLane = NoLane;
          if (suspenseState !== null) {
            retryLane = suspenseState.retryLane;
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function resolveRetryWakeable(boundaryFiber, wakeable) {
          var retryLane = NoLane;
          var retryCache;
          switch (boundaryFiber.tag) {
            case SuspenseComponent:
              retryCache = boundaryFiber.stateNode;
              var suspenseState = boundaryFiber.memoizedState;
              if (suspenseState !== null) {
                retryLane = suspenseState.retryLane;
              }
              break;
            case SuspenseListComponent:
              retryCache = boundaryFiber.stateNode;
              break;
            default:
              throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
          }
          if (retryCache !== null) {
            retryCache.delete(wakeable);
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function jnd(timeElapsed) {
          return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
        }
        function checkForNestedUpdates() {
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
          }
          {
            if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
              error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
            }
          }
        }
        function flushRenderPhaseStrictModeWarningsInDEV() {
          {
            ReactStrictModeWarnings.flushLegacyContextWarning();
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            }
          }
        }
        function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
          {
            setCurrentFiber(fiber);
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
            }
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
            }
            resetCurrentFiber();
          }
        }
        function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
          {
            var current2 = firstChild;
            var subtreeRoot = null;
            while (current2 !== null) {
              var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
              if (current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags) {
                current2 = current2.child;
              } else {
                if ((current2.flags & fiberFlags) !== NoFlags) {
                  invokeEffectFn(current2);
                }
                if (current2.sibling !== null) {
                  current2 = current2.sibling;
                } else {
                  current2 = subtreeRoot = current2.return;
                }
              }
            }
          }
        }
        var didWarnStateUpdateForNotYetMountedComponent = null;
        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
          {
            if ((executionContext & RenderContext) !== NoContext) {
              return;
            }
            if (!(fiber.mode & ConcurrentMode)) {
              return;
            }
            var tag = fiber.tag;
            if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
              return;
            }
            var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
            if (didWarnStateUpdateForNotYetMountedComponent !== null) {
              if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForNotYetMountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
            }
            var previousFiber = current;
            try {
              setCurrentFiber(fiber);
              error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
            } finally {
              if (previousFiber) {
                setCurrentFiber(fiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }
        var beginWork$1;
        {
          var dummyFiber = null;
          beginWork$1 = function(current2, unitOfWork, lanes) {
            var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
            try {
              return beginWork(current2, unitOfWork, lanes);
            } catch (originalError) {
              if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                throw originalError;
              }
              resetContextDependencies();
              resetHooksAfterThrow();
              unwindInterruptedWork(current2, unitOfWork);
              assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
              if (unitOfWork.mode & ProfileMode) {
                startProfilerTimer(unitOfWork);
              }
              invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) {
                  originalError._suppressLogging = true;
                }
              }
              throw originalError;
            }
          };
        }
        var didWarnAboutUpdateInRender = false;
        var didWarnAboutUpdateInRenderForAnotherComponent;
        {
          didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
        }
        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
          {
            if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                  var dedupeKey = renderingComponentName;
                  if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                  }
                  break;
                }
                case ClassComponent: {
                  if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                  }
                  break;
                }
              }
            }
          }
        }
        function restorePendingUpdaters(root3, lanes) {
          {
            if (isDevToolsPresent) {
              var memoizedUpdaters = root3.memoizedUpdaters;
              memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root3, schedulingFiber, lanes);
              });
            }
          }
        }
        var fakeActCallbackNode = {};
        function scheduleCallback$1(priorityLevel, callback) {
          {
            var actQueue = ReactCurrentActQueue$1.current;
            if (actQueue !== null) {
              actQueue.push(callback);
              return fakeActCallbackNode;
            } else {
              return scheduleCallback(priorityLevel, callback);
            }
          }
        }
        function cancelCallback$1(callbackNode) {
          if (callbackNode === fakeActCallbackNode) {
            return;
          }
          return cancelCallback(callbackNode);
        }
        function shouldForceFlushFallbacksInDEV() {
          return ReactCurrentActQueue$1.current !== null;
        }
        function warnIfUpdatesNotWrappedWithActDEV(fiber) {
          {
            if (fiber.mode & ConcurrentMode) {
              if (!isConcurrentActEnvironment()) {
                return;
              }
            } else {
              if (!isLegacyActEnvironment()) {
                return;
              }
              if (executionContext !== NoContext) {
                return;
              }
              if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
                return;
              }
            }
            if (ReactCurrentActQueue$1.current === null) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        function warnIfSuspenseResolutionNotWrappedWithActDEV(root3) {
          {
            if (root3.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
              error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
            }
          }
        }
        function setIsRunningInsertionEffect(isRunning) {
          {
            isRunningInsertionEffect = isRunning;
          }
        }
        var resolveFamily = null;
        var failedBoundaries = null;
        var setRefreshHandler = function(handler) {
          {
            resolveFamily = handler;
          }
        };
        function resolveFunctionForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              return type;
            }
            return family.current;
          }
        }
        function resolveClassForHotReloading(type) {
          return resolveFunctionForHotReloading(type);
        }
        function resolveForwardRefForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              if (type !== null && type !== void 0 && typeof type.render === "function") {
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                  var syntheticType = {
                    $$typeof: REACT_FORWARD_REF_TYPE,
                    render: currentRender
                  };
                  if (type.displayName !== void 0) {
                    syntheticType.displayName = type.displayName;
                  }
                  return syntheticType;
                }
              }
              return type;
            }
            return family.current;
          }
        }
        function isCompatibleFamilyForHotReloading(fiber, element) {
          {
            if (resolveFamily === null) {
              return false;
            }
            var prevType = fiber.elementType;
            var nextType = element.type;
            var needsCompareFamilies = false;
            var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
            switch (fiber.tag) {
              case ClassComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                }
                break;
              }
              case FunctionComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case ForwardRef: {
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case MemoComponent:
              case SimpleMemoComponent: {
                if ($$typeofNextType === REACT_MEMO_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              default:
                return false;
            }
            if (needsCompareFamilies) {
              var prevFamily = resolveFamily(prevType);
              if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                return true;
              }
            }
            return false;
          }
        }
        function markFailedErrorBoundaryForHotReloading(fiber) {
          {
            if (resolveFamily === null) {
              return;
            }
            if (typeof WeakSet !== "function") {
              return;
            }
            if (failedBoundaries === null) {
              failedBoundaries = /* @__PURE__ */ new WeakSet();
            }
            failedBoundaries.add(fiber);
          }
        }
        var scheduleRefresh = function(root3, update) {
          {
            if (resolveFamily === null) {
              return;
            }
            var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
            flushPassiveEffects();
            flushSync(function() {
              scheduleFibersWithFamiliesRecursively(root3.current, updatedFamilies, staleFamilies);
            });
          }
        };
        var scheduleRoot = function(root3, element) {
          {
            if (root3.context !== emptyContextObject) {
              return;
            }
            flushPassiveEffects();
            flushSync(function() {
              updateContainer(element, root3, null, null);
            });
          }
        };
        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
          {
            var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            if (resolveFamily === null) {
              throw new Error("Expected resolveFamily to be set during hot reload.");
            }
            var needsRender = false;
            var needsRemount = false;
            if (candidateType !== null) {
              var family = resolveFamily(candidateType);
              if (family !== void 0) {
                if (staleFamilies.has(family)) {
                  needsRemount = true;
                } else if (updatedFamilies.has(family)) {
                  if (tag === ClassComponent) {
                    needsRemount = true;
                  } else {
                    needsRender = true;
                  }
                }
              }
            }
            if (failedBoundaries !== null) {
              if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                needsRemount = true;
              }
            }
            if (needsRemount) {
              fiber._debugNeedsRemount = true;
            }
            if (needsRemount || needsRender) {
              var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (_root !== null) {
                scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
              }
            }
            if (child !== null && !needsRemount) {
              scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
            }
            if (sibling !== null) {
              scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
            }
          }
        }
        var findHostInstancesForRefresh = function(root3, families) {
          {
            var hostInstances = /* @__PURE__ */ new Set();
            var types = new Set(families.map(function(family) {
              return family.current;
            }));
            findHostInstancesForMatchingFibersRecursively(root3.current, types, hostInstances);
            return hostInstances;
          }
        };
        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
          {
            var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            var didMatch = false;
            if (candidateType !== null) {
              if (types.has(candidateType)) {
                didMatch = true;
              }
            }
            if (didMatch) {
              findHostInstancesForFiberShallowly(fiber, hostInstances);
            } else {
              if (child !== null) {
                findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
              }
            }
            if (sibling !== null) {
              findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
            }
          }
        }
        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
            if (foundHostInstances) {
              return;
            }
            var node = fiber;
            while (true) {
              switch (node.tag) {
                case HostComponent:
                  hostInstances.add(node.stateNode);
                  return;
                case HostPortal:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
                case HostRoot:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
              }
              if (node.return === null) {
                throw new Error("Expected to reach root first.");
              }
              node = node.return;
            }
          }
        }
        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var node = fiber;
            var foundHostInstances = false;
            while (true) {
              if (node.tag === HostComponent) {
                foundHostInstances = true;
                hostInstances.add(node.stateNode);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === fiber) {
                return foundHostInstances;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === fiber) {
                  return foundHostInstances;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          return false;
        }
        var hasBadMapPolyfill;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
            /* @__PURE__ */ new Set([nonExtensibleObject]);
          } catch (e) {
            hasBadMapPolyfill = true;
          }
        }
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.dependencies = null;
          this.mode = mode;
          this.flags = NoFlags;
          this.subtreeFlags = NoFlags;
          this.deletions = null;
          this.lanes = NoLanes;
          this.childLanes = NoLanes;
          this.alternate = null;
          {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this._debugSource = null;
            this._debugOwner = null;
            this._debugNeedsRemount = false;
            this._debugHookTypes = null;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function(tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct$1(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type) {
          return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
        }
        function resolveLazyComponentTag(Component) {
          if (typeof Component === "function") {
            return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
          } else if (Component !== void 0 && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current2, pendingProps) {
          var workInProgress2 = current2.alternate;
          if (workInProgress2 === null) {
            workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
            workInProgress2.elementType = current2.elementType;
            workInProgress2.type = current2.type;
            workInProgress2.stateNode = current2.stateNode;
            {
              workInProgress2._debugSource = current2._debugSource;
              workInProgress2._debugOwner = current2._debugOwner;
              workInProgress2._debugHookTypes = current2._debugHookTypes;
            }
            workInProgress2.alternate = current2;
            current2.alternate = workInProgress2;
          } else {
            workInProgress2.pendingProps = pendingProps;
            workInProgress2.type = current2.type;
            workInProgress2.flags = NoFlags;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            {
              workInProgress2.actualDuration = 0;
              workInProgress2.actualStartTime = -1;
            }
          }
          workInProgress2.flags = current2.flags & StaticMask;
          workInProgress2.childLanes = current2.childLanes;
          workInProgress2.lanes = current2.lanes;
          workInProgress2.child = current2.child;
          workInProgress2.memoizedProps = current2.memoizedProps;
          workInProgress2.memoizedState = current2.memoizedState;
          workInProgress2.updateQueue = current2.updateQueue;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          };
          workInProgress2.sibling = current2.sibling;
          workInProgress2.index = current2.index;
          workInProgress2.ref = current2.ref;
          {
            workInProgress2.selfBaseDuration = current2.selfBaseDuration;
            workInProgress2.treeBaseDuration = current2.treeBaseDuration;
          }
          {
            workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case FunctionComponent:
              case SimpleMemoComponent:
                workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                break;
              case ClassComponent:
                workInProgress2.type = resolveClassForHotReloading(current2.type);
                break;
              case ForwardRef:
                workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                break;
            }
          }
          return workInProgress2;
        }
        function resetWorkInProgress(workInProgress2, renderLanes2) {
          workInProgress2.flags &= StaticMask | Placement;
          var current2 = workInProgress2.alternate;
          if (current2 === null) {
            workInProgress2.childLanes = NoLanes;
            workInProgress2.lanes = renderLanes2;
            workInProgress2.child = null;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.memoizedProps = null;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.dependencies = null;
            workInProgress2.stateNode = null;
            {
              workInProgress2.selfBaseDuration = 0;
              workInProgress2.treeBaseDuration = 0;
            }
          } else {
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.type = current2.type;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
          }
          return workInProgress2;
        }
        function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
          var mode;
          if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
              mode |= StrictLegacyMode;
              {
                mode |= StrictEffectsMode;
              }
            }
          } else {
            mode = NoMode;
          }
          if (isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
          var fiberTag = IndeterminateComponent;
          var resolvedType = type;
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              fiberTag = ClassComponent;
              {
                resolvedType = resolveClassForHotReloading(resolvedType);
              }
            } else {
              {
                resolvedType = resolveFunctionForHotReloading(resolvedType);
              }
            }
          } else if (typeof type === "string") {
            fiberTag = HostComponent;
          } else {
            getTag:
              switch (type) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictLegacyMode;
                  if ((mode & ConcurrentMode) !== NoMode) {
                    mode |= StrictEffectsMode;
                  }
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_TYPE:
                  return createFiberFromSuspense(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_LIST_TYPE:
                  return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                case REACT_OFFSCREEN_TYPE:
                  return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                case REACT_LEGACY_HIDDEN_TYPE:
                case REACT_SCOPE_TYPE:
                case REACT_CACHE_TYPE:
                case REACT_TRACING_MARKER_TYPE:
                case REACT_DEBUG_TRACING_MODE_TYPE:
                default: {
                  if (typeof type === "object" && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        {
                          resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        }
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    }
                  }
                  var info = "";
                  {
                    if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                      info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                    }
                    var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                    if (ownerName) {
                      info += "\n\nCheck the render method of `" + ownerName + "`.";
                    }
                  }
                  throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
                }
              }
          }
          var fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type;
          fiber.type = resolvedType;
          fiber.lanes = lanes;
          {
            fiber._debugOwner = owner;
          }
          return fiber;
        }
        function createFiberFromElement(element, mode, lanes) {
          var owner = null;
          {
            owner = element._owner;
          }
          var type = element.type;
          var key = element.key;
          var pendingProps = element.props;
          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, lanes, key) {
          var fiber = createFiber(Fragment, elements, key, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
          {
            if (typeof pendingProps.id !== "string") {
              error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.lanes = lanes;
          {
            fiber.stateNode = {
              effectDuration: 0,
              passiveEffectDuration: 0
            };
          }
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
          var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
          fiber.elementType = REACT_OFFSCREEN_TYPE;
          fiber.lanes = lanes;
          var primaryChildInstance = {
            isHidden: false
          };
          fiber.stateNode = primaryChildInstance;
          return fiber;
        }
        function createFiberFromText(content, mode, lanes) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoMode);
          fiber.elementType = "DELETED";
          return fiber;
        }
        function createFiberFromDehydratedFragment(dehydratedNode) {
          var fiber = createFiber(DehydratedFragment, null, null, NoMode);
          fiber.stateNode = dehydratedNode;
          return fiber;
        }
        function createFiberFromPortal(portal, mode, lanes) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.lanes = lanes;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoMode);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.dependencies = source.dependencies;
          target.mode = source.mode;
          target.flags = source.flags;
          target.subtreeFlags = source.subtreeFlags;
          target.deletions = source.deletions;
          target.lanes = source.lanes;
          target.childLanes = source.childLanes;
          target.alternate = source.alternate;
          {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target._debugSource = source._debugSource;
          target._debugOwner = source._debugOwner;
          target._debugNeedsRemount = source._debugNeedsRemount;
          target._debugHookTypes = source._debugHookTypes;
          return target;
        }
        function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
          this.tag = tag;
          this.containerInfo = containerInfo;
          this.pendingChildren = null;
          this.current = null;
          this.pingCache = null;
          this.finishedWork = null;
          this.timeoutHandle = noTimeout;
          this.context = null;
          this.pendingContext = null;
          this.callbackNode = null;
          this.callbackPriority = NoLane;
          this.eventTimes = createLaneMap(NoLanes);
          this.expirationTimes = createLaneMap(NoTimestamp);
          this.pendingLanes = NoLanes;
          this.suspendedLanes = NoLanes;
          this.pingedLanes = NoLanes;
          this.expiredLanes = NoLanes;
          this.mutableReadLanes = NoLanes;
          this.finishedLanes = NoLanes;
          this.entangledLanes = NoLanes;
          this.entanglements = createLaneMap(NoLanes);
          this.identifierPrefix = identifierPrefix;
          this.onRecoverableError = onRecoverableError;
          {
            this.mutableSourceEagerHydrationData = null;
          }
          {
            this.effectDuration = 0;
            this.passiveEffectDuration = 0;
          }
          {
            this.memoizedUpdaters = /* @__PURE__ */ new Set();
            var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
            for (var _i = 0; _i < TotalLanes; _i++) {
              pendingUpdatersLaneMap.push(/* @__PURE__ */ new Set());
            }
          }
          {
            switch (tag) {
              case ConcurrentRoot:
                this._debugRootType = hydrate2 ? "hydrateRoot()" : "createRoot()";
                break;
              case LegacyRoot:
                this._debugRootType = hydrate2 ? "hydrate()" : "render()";
                break;
            }
          }
        }
        function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var root3 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError);
          var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
          root3.current = uninitializedFiber;
          uninitializedFiber.stateNode = root3;
          {
            var _initialState = {
              element: initialChildren,
              isDehydrated: hydrate2,
              cache: null,
              transitions: null,
              pendingSuspenseBoundaries: null
            };
            uninitializedFiber.memoizedState = _initialState;
          }
          initializeUpdateQueue(uninitializedFiber);
          return root3;
        }
        var ReactVersion = "18.2.0";
        function createPortal(children, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
          {
            checkKeyStringCoercion(key);
          }
          return {
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children,
            containerInfo,
            implementation
          };
        }
        var didWarnAboutNestedUpdates;
        var didWarnAboutFindNodeInStrictMode;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) {
              return processChildContext(fiber, Component, parentContext);
            }
          }
          return parentContext;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                throw new Error("Unable to find node on an unmounted component.");
              } else {
                var keys = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictLegacyMode) {
              var componentName = getComponentNameFromFiber(fiber) || "Component";
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                  setCurrentFiber(hostFiber);
                  if (fiber.mode & StrictLegacyMode) {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  } else {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  }
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(previousFiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
            return hostFiber.stateNode;
          }
        }
        function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = false;
          var initialChildren = null;
          return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        }
        function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = true;
          var root3 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          root3.context = getContextForSubtree(null);
          var current2 = root3.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current2);
          var update = createUpdate(eventTime, lane);
          update.callback = callback !== void 0 && callback !== null ? callback : null;
          enqueueUpdate(current2, update, lane);
          scheduleInitialHydrationOnRoot(root3, lane, eventTime);
          return root3;
        }
        function updateContainer(element, container, parentComponent, callback) {
          {
            onScheduleRoot(container, element);
          }
          var current$1 = container.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current$1);
          {
            markRenderScheduled(lane);
          }
          var context = getContextForSubtree(parentComponent);
          if (container.context === null) {
            container.context = context;
          } else {
            container.pendingContext = context;
          }
          {
            if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
            }
          }
          var update = createUpdate(eventTime, lane);
          update.payload = {
            element
          };
          callback = callback === void 0 ? null : callback;
          if (callback !== null) {
            {
              if (typeof callback !== "function") {
                error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
              }
            }
            update.callback = callback;
          }
          var root3 = enqueueUpdate(current$1, update, lane);
          if (root3 !== null) {
            scheduleUpdateOnFiber(root3, current$1, lane, eventTime);
            entangleTransitions(root3, current$1, lane);
          }
          return lane;
        }
        function getPublicRootInstance(container) {
          var containerFiber = container.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function attemptSynchronousHydration$1(fiber) {
          switch (fiber.tag) {
            case HostRoot: {
              var root3 = fiber.stateNode;
              if (isRootDehydrated(root3)) {
                var lanes = getHighestPriorityPendingLanes(root3);
                flushRoot(root3, lanes);
              }
              break;
            }
            case SuspenseComponent: {
              flushSync(function() {
                var root4 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root4 !== null) {
                  var eventTime = requestEventTime();
                  scheduleUpdateOnFiber(root4, fiber, SyncLane, eventTime);
                }
              });
              var retryLane = SyncLane;
              markRetryLaneIfNotHydrated(fiber, retryLane);
              break;
            }
          }
        }
        function markRetryLaneImpl(fiber, retryLane) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
          }
        }
        function markRetryLaneIfNotHydrated(fiber, retryLane) {
          markRetryLaneImpl(fiber, retryLane);
          var alternate = fiber.alternate;
          if (alternate) {
            markRetryLaneImpl(alternate, retryLane);
          }
        }
        function attemptContinuousHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = SelectiveHydrationLane;
          var root3 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root3 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptHydrationAtCurrentPriority$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = requestUpdateLane(fiber);
          var root3 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root3 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        var shouldErrorImpl = function(fiber) {
          return null;
        };
        function shouldError(fiber) {
          return shouldErrorImpl(fiber);
        }
        var shouldSuspendImpl = function(fiber) {
          return false;
        };
        function shouldSuspend(fiber) {
          return shouldSuspendImpl(fiber);
        }
        var overrideHookState = null;
        var overrideHookStateDeletePath = null;
        var overrideHookStateRenamePath = null;
        var overrideProps = null;
        var overridePropsDeletePath = null;
        var overridePropsRenamePath = null;
        var scheduleUpdate = null;
        var setErrorHandler = null;
        var setSuspenseHandler = null;
        {
          var copyWithDeleteImpl = function(obj, path, index2) {
            var key = path[index2];
            var updated = isArray(obj) ? obj.slice() : assign({}, obj);
            if (index2 + 1 === path.length) {
              if (isArray(updated)) {
                updated.splice(key, 1);
              } else {
                delete updated[key];
              }
              return updated;
            }
            updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
            return updated;
          };
          var copyWithDelete = function(obj, path) {
            return copyWithDeleteImpl(obj, path, 0);
          };
          var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
            var oldKey = oldPath[index2];
            var updated = isArray(obj) ? obj.slice() : assign({}, obj);
            if (index2 + 1 === oldPath.length) {
              var newKey = newPath[index2];
              updated[newKey] = updated[oldKey];
              if (isArray(updated)) {
                updated.splice(oldKey, 1);
              } else {
                delete updated[oldKey];
              }
            } else {
              updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index2 + 1);
            }
            return updated;
          };
          var copyWithRename = function(obj, oldPath, newPath) {
            if (oldPath.length !== newPath.length) {
              warn("copyWithRename() expects paths of the same length");
              return;
            } else {
              for (var i = 0; i < newPath.length - 1; i++) {
                if (oldPath[i] !== newPath[i]) {
                  warn("copyWithRename() expects paths to be the same except for the deepest key");
                  return;
                }
              }
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
          };
          var copyWithSetImpl = function(obj, path, index2, value) {
            if (index2 >= path.length) {
              return value;
            }
            var key = path[index2];
            var updated = isArray(obj) ? obj.slice() : assign({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value);
            return updated;
          };
          var copyWithSet = function(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
          };
          var findHook = function(fiber, id) {
            var currentHook2 = fiber.memoizedState;
            while (currentHook2 !== null && id > 0) {
              currentHook2 = currentHook2.next;
              id--;
            }
            return currentHook2;
          };
          overrideHookState = function(fiber, id, path, value) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithSet(hook.memoizedState, path, value);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateDeletePath = function(fiber, id, path) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithDelete(hook.memoizedState, path);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideProps = function(fiber, path, value) {
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsDeletePath = function(fiber, path) {
            fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsRenamePath = function(fiber, oldPath, newPath) {
            fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          scheduleUpdate = function(fiber) {
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          setErrorHandler = function(newShouldErrorImpl) {
            shouldErrorImpl = newShouldErrorImpl;
          };
          setSuspenseHandler = function(newShouldSuspendImpl) {
            shouldSuspendImpl = newShouldSuspendImpl;
          };
        }
        function findHostInstanceByFiber(fiber) {
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function emptyFindFiberByHostInstance(instance) {
          return null;
        }
        function getCurrentFiberForDevTools() {
          return current;
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
          return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState,
            overrideHookStateDeletePath,
            overrideHookStateRenamePath,
            overrideProps,
            overridePropsDeletePath,
            overridePropsRenamePath,
            setErrorHandler,
            setSuspenseHandler,
            scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher2,
            findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            findHostInstancesForRefresh,
            scheduleRefresh,
            scheduleRoot,
            setRefreshHandler,
            getCurrentFiber: getCurrentFiberForDevTools,
            reconcilerVersion: ReactVersion
          });
        }
        var defaultOnRecoverableError = typeof reportError === "function" ? reportError : function(error2) {
          console["error"](error2);
        };
        function ReactDOMRoot(internalRoot) {
          this._internalRoot = internalRoot;
        }
        ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
          var root3 = this._internalRoot;
          if (root3 === null) {
            throw new Error("Cannot update an unmounted root.");
          }
          {
            if (typeof arguments[1] === "function") {
              error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            } else if (isValidContainer(arguments[1])) {
              error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
            } else if (typeof arguments[1] !== "undefined") {
              error("You passed a second argument to root.render(...) but it only accepts one argument.");
            }
            var container = root3.containerInfo;
            if (container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(root3.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                }
              }
            }
          }
          updateContainer(children, root3, null, null);
        };
        ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
          {
            if (typeof arguments[0] === "function") {
              error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
          }
          var root3 = this._internalRoot;
          if (root3 !== null) {
            this._internalRoot = null;
            var container = root3.containerInfo;
            {
              if (isAlreadyRendering()) {
                error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
              }
            }
            flushSync(function() {
              updateContainer(null, root3, null, null);
            });
            unmarkContainerAsRoot(container);
          }
        };
        function createRoot2(container, options2) {
          if (!isValidContainer(container)) {
            throw new Error("createRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container);
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          var transitionCallbacks = null;
          if (options2 !== null && options2 !== void 0) {
            {
              if (options2.hydrate) {
                warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
              } else {
                if (typeof options2 === "object" && options2 !== null && options2.$$typeof === REACT_ELEMENT_TYPE) {
                  error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
                }
              }
            }
            if (options2.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options2.identifierPrefix !== void 0) {
              identifierPrefix = options2.identifierPrefix;
            }
            if (options2.onRecoverableError !== void 0) {
              onRecoverableError = options2.onRecoverableError;
            }
            if (options2.transitionCallbacks !== void 0) {
              transitionCallbacks = options2.transitionCallbacks;
            }
          }
          var root3 = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root3.current, container);
          var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
          listenToAllSupportedEvents(rootContainerElement);
          return new ReactDOMRoot(root3);
        }
        function ReactDOMHydrationRoot(internalRoot) {
          this._internalRoot = internalRoot;
        }
        function scheduleHydration(target) {
          if (target) {
            queueExplicitHydrationTarget(target);
          }
        }
        ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
        function hydrateRoot(container, initialChildren, options2) {
          if (!isValidContainer(container)) {
            throw new Error("hydrateRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container);
          {
            if (initialChildren === void 0) {
              error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
            }
          }
          var hydrationCallbacks = options2 != null ? options2 : null;
          var mutableSources = options2 != null && options2.hydratedSources || null;
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          if (options2 !== null && options2 !== void 0) {
            if (options2.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options2.identifierPrefix !== void 0) {
              identifierPrefix = options2.identifierPrefix;
            }
            if (options2.onRecoverableError !== void 0) {
              onRecoverableError = options2.onRecoverableError;
            }
          }
          var root3 = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root3.current, container);
          listenToAllSupportedEvents(container);
          if (mutableSources) {
            for (var i = 0; i < mutableSources.length; i++) {
              var mutableSource = mutableSources[i];
              registerMutableSourceForHydration(root3, mutableSource);
            }
          }
          return new ReactDOMHydrationRoot(root3);
        }
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
        }
        function isValidContainerLegacy(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
        }
        function warnIfReactDOMContainerInDEV(container) {
          {
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
            }
            if (isContainerMarkedAsRoot(container)) {
              if (container._reactRootContainer) {
                error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
              } else {
                error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
              }
            }
          }
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings;
        {
          topLevelUpdateWarnings = function(container) {
            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                }
              }
            }
            var isRootRenderedBySomeReact = !!container._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
            if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
              error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
            }
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
            }
          };
        }
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }
          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }
        function noopOnRecoverableError() {
        }
        function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
          if (isHydrationContainer) {
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(root3);
                originalCallback.call(instance);
              };
            }
            var root3 = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = root3;
            markContainerAsRoot(root3.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root3;
          } else {
            var rootSibling;
            while (rootSibling = container.lastChild) {
              container.removeChild(rootSibling);
            }
            if (typeof callback === "function") {
              var _originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(_root);
                _originalCallback.call(instance);
              };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement);
            flushSync(function() {
              updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
          }
        }
        function warnOnInvalidCallback$1(callback, callerName) {
          {
            if (callback !== null && typeof callback !== "function") {
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          }
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
          {
            topLevelUpdateWarnings(container);
            warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
          }
          var maybeRoot = container._reactRootContainer;
          var root3;
          if (!maybeRoot) {
            root3 = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
          } else {
            root3 = maybeRoot;
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(root3);
                originalCallback.call(instance);
              };
            }
            updateContainer(children, root3, parentComponent, callback);
          }
          return getPublicRootInstance(root3);
        }
        function findDOMNode(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null && owner.stateNode !== null) {
              var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
              if (!warnedAboutRefsInRender) {
                error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
              }
              owner.stateNode._warnedAboutRefsInRender = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE) {
            return componentOrElement;
          }
          {
            return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
          }
        }
        function hydrate(element, container, callback) {
          {
            error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
        }
        function render(element, container, callback) {
          {
            error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
        }
        function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          {
            error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(containerNode)) {
            throw new Error("Target container is not a DOM element.");
          }
          if (parentComponent == null || !has(parentComponent)) {
            throw new Error("parentComponent must be a valid React Component");
          }
          return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
        }
        function unmountComponentAtNode(container) {
          if (!isValidContainerLegacy(container)) {
            throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
            }
          }
          if (container._reactRootContainer) {
            {
              var rootEl = getReactRootElementInContainer(container);
              var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
              if (renderedByDifferentReact) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
              }
            }
            flushSync(function() {
              legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                container._reactRootContainer = null;
                unmarkContainerAsRoot(container);
              });
            });
            return true;
          } else {
            {
              var _rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
              var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
              if (hasNonRootReactChild) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
              }
            }
            return false;
          }
        }
        setAttemptSynchronousHydration(attemptSynchronousHydration$1);
        setAttemptContinuousHydration(attemptContinuousHydration$1);
        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
        setGetCurrentUpdatePriority(getCurrentUpdatePriority);
        setAttemptHydrationAtPriority(runWithPriority);
        {
          if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
            error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
        }
        setRestoreImplementation(restoreControlledState$3);
        setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
        function createPortal$1(children, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (!isValidContainer(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          return createPortal(children, container, null, key);
        }
        function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
        }
        var Internals = {
          usingClientEntryPoint: false,
          Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
        };
        function createRoot$1(container, options2) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return createRoot2(container, options2);
        }
        function hydrateRoot$1(container, initialChildren, options2) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return hydrateRoot(container, initialChildren, options2);
        }
        function flushSync$1(fn) {
          {
            if (isAlreadyRendering()) {
              error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            }
          }
          return flushSync(fn);
        }
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: "react-dom"
        });
        {
          if (!foundDevTools && canUseDOM && window.top === window.self) {
            if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
              }
            }
          }
        }
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
        exports.createPortal = createPortal$1;
        exports.createRoot = createRoot$1;
        exports.findDOMNode = findDOMNode;
        exports.flushSync = flushSync$1;
        exports.hydrate = hydrate;
        exports.hydrateRoot = hydrateRoot$1;
        exports.render = render;
        exports.unmountComponentAtNode = unmountComponentAtNode;
        exports.unstable_batchedUpdates = batchedUpdates$1;
        exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/react-dom/index.js"(exports, module2) {
    "use strict";
    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
        return;
      }
      if (true) {
        throw new Error("^_^");
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err2) {
        console.error(err2);
      }
    }
    if (false) {
      checkDCE();
      module2.exports = null;
    } else {
      module2.exports = require_react_dom_development();
    }
  }
});

// node_modules/react-dom/client.js
var require_client = __commonJS({
  "node_modules/react-dom/client.js"(exports) {
    "use strict";
    var m = require_react_dom();
    if (false) {
      exports.createRoot = m.createRoot;
      exports.hydrateRoot = m.hydrateRoot;
    } else {
      i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      exports.createRoot = function(c, o) {
        i.usingClientEntryPoint = true;
        try {
          return m.createRoot(c, o);
        } finally {
          i.usingClientEntryPoint = false;
        }
      };
      exports.hydrateRoot = function(c, h, o) {
        i.usingClientEntryPoint = true;
        try {
          return m.hydrateRoot(c, h, o);
        } finally {
          i.usingClientEntryPoint = false;
        }
      };
    }
    var i;
  }
});

// node_modules/@vite/vitejs/dist/index.web.js
var require_index_web = __commonJS({
  "node_modules/@vite/vitejs/dist/index.web.js"(exports, module2) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module2 ? module2.exports = e() : "function" == typeof define && define.amd ? define("$vite_vitejs", [], e) : "object" == typeof exports ? exports.$vite_vitejs = e() : t.$vite_vitejs = e();
    }(exports, function() {
      return (() => {
        var t = { 26981: (t2, e2, r2) => {
          "use strict";
          r2(11983);
          var n2, i = (n2 = r2(11543)) && n2.__esModule ? n2 : { default: n2 };
          i.default._babelPolyfill && "undefined" != typeof console && console.warn && console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."), i.default._babelPolyfill = true;
        }, 11983: (t2, e2, r2) => {
          "use strict";
          r2(15033), r2(88033), r2(72863), r2(56141), r2(74316), r2(117), r2(86863), r2(30290), r2(44007), r2(91235), r2(58930), r2(31794), r2(1523), r2(52928);
        }, 15033: (t2, e2, r2) => {
          r2(98997), r2(57944), r2(65388), r2(10266), r2(57557), r2(63386), r2(30081), r2(54943), r2(40192), r2(24371), r2(17026), r2(16736), r2(7260), r2(4649), r2(88325), r2(52798), r2(86911), r2(84394), r2(78769), r2(729), r2(99383), r2(19315), r2(15072), r2(10348), r2(71028), r2(2610), r2(64007), r2(87616), r2(86762), r2(43316), r2(93019), r2(40293), r2(60640), r2(96589), r2(93210), r2(12372), r2(30511), r2(6781), r2(74434), r2(14783), r2(95521), r2(94093), r2(86378), r2(52380), r2(2803), r2(63725), r2(7977), r2(14192), r2(2940), r2(35731), r2(79382), r2(38877), r2(22539), r2(39820), r2(28417), r2(74333), r2(82858), r2(22058), r2(95472), r2(57001), r2(57492), r2(50447), r2(65624), r2(51263), r2(65193), r2(28241), r2(96723), r2(9394), r2(66938), r2(11961), r2(69659), r2(23354), r2(99620), r2(638), r2(32338), r2(20641), r2(21575), r2(75611), r2(91033), r2(50160), r2(65271), r2(18221), r2(92523), r2(65441), r2(88375), r2(9106), r2(9139), r2(33352), r2(53289), r2(35943), r2(59483), r2(88292), r2(86174), r2(86975), r2(71412), r2(30360), r2(18394), r2(83118), r2(78772), r2(71308), r2(87080), r2(58615), r2(35244), r2(39544), r2(45475), r2(33770), r2(5201), r2(61385), r2(12813), r2(82509), r2(98253), r2(57391), r2(33307), r2(63315), r2(12920), r2(95443), r2(69815), r2(43771), r2(76935), r2(17846), r2(56403), r2(51200), r2(30951), r2(10029), r2(69310), r2(66722), r2(18372), r2(14604), r2(84781), r2(38416), r2(24395), r2(49649), r2(32475), r2(12924), r2(16337), r2(83286), r2(47225), r2(68766), t2.exports = r2(14411);
        }, 72863: (t2, e2, r2) => {
          r2(98125), t2.exports = r2(14411).Array.flatMap;
        }, 88033: (t2, e2, r2) => {
          r2(49348), t2.exports = r2(14411).Array.includes;
        }, 58930: (t2, e2, r2) => {
          r2(1768), t2.exports = r2(14411).Object.entries;
        }, 44007: (t2, e2, r2) => {
          r2(59223), t2.exports = r2(14411).Object.getOwnPropertyDescriptors;
        }, 91235: (t2, e2, r2) => {
          r2(67442), t2.exports = r2(14411).Object.values;
        }, 31794: (t2, e2, r2) => {
          "use strict";
          r2(12813), r2(14936), t2.exports = r2(14411).Promise.finally;
        }, 74316: (t2, e2, r2) => {
          r2(20239), t2.exports = r2(14411).String.padEnd;
        }, 56141: (t2, e2, r2) => {
          r2(28755), t2.exports = r2(14411).String.padStart;
        }, 86863: (t2, e2, r2) => {
          r2(66948), t2.exports = r2(14411).String.trimRight;
        }, 117: (t2, e2, r2) => {
          r2(53412), t2.exports = r2(14411).String.trimLeft;
        }, 30290: (t2, e2, r2) => {
          r2(78284), t2.exports = r2(38833).f("asyncIterator");
        }, 11543: (t2, e2, r2) => {
          r2(94296), t2.exports = r2(1275).global;
        }, 87411: (t2) => {
          t2.exports = function(t3) {
            if ("function" != typeof t3)
              throw TypeError(t3 + " is not a function!");
            return t3;
          };
        }, 23206: (t2, e2, r2) => {
          var n2 = r2(700);
          t2.exports = function(t3) {
            if (!n2(t3))
              throw TypeError(t3 + " is not an object!");
            return t3;
          };
        }, 1275: (t2) => {
          var e2 = t2.exports = { version: "2.6.11" };
          "number" == typeof __e && (__e = e2);
        }, 30999: (t2, e2, r2) => {
          var n2 = r2(87411);
          t2.exports = function(t3, e3, r3) {
            if (n2(t3), void 0 === e3)
              return t3;
            switch (r3) {
              case 1:
                return function(r4) {
                  return t3.call(e3, r4);
                };
              case 2:
                return function(r4, n3) {
                  return t3.call(e3, r4, n3);
                };
              case 3:
                return function(r4, n3, i) {
                  return t3.call(e3, r4, n3, i);
                };
            }
            return function() {
              return t3.apply(e3, arguments);
            };
          };
        }, 50697: (t2, e2, r2) => {
          t2.exports = !r2(13834)(function() {
            return 7 != Object.defineProperty({}, "a", { get: function() {
              return 7;
            } }).a;
          });
        }, 42394: (t2, e2, r2) => {
          var n2 = r2(700), i = r2(71075).document, o = n2(i) && n2(i.createElement);
          t2.exports = function(t3) {
            return o ? i.createElement(t3) : {};
          };
        }, 44553: (t2, e2, r2) => {
          var n2 = r2(71075), i = r2(1275), o = r2(30999), s = r2(2550), a = r2(94324), h = function(t3, e3, r3) {
            var f, u, c, d = t3 & h.F, l = t3 & h.G, p = t3 & h.S, g = t3 & h.P, y = t3 & h.B, m = t3 & h.W, v = l ? i : i[e3] || (i[e3] = {}), b = v.prototype, w = l ? n2 : p ? n2[e3] : (n2[e3] || {}).prototype;
            for (f in l && (r3 = e3), r3)
              (u = !d && w && void 0 !== w[f]) && a(v, f) || (c = u ? w[f] : r3[f], v[f] = l && "function" != typeof w[f] ? r3[f] : y && u ? o(c, n2) : m && w[f] == c ? function(t4) {
                var e4 = function(e5, r4, n3) {
                  if (this instanceof t4) {
                    switch (arguments.length) {
                      case 0:
                        return new t4();
                      case 1:
                        return new t4(e5);
                      case 2:
                        return new t4(e5, r4);
                    }
                    return new t4(e5, r4, n3);
                  }
                  return t4.apply(this, arguments);
                };
                return e4.prototype = t4.prototype, e4;
              }(c) : g && "function" == typeof c ? o(Function.call, c) : c, g && ((v.virtual || (v.virtual = {}))[f] = c, t3 & h.R && b && !b[f] && s(b, f, c)));
          };
          h.F = 1, h.G = 2, h.S = 4, h.P = 8, h.B = 16, h.W = 32, h.U = 64, h.R = 128, t2.exports = h;
        }, 13834: (t2) => {
          t2.exports = function(t3) {
            try {
              return !!t3();
            } catch (t4) {
              return true;
            }
          };
        }, 71075: (t2) => {
          var e2 = t2.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
          "number" == typeof __g && (__g = e2);
        }, 94324: (t2) => {
          var e2 = {}.hasOwnProperty;
          t2.exports = function(t3, r2) {
            return e2.call(t3, r2);
          };
        }, 2550: (t2, e2, r2) => {
          var n2 = r2(249), i = r2(43652);
          t2.exports = r2(50697) ? function(t3, e3, r3) {
            return n2.f(t3, e3, i(1, r3));
          } : function(t3, e3, r3) {
            return t3[e3] = r3, t3;
          };
        }, 43393: (t2, e2, r2) => {
          t2.exports = !r2(50697) && !r2(13834)(function() {
            return 7 != Object.defineProperty(r2(42394)("div"), "a", { get: function() {
              return 7;
            } }).a;
          });
        }, 700: (t2) => {
          t2.exports = function(t3) {
            return "object" == typeof t3 ? null !== t3 : "function" == typeof t3;
          };
        }, 249: (t2, e2, r2) => {
          var n2 = r2(23206), i = r2(43393), o = r2(3377), s = Object.defineProperty;
          e2.f = r2(50697) ? Object.defineProperty : function(t3, e3, r3) {
            if (n2(t3), e3 = o(e3, true), n2(r3), i)
              try {
                return s(t3, e3, r3);
              } catch (t4) {
              }
            if ("get" in r3 || "set" in r3)
              throw TypeError("Accessors not supported!");
            return "value" in r3 && (t3[e3] = r3.value), t3;
          };
        }, 43652: (t2) => {
          t2.exports = function(t3, e2) {
            return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
          };
        }, 3377: (t2, e2, r2) => {
          var n2 = r2(700);
          t2.exports = function(t3, e3) {
            if (!n2(t3))
              return t3;
            var r3, i;
            if (e3 && "function" == typeof (r3 = t3.toString) && !n2(i = r3.call(t3)))
              return i;
            if ("function" == typeof (r3 = t3.valueOf) && !n2(i = r3.call(t3)))
              return i;
            if (!e3 && "function" == typeof (r3 = t3.toString) && !n2(i = r3.call(t3)))
              return i;
            throw TypeError("Can't convert object to primitive value");
          };
        }, 94296: (t2, e2, r2) => {
          var n2 = r2(44553);
          n2(n2.G, { global: r2(71075) });
        }, 23079: (t2) => {
          t2.exports = function(t3) {
            if ("function" != typeof t3)
              throw TypeError(t3 + " is not a function!");
            return t3;
          };
        }, 23373: (t2, e2, r2) => {
          var n2 = r2(89426);
          t2.exports = function(t3, e3) {
            if ("number" != typeof t3 && "Number" != n2(t3))
              throw TypeError(e3);
            return +t3;
          };
        }, 12802: (t2, e2, r2) => {
          var n2 = r2(9739)("unscopables"), i = Array.prototype;
          null == i[n2] && r2(98442)(i, n2, {}), t2.exports = function(t3) {
            i[n2][t3] = true;
          };
        }, 9959: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(7384)(true);
          t2.exports = function(t3, e3, r3) {
            return e3 + (r3 ? n2(t3, e3).length : 1);
          };
        }, 30599: (t2) => {
          t2.exports = function(t3, e2, r2, n2) {
            if (!(t3 instanceof e2) || void 0 !== n2 && n2 in t3)
              throw TypeError(r2 + ": incorrect invocation!");
            return t3;
          };
        }, 59719: (t2, e2, r2) => {
          var n2 = r2(17481);
          t2.exports = function(t3) {
            if (!n2(t3))
              throw TypeError(t3 + " is not an object!");
            return t3;
          };
        }, 4893: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(54200), i = r2(15044), o = r2(61838);
          t2.exports = [].copyWithin || function(t3, e3) {
            var r3 = n2(this), s = o(r3.length), a = i(t3, s), h = i(e3, s), f = arguments.length > 2 ? arguments[2] : void 0, u = Math.min((void 0 === f ? s : i(f, s)) - h, s - a), c = 1;
            for (h < a && a < h + u && (c = -1, h += u - 1, a += u - 1); u-- > 0; )
              h in r3 ? r3[a] = r3[h] : delete r3[a], a += c, h += c;
            return r3;
          };
        }, 70852: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(54200), i = r2(15044), o = r2(61838);
          t2.exports = function(t3) {
            for (var e3 = n2(this), r3 = o(e3.length), s = arguments.length, a = i(s > 1 ? arguments[1] : void 0, r3), h = s > 2 ? arguments[2] : void 0, f = void 0 === h ? r3 : i(h, r3); f > a; )
              e3[a++] = t3;
            return e3;
          };
        }, 61545: (t2, e2, r2) => {
          var n2 = r2(8500), i = r2(61838), o = r2(15044);
          t2.exports = function(t3) {
            return function(e3, r3, s) {
              var a, h = n2(e3), f = i(h.length), u = o(s, f);
              if (t3 && r3 != r3) {
                for (; f > u; )
                  if ((a = h[u++]) != a)
                    return true;
              } else
                for (; f > u; u++)
                  if ((t3 || u in h) && h[u] === r3)
                    return t3 || u || 0;
              return !t3 && -1;
            };
          };
        }, 66934: (t2, e2, r2) => {
          var n2 = r2(82794), i = r2(60975), o = r2(54200), s = r2(61838), a = r2(44087);
          t2.exports = function(t3, e3) {
            var r3 = 1 == t3, h = 2 == t3, f = 3 == t3, u = 4 == t3, c = 6 == t3, d = 5 == t3 || c, l = e3 || a;
            return function(e4, a2, p) {
              for (var g, y, m = o(e4), v = i(m), b = n2(a2, p, 3), w = s(v.length), _ = 0, k = r3 ? l(e4, w) : h ? l(e4, 0) : void 0; w > _; _++)
                if ((d || _ in v) && (y = b(g = v[_], _, m), t3)) {
                  if (r3)
                    k[_] = y;
                  else if (y)
                    switch (t3) {
                      case 3:
                        return true;
                      case 5:
                        return g;
                      case 6:
                        return _;
                      case 2:
                        k.push(g);
                    }
                  else if (u)
                    return false;
                }
              return c ? -1 : f || u ? u : k;
            };
          };
        }, 9857: (t2, e2, r2) => {
          var n2 = r2(23079), i = r2(54200), o = r2(60975), s = r2(61838);
          t2.exports = function(t3, e3, r3, a, h) {
            n2(e3);
            var f = i(t3), u = o(f), c = s(f.length), d = h ? c - 1 : 0, l = h ? -1 : 1;
            if (r3 < 2)
              for (; ; ) {
                if (d in u) {
                  a = u[d], d += l;
                  break;
                }
                if (d += l, h ? d < 0 : c <= d)
                  throw TypeError("Reduce of empty array with no initial value");
              }
            for (; h ? d >= 0 : c > d; d += l)
              d in u && (a = e3(a, u[d], d, f));
            return a;
          };
        }, 54849: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(40689), o = r2(9739)("species");
          t2.exports = function(t3) {
            var e3;
            return i(t3) && ("function" != typeof (e3 = t3.constructor) || e3 !== Array && !i(e3.prototype) || (e3 = void 0), n2(e3) && null === (e3 = e3[o]) && (e3 = void 0)), void 0 === e3 ? Array : e3;
          };
        }, 44087: (t2, e2, r2) => {
          var n2 = r2(54849);
          t2.exports = function(t3, e3) {
            return new (n2(t3))(e3);
          };
        }, 46966: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(23079), i = r2(17481), o = r2(16137), s = [].slice, a = {}, h = function(t3, e3, r3) {
            if (!(e3 in a)) {
              for (var n3 = [], i2 = 0; i2 < e3; i2++)
                n3[i2] = "a[" + i2 + "]";
              a[e3] = Function("F,a", "return new F(" + n3.join(",") + ")");
            }
            return a[e3](t3, r3);
          };
          t2.exports = Function.bind || function(t3) {
            var e3 = n2(this), r3 = s.call(arguments, 1), a2 = function() {
              var n3 = r3.concat(s.call(arguments));
              return this instanceof a2 ? h(e3, n3.length, n3) : o(e3, n3, t3);
            };
            return i(e3.prototype) && (a2.prototype = e3.prototype), a2;
          };
        }, 12845: (t2, e2, r2) => {
          var n2 = r2(89426), i = r2(9739)("toStringTag"), o = "Arguments" == n2(function() {
            return arguments;
          }());
          t2.exports = function(t3) {
            var e3, r3, s;
            return void 0 === t3 ? "Undefined" : null === t3 ? "Null" : "string" == typeof (r3 = function(t4, e4) {
              try {
                return t4[e4];
              } catch (t5) {
              }
            }(e3 = Object(t3), i)) ? r3 : o ? n2(e3) : "Object" == (s = n2(e3)) && "function" == typeof e3.callee ? "Arguments" : s;
          };
        }, 89426: (t2) => {
          var e2 = {}.toString;
          t2.exports = function(t3) {
            return e2.call(t3).slice(8, -1);
          };
        }, 95144: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(83530).f, i = r2(62545), o = r2(24092), s = r2(82794), a = r2(30599), h = r2(62971), f = r2(19121), u = r2(78611), c = r2(75993), d = r2(51916), l = r2(82153).fastKey, p = r2(91603), g = d ? "_s" : "size", y = function(t3, e3) {
            var r3, n3 = l(e3);
            if ("F" !== n3)
              return t3._i[n3];
            for (r3 = t3._f; r3; r3 = r3.n)
              if (r3.k == e3)
                return r3;
          };
          t2.exports = { getConstructor: function(t3, e3, r3, f2) {
            var u2 = t3(function(t4, n3) {
              a(t4, u2, e3, "_i"), t4._t = e3, t4._i = i(null), t4._f = void 0, t4._l = void 0, t4[g] = 0, null != n3 && h(n3, r3, t4[f2], t4);
            });
            return o(u2.prototype, { clear: function() {
              for (var t4 = p(this, e3), r4 = t4._i, n3 = t4._f; n3; n3 = n3.n)
                n3.r = true, n3.p && (n3.p = n3.p.n = void 0), delete r4[n3.i];
              t4._f = t4._l = void 0, t4[g] = 0;
            }, delete: function(t4) {
              var r4 = p(this, e3), n3 = y(r4, t4);
              if (n3) {
                var i2 = n3.n, o2 = n3.p;
                delete r4._i[n3.i], n3.r = true, o2 && (o2.n = i2), i2 && (i2.p = o2), r4._f == n3 && (r4._f = i2), r4._l == n3 && (r4._l = o2), r4[g]--;
              }
              return !!n3;
            }, forEach: function(t4) {
              p(this, e3);
              for (var r4, n3 = s(t4, arguments.length > 1 ? arguments[1] : void 0, 3); r4 = r4 ? r4.n : this._f; )
                for (n3(r4.v, r4.k, this); r4 && r4.r; )
                  r4 = r4.p;
            }, has: function(t4) {
              return !!y(p(this, e3), t4);
            } }), d && n2(u2.prototype, "size", { get: function() {
              return p(this, e3)[g];
            } }), u2;
          }, def: function(t3, e3, r3) {
            var n3, i2, o2 = y(t3, e3);
            return o2 ? o2.v = r3 : (t3._l = o2 = { i: i2 = l(e3, true), k: e3, v: r3, p: n3 = t3._l, n: void 0, r: false }, t3._f || (t3._f = o2), n3 && (n3.n = o2), t3[g]++, "F" !== i2 && (t3._i[i2] = o2)), t3;
          }, getEntry: y, setStrong: function(t3, e3, r3) {
            f(t3, e3, function(t4, r4) {
              this._t = p(t4, e3), this._k = r4, this._l = void 0;
            }, function() {
              for (var t4 = this, e4 = t4._k, r4 = t4._l; r4 && r4.r; )
                r4 = r4.p;
              return t4._t && (t4._l = r4 = r4 ? r4.n : t4._t._f) ? u(0, "keys" == e4 ? r4.k : "values" == e4 ? r4.v : [r4.k, r4.v]) : (t4._t = void 0, u(1));
            }, r3 ? "entries" : "values", !r3, true), c(e3);
          } };
        }, 33503: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(24092), i = r2(82153).getWeak, o = r2(59719), s = r2(17481), a = r2(30599), h = r2(62971), f = r2(66934), u = r2(41063), c = r2(91603), d = f(5), l = f(6), p = 0, g = function(t3) {
            return t3._l || (t3._l = new y());
          }, y = function() {
            this.a = [];
          }, m = function(t3, e3) {
            return d(t3.a, function(t4) {
              return t4[0] === e3;
            });
          };
          y.prototype = { get: function(t3) {
            var e3 = m(this, t3);
            if (e3)
              return e3[1];
          }, has: function(t3) {
            return !!m(this, t3);
          }, set: function(t3, e3) {
            var r3 = m(this, t3);
            r3 ? r3[1] = e3 : this.a.push([t3, e3]);
          }, delete: function(t3) {
            var e3 = l(this.a, function(e4) {
              return e4[0] === t3;
            });
            return ~e3 && this.a.splice(e3, 1), !!~e3;
          } }, t2.exports = { getConstructor: function(t3, e3, r3, o2) {
            var f2 = t3(function(t4, n3) {
              a(t4, f2, e3, "_i"), t4._t = e3, t4._i = p++, t4._l = void 0, null != n3 && h(n3, r3, t4[o2], t4);
            });
            return n2(f2.prototype, { delete: function(t4) {
              if (!s(t4))
                return false;
              var r4 = i(t4);
              return true === r4 ? g(c(this, e3)).delete(t4) : r4 && u(r4, this._i) && delete r4[this._i];
            }, has: function(t4) {
              if (!s(t4))
                return false;
              var r4 = i(t4);
              return true === r4 ? g(c(this, e3)).has(t4) : r4 && u(r4, this._i);
            } }), f2;
          }, def: function(t3, e3, r3) {
            var n3 = i(o(e3), true);
            return true === n3 ? g(t3).set(e3, r3) : n3[t3._i] = r3, t3;
          }, ufstore: g };
        }, 58091: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(56341), i = r2(35366), o = r2(1564), s = r2(24092), a = r2(82153), h = r2(62971), f = r2(30599), u = r2(17481), c = r2(71240), d = r2(61461), l = r2(21309), p = r2(94805);
          t2.exports = function(t3, e3, r3, g, y, m) {
            var v = n2[t3], b = v, w = y ? "set" : "add", _ = b && b.prototype, k = {}, S = function(t4) {
              var e4 = _[t4];
              o(_, t4, "delete" == t4 || "has" == t4 ? function(t5) {
                return !(m && !u(t5)) && e4.call(this, 0 === t5 ? 0 : t5);
              } : "get" == t4 ? function(t5) {
                return m && !u(t5) ? void 0 : e4.call(this, 0 === t5 ? 0 : t5);
              } : "add" == t4 ? function(t5) {
                return e4.call(this, 0 === t5 ? 0 : t5), this;
              } : function(t5, r4) {
                return e4.call(this, 0 === t5 ? 0 : t5, r4), this;
              });
            };
            if ("function" == typeof b && (m || _.forEach && !c(function() {
              new b().entries().next();
            }))) {
              var A = new b(), x = A[w](m ? {} : -0, 1) != A, M = c(function() {
                A.has(1);
              }), E = d(function(t4) {
                new b(t4);
              }), B = !m && c(function() {
                for (var t4 = new b(), e4 = 5; e4--; )
                  t4[w](e4, e4);
                return !t4.has(-0);
              });
              E || ((b = e3(function(e4, r4) {
                f(e4, b, t3);
                var n3 = p(new v(), e4, b);
                return null != r4 && h(r4, y, n3[w], n3), n3;
              })).prototype = _, _.constructor = b), (M || B) && (S("delete"), S("has"), y && S("get")), (B || x) && S(w), m && _.clear && delete _.clear;
            } else
              b = g.getConstructor(e3, t3, y, w), s(b.prototype, r3), a.NEED = true;
            return l(b, t3), k[t3] = b, i(i.G + i.W + i.F * (b != v), k), m || g.setStrong(b, t3, y), b;
          };
        }, 14411: (t2) => {
          var e2 = t2.exports = { version: "2.6.11" };
          "number" == typeof __e && (__e = e2);
        }, 51676: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(83530), i = r2(21761);
          t2.exports = function(t3, e3, r3) {
            e3 in t3 ? n2.f(t3, e3, i(0, r3)) : t3[e3] = r3;
          };
        }, 82794: (t2, e2, r2) => {
          var n2 = r2(23079);
          t2.exports = function(t3, e3, r3) {
            if (n2(t3), void 0 === e3)
              return t3;
            switch (r3) {
              case 1:
                return function(r4) {
                  return t3.call(e3, r4);
                };
              case 2:
                return function(r4, n3) {
                  return t3.call(e3, r4, n3);
                };
              case 3:
                return function(r4, n3, i) {
                  return t3.call(e3, r4, n3, i);
                };
            }
            return function() {
              return t3.apply(e3, arguments);
            };
          };
        }, 41792: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(71240), i = Date.prototype.getTime, o = Date.prototype.toISOString, s = function(t3) {
            return t3 > 9 ? t3 : "0" + t3;
          };
          t2.exports = n2(function() {
            return "0385-07-25T07:06:39.999Z" != o.call(new Date(-50000000000001));
          }) || !n2(function() {
            o.call(new Date(NaN));
          }) ? function() {
            if (!isFinite(i.call(this)))
              throw RangeError("Invalid time value");
            var t3 = this, e3 = t3.getUTCFullYear(), r3 = t3.getUTCMilliseconds(), n3 = e3 < 0 ? "-" : e3 > 9999 ? "+" : "";
            return n3 + ("00000" + Math.abs(e3)).slice(n3 ? -6 : -4) + "-" + s(t3.getUTCMonth() + 1) + "-" + s(t3.getUTCDate()) + "T" + s(t3.getUTCHours()) + ":" + s(t3.getUTCMinutes()) + ":" + s(t3.getUTCSeconds()) + "." + (r3 > 99 ? r3 : "0" + s(r3)) + "Z";
          } : o;
        }, 27687: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(59719), i = r2(9241), o = "number";
          t2.exports = function(t3) {
            if ("string" !== t3 && t3 !== o && "default" !== t3)
              throw TypeError("Incorrect hint");
            return i(n2(this), t3 != o);
          };
        }, 13589: (t2) => {
          t2.exports = function(t3) {
            if (null == t3)
              throw TypeError("Can't call method on  " + t3);
            return t3;
          };
        }, 51916: (t2, e2, r2) => {
          t2.exports = !r2(71240)(function() {
            return 7 != Object.defineProperty({}, "a", { get: function() {
              return 7;
            } }).a;
          });
        }, 83383: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(56341).document, o = n2(i) && n2(i.createElement);
          t2.exports = function(t3) {
            return o ? i.createElement(t3) : {};
          };
        }, 97590: (t2) => {
          t2.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
        }, 4535: (t2, e2, r2) => {
          var n2 = r2(15825), i = r2(32520), o = r2(41144);
          t2.exports = function(t3) {
            var e3 = n2(t3), r3 = i.f;
            if (r3)
              for (var s, a = r3(t3), h = o.f, f = 0; a.length > f; )
                h.call(t3, s = a[f++]) && e3.push(s);
            return e3;
          };
        }, 35366: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(14411), o = r2(98442), s = r2(1564), a = r2(82794), h = function(t3, e3, r3) {
            var f, u, c, d, l = t3 & h.F, p = t3 & h.G, g = t3 & h.S, y = t3 & h.P, m = t3 & h.B, v = p ? n2 : g ? n2[e3] || (n2[e3] = {}) : (n2[e3] || {}).prototype, b = p ? i : i[e3] || (i[e3] = {}), w = b.prototype || (b.prototype = {});
            for (f in p && (r3 = e3), r3)
              c = ((u = !l && v && void 0 !== v[f]) ? v : r3)[f], d = m && u ? a(c, n2) : y && "function" == typeof c ? a(Function.call, c) : c, v && s(v, f, c, t3 & h.U), b[f] != c && o(b, f, d), y && w[f] != c && (w[f] = c);
          };
          n2.core = i, h.F = 1, h.G = 2, h.S = 4, h.P = 8, h.B = 16, h.W = 32, h.U = 64, h.R = 128, t2.exports = h;
        }, 46881: (t2, e2, r2) => {
          var n2 = r2(9739)("match");
          t2.exports = function(t3) {
            var e3 = /./;
            try {
              "/./"[t3](e3);
            } catch (r3) {
              try {
                return e3[n2] = false, !"/./"[t3](e3);
              } catch (t4) {
              }
            }
            return true;
          };
        }, 71240: (t2) => {
          t2.exports = function(t3) {
            try {
              return !!t3();
            } catch (t4) {
              return true;
            }
          };
        }, 25307: (t2, e2, r2) => {
          "use strict";
          r2(58615);
          var n2 = r2(1564), i = r2(98442), o = r2(71240), s = r2(13589), a = r2(9739), h = r2(18868), f = a("species"), u = !o(function() {
            var t3 = /./;
            return t3.exec = function() {
              var t4 = [];
              return t4.groups = { a: "7" }, t4;
            }, "7" !== "".replace(t3, "$<a>");
          }), c = function() {
            var t3 = /(?:)/, e3 = t3.exec;
            t3.exec = function() {
              return e3.apply(this, arguments);
            };
            var r3 = "ab".split(t3);
            return 2 === r3.length && "a" === r3[0] && "b" === r3[1];
          }();
          t2.exports = function(t3, e3, r3) {
            var d = a(t3), l = !o(function() {
              var e4 = {};
              return e4[d] = function() {
                return 7;
              }, 7 != ""[t3](e4);
            }), p = l ? !o(function() {
              var e4 = false, r4 = /a/;
              return r4.exec = function() {
                return e4 = true, null;
              }, "split" === t3 && (r4.constructor = {}, r4.constructor[f] = function() {
                return r4;
              }), r4[d](""), !e4;
            }) : void 0;
            if (!l || !p || "replace" === t3 && !u || "split" === t3 && !c) {
              var g = /./[d], y = r3(s, d, ""[t3], function(t4, e4, r4, n3, i2) {
                return e4.exec === h ? l && !i2 ? { done: true, value: g.call(e4, r4, n3) } : { done: true, value: t4.call(r4, e4, n3) } : { done: false };
              }), m = y[0], v = y[1];
              n2(String.prototype, t3, m), i(RegExp.prototype, d, 2 == e3 ? function(t4, e4) {
                return v.call(t4, this, e4);
              } : function(t4) {
                return v.call(t4, this);
              });
            }
          };
        }, 6439: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(59719);
          t2.exports = function() {
            var t3 = n2(this), e3 = "";
            return t3.global && (e3 += "g"), t3.ignoreCase && (e3 += "i"), t3.multiline && (e3 += "m"), t3.unicode && (e3 += "u"), t3.sticky && (e3 += "y"), e3;
          };
        }, 3885: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(40689), i = r2(17481), o = r2(61838), s = r2(82794), a = r2(9739)("isConcatSpreadable");
          t2.exports = function t3(e3, r3, h, f, u, c, d, l) {
            for (var p, g, y = u, m = 0, v = !!d && s(d, l, 3); m < f; ) {
              if (m in h) {
                if (p = v ? v(h[m], m, r3) : h[m], g = false, i(p) && (g = void 0 !== (g = p[a]) ? !!g : n2(p)), g && c > 0)
                  y = t3(e3, r3, p, o(p.length), y, c - 1) - 1;
                else {
                  if (y >= 9007199254740991)
                    throw TypeError();
                  e3[y] = p;
                }
                y++;
              }
              m++;
            }
            return y;
          };
        }, 62971: (t2, e2, r2) => {
          var n2 = r2(82794), i = r2(55539), o = r2(63894), s = r2(59719), a = r2(61838), h = r2(18444), f = {}, u = {}, c = t2.exports = function(t3, e3, r3, c2, d) {
            var l, p, g, y, m = d ? function() {
              return t3;
            } : h(t3), v = n2(r3, c2, e3 ? 2 : 1), b = 0;
            if ("function" != typeof m)
              throw TypeError(t3 + " is not iterable!");
            if (o(m)) {
              for (l = a(t3.length); l > b; b++)
                if ((y = e3 ? v(s(p = t3[b])[0], p[1]) : v(t3[b])) === f || y === u)
                  return y;
            } else
              for (g = m.call(t3); !(p = g.next()).done; )
                if ((y = i(g, v, p.value, e3)) === f || y === u)
                  return y;
          };
          c.BREAK = f, c.RETURN = u;
        }, 65979: (t2, e2, r2) => {
          t2.exports = r2(97355)("native-function-to-string", Function.toString);
        }, 56341: (t2) => {
          var e2 = t2.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
          "number" == typeof __g && (__g = e2);
        }, 41063: (t2) => {
          var e2 = {}.hasOwnProperty;
          t2.exports = function(t3, r2) {
            return e2.call(t3, r2);
          };
        }, 98442: (t2, e2, r2) => {
          var n2 = r2(83530), i = r2(21761);
          t2.exports = r2(51916) ? function(t3, e3, r3) {
            return n2.f(t3, e3, i(1, r3));
          } : function(t3, e3, r3) {
            return t3[e3] = r3, t3;
          };
        }, 26137: (t2, e2, r2) => {
          var n2 = r2(56341).document;
          t2.exports = n2 && n2.documentElement;
        }, 44352: (t2, e2, r2) => {
          t2.exports = !r2(51916) && !r2(71240)(function() {
            return 7 != Object.defineProperty(r2(83383)("div"), "a", { get: function() {
              return 7;
            } }).a;
          });
        }, 94805: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(87135).set;
          t2.exports = function(t3, e3, r3) {
            var o, s = e3.constructor;
            return s !== r3 && "function" == typeof s && (o = s.prototype) !== r3.prototype && n2(o) && i && i(t3, o), t3;
          };
        }, 16137: (t2) => {
          t2.exports = function(t3, e2, r2) {
            var n2 = void 0 === r2;
            switch (e2.length) {
              case 0:
                return n2 ? t3() : t3.call(r2);
              case 1:
                return n2 ? t3(e2[0]) : t3.call(r2, e2[0]);
              case 2:
                return n2 ? t3(e2[0], e2[1]) : t3.call(r2, e2[0], e2[1]);
              case 3:
                return n2 ? t3(e2[0], e2[1], e2[2]) : t3.call(r2, e2[0], e2[1], e2[2]);
              case 4:
                return n2 ? t3(e2[0], e2[1], e2[2], e2[3]) : t3.call(r2, e2[0], e2[1], e2[2], e2[3]);
            }
            return t3.apply(r2, e2);
          };
        }, 60975: (t2, e2, r2) => {
          var n2 = r2(89426);
          t2.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t3) {
            return "String" == n2(t3) ? t3.split("") : Object(t3);
          };
        }, 63894: (t2, e2, r2) => {
          var n2 = r2(4919), i = r2(9739)("iterator"), o = Array.prototype;
          t2.exports = function(t3) {
            return void 0 !== t3 && (n2.Array === t3 || o[i] === t3);
          };
        }, 40689: (t2, e2, r2) => {
          var n2 = r2(89426);
          t2.exports = Array.isArray || function(t3) {
            return "Array" == n2(t3);
          };
        }, 22289: (t2, e2, r2) => {
          var n2 = r2(17481), i = Math.floor;
          t2.exports = function(t3) {
            return !n2(t3) && isFinite(t3) && i(t3) === t3;
          };
        }, 17481: (t2) => {
          t2.exports = function(t3) {
            return "object" == typeof t3 ? null !== t3 : "function" == typeof t3;
          };
        }, 89543: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(89426), o = r2(9739)("match");
          t2.exports = function(t3) {
            var e3;
            return n2(t3) && (void 0 !== (e3 = t3[o]) ? !!e3 : "RegExp" == i(t3));
          };
        }, 55539: (t2, e2, r2) => {
          var n2 = r2(59719);
          t2.exports = function(t3, e3, r3, i) {
            try {
              return i ? e3(n2(r3)[0], r3[1]) : e3(r3);
            } catch (e4) {
              var o = t3.return;
              throw void 0 !== o && n2(o.call(t3)), e4;
            }
          };
        }, 47938: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(62545), i = r2(21761), o = r2(21309), s = {};
          r2(98442)(s, r2(9739)("iterator"), function() {
            return this;
          }), t2.exports = function(t3, e3, r3) {
            t3.prototype = n2(s, { next: i(1, r3) }), o(t3, e3 + " Iterator");
          };
        }, 19121: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35113), i = r2(35366), o = r2(1564), s = r2(98442), a = r2(4919), h = r2(47938), f = r2(21309), u = r2(44408), c = r2(9739)("iterator"), d = !([].keys && "next" in [].keys()), l = "keys", p = "values", g = function() {
            return this;
          };
          t2.exports = function(t3, e3, r3, y, m, v, b) {
            h(r3, e3, y);
            var w, _, k, S = function(t4) {
              if (!d && t4 in E)
                return E[t4];
              switch (t4) {
                case l:
                case p:
                  return function() {
                    return new r3(this, t4);
                  };
              }
              return function() {
                return new r3(this, t4);
              };
            }, A = e3 + " Iterator", x = m == p, M = false, E = t3.prototype, B = E[c] || E["@@iterator"] || m && E[m], I = B || S(m), P = m ? x ? S("entries") : I : void 0, T = "Array" == e3 && E.entries || B;
            if (T && (k = u(T.call(new t3()))) !== Object.prototype && k.next && (f(k, A, true), n2 || "function" == typeof k[c] || s(k, c, g)), x && B && B.name !== p && (M = true, I = function() {
              return B.call(this);
            }), n2 && !b || !d && !M && E[c] || s(E, c, I), a[e3] = I, a[A] = g, m)
              if (w = { values: x ? I : S(p), keys: v ? I : S(l), entries: P }, b)
                for (_ in w)
                  _ in E || o(E, _, w[_]);
              else
                i(i.P + i.F * (d || M), e3, w);
            return w;
          };
        }, 61461: (t2, e2, r2) => {
          var n2 = r2(9739)("iterator"), i = false;
          try {
            var o = [7][n2]();
            o.return = function() {
              i = true;
            }, Array.from(o, function() {
              throw 2;
            });
          } catch (t3) {
          }
          t2.exports = function(t3, e3) {
            if (!e3 && !i)
              return false;
            var r3 = false;
            try {
              var o2 = [7], s = o2[n2]();
              s.next = function() {
                return { done: r3 = true };
              }, o2[n2] = function() {
                return s;
              }, t3(o2);
            } catch (t4) {
            }
            return r3;
          };
        }, 78611: (t2) => {
          t2.exports = function(t3, e2) {
            return { value: e2, done: !!t3 };
          };
        }, 4919: (t2) => {
          t2.exports = {};
        }, 35113: (t2) => {
          t2.exports = false;
        }, 77117: (t2) => {
          var e2 = Math.expm1;
          t2.exports = !e2 || e2(10) > 22025.465794806718 || e2(10) < 22025.465794806718 || -2e-17 != e2(-2e-17) ? function(t3) {
            return 0 == (t3 = +t3) ? t3 : t3 > -1e-6 && t3 < 1e-6 ? t3 + t3 * t3 / 2 : Math.exp(t3) - 1;
          } : e2;
        }, 59396: (t2, e2, r2) => {
          var n2 = r2(84247), i = Math.pow, o = i(2, -52), s = i(2, -23), a = i(2, 127) * (2 - s), h = i(2, -126);
          t2.exports = Math.fround || function(t3) {
            var e3, r3, i2 = Math.abs(t3), f = n2(t3);
            return i2 < h ? f * (i2 / h / s + 1 / o - 1 / o) * h * s : (r3 = (e3 = (1 + s / o) * i2) - (e3 - i2)) > a || r3 != r3 ? f * (1 / 0) : f * r3;
          };
        }, 19007: (t2) => {
          t2.exports = Math.log1p || function(t3) {
            return (t3 = +t3) > -1e-8 && t3 < 1e-8 ? t3 - t3 * t3 / 2 : Math.log(1 + t3);
          };
        }, 84247: (t2) => {
          t2.exports = Math.sign || function(t3) {
            return 0 == (t3 = +t3) || t3 != t3 ? t3 : t3 < 0 ? -1 : 1;
          };
        }, 82153: (t2, e2, r2) => {
          var n2 = r2(90430)("meta"), i = r2(17481), o = r2(41063), s = r2(83530).f, a = 0, h = Object.isExtensible || function() {
            return true;
          }, f = !r2(71240)(function() {
            return h(Object.preventExtensions({}));
          }), u = function(t3) {
            s(t3, n2, { value: { i: "O" + ++a, w: {} } });
          }, c = t2.exports = { KEY: n2, NEED: false, fastKey: function(t3, e3) {
            if (!i(t3))
              return "symbol" == typeof t3 ? t3 : ("string" == typeof t3 ? "S" : "P") + t3;
            if (!o(t3, n2)) {
              if (!h(t3))
                return "F";
              if (!e3)
                return "E";
              u(t3);
            }
            return t3[n2].i;
          }, getWeak: function(t3, e3) {
            if (!o(t3, n2)) {
              if (!h(t3))
                return true;
              if (!e3)
                return false;
              u(t3);
            }
            return t3[n2].w;
          }, onFreeze: function(t3) {
            return f && c.NEED && h(t3) && !o(t3, n2) && u(t3), t3;
          } };
        }, 37: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(7122).set, o = n2.MutationObserver || n2.WebKitMutationObserver, s = n2.process, a = n2.Promise, h = "process" == r2(89426)(s);
          t2.exports = function() {
            var t3, e3, r3, f = function() {
              var n3, i2;
              for (h && (n3 = s.domain) && n3.exit(); t3; ) {
                i2 = t3.fn, t3 = t3.next;
                try {
                  i2();
                } catch (n4) {
                  throw t3 ? r3() : e3 = void 0, n4;
                }
              }
              e3 = void 0, n3 && n3.enter();
            };
            if (h)
              r3 = function() {
                s.nextTick(f);
              };
            else if (!o || n2.navigator && n2.navigator.standalone)
              if (a && a.resolve) {
                var u = a.resolve(void 0);
                r3 = function() {
                  u.then(f);
                };
              } else
                r3 = function() {
                  i.call(n2, f);
                };
            else {
              var c = true, d = document.createTextNode("");
              new o(f).observe(d, { characterData: true }), r3 = function() {
                d.data = c = !c;
              };
            }
            return function(n3) {
              var i2 = { fn: n3, next: void 0 };
              e3 && (e3.next = i2), t3 || (t3 = i2, r3()), e3 = i2;
            };
          };
        }, 83285: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(23079);
          function i(t3) {
            var e3, r3;
            this.promise = new t3(function(t4, n3) {
              if (void 0 !== e3 || void 0 !== r3)
                throw TypeError("Bad Promise constructor");
              e3 = t4, r3 = n3;
            }), this.resolve = n2(e3), this.reject = n2(r3);
          }
          t2.exports.f = function(t3) {
            return new i(t3);
          };
        }, 49821: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(51916), i = r2(15825), o = r2(32520), s = r2(41144), a = r2(54200), h = r2(60975), f = Object.assign;
          t2.exports = !f || r2(71240)(function() {
            var t3 = {}, e3 = {}, r3 = Symbol(), n3 = "abcdefghijklmnopqrst";
            return t3[r3] = 7, n3.split("").forEach(function(t4) {
              e3[t4] = t4;
            }), 7 != f({}, t3)[r3] || Object.keys(f({}, e3)).join("") != n3;
          }) ? function(t3, e3) {
            for (var r3 = a(t3), f2 = arguments.length, u = 1, c = o.f, d = s.f; f2 > u; )
              for (var l, p = h(arguments[u++]), g = c ? i(p).concat(c(p)) : i(p), y = g.length, m = 0; y > m; )
                l = g[m++], n2 && !d.call(p, l) || (r3[l] = p[l]);
            return r3;
          } : f;
        }, 62545: (t2, e2, r2) => {
          var n2 = r2(59719), i = r2(30413), o = r2(97590), s = r2(53548)("IE_PROTO"), a = function() {
          }, h = function() {
            var t3, e3 = r2(83383)("iframe"), n3 = o.length;
            for (e3.style.display = "none", r2(26137).appendChild(e3), e3.src = "javascript:", (t3 = e3.contentWindow.document).open(), t3.write("<script>document.F=Object<\/script>"), t3.close(), h = t3.F; n3--; )
              delete h.prototype[o[n3]];
            return h();
          };
          t2.exports = Object.create || function(t3, e3) {
            var r3;
            return null !== t3 ? (a.prototype = n2(t3), r3 = new a(), a.prototype = null, r3[s] = t3) : r3 = h(), void 0 === e3 ? r3 : i(r3, e3);
          };
        }, 83530: (t2, e2, r2) => {
          var n2 = r2(59719), i = r2(44352), o = r2(9241), s = Object.defineProperty;
          e2.f = r2(51916) ? Object.defineProperty : function(t3, e3, r3) {
            if (n2(t3), e3 = o(e3, true), n2(r3), i)
              try {
                return s(t3, e3, r3);
              } catch (t4) {
              }
            if ("get" in r3 || "set" in r3)
              throw TypeError("Accessors not supported!");
            return "value" in r3 && (t3[e3] = r3.value), t3;
          };
        }, 30413: (t2, e2, r2) => {
          var n2 = r2(83530), i = r2(59719), o = r2(15825);
          t2.exports = r2(51916) ? Object.defineProperties : function(t3, e3) {
            i(t3);
            for (var r3, s = o(e3), a = s.length, h = 0; a > h; )
              n2.f(t3, r3 = s[h++], e3[r3]);
            return t3;
          };
        }, 57762: (t2, e2, r2) => {
          var n2 = r2(41144), i = r2(21761), o = r2(8500), s = r2(9241), a = r2(41063), h = r2(44352), f = Object.getOwnPropertyDescriptor;
          e2.f = r2(51916) ? f : function(t3, e3) {
            if (t3 = o(t3), e3 = s(e3, true), h)
              try {
                return f(t3, e3);
              } catch (t4) {
              }
            if (a(t3, e3))
              return i(!n2.f.call(t3, e3), t3[e3]);
          };
        }, 85009: (t2, e2, r2) => {
          var n2 = r2(8500), i = r2(14230).f, o = {}.toString, s = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
          t2.exports.f = function(t3) {
            return s && "[object Window]" == o.call(t3) ? function(t4) {
              try {
                return i(t4);
              } catch (t5) {
                return s.slice();
              }
            }(t3) : i(n2(t3));
          };
        }, 14230: (t2, e2, r2) => {
          var n2 = r2(92851), i = r2(97590).concat("length", "prototype");
          e2.f = Object.getOwnPropertyNames || function(t3) {
            return n2(t3, i);
          };
        }, 32520: (t2, e2) => {
          e2.f = Object.getOwnPropertySymbols;
        }, 44408: (t2, e2, r2) => {
          var n2 = r2(41063), i = r2(54200), o = r2(53548)("IE_PROTO"), s = Object.prototype;
          t2.exports = Object.getPrototypeOf || function(t3) {
            return t3 = i(t3), n2(t3, o) ? t3[o] : "function" == typeof t3.constructor && t3 instanceof t3.constructor ? t3.constructor.prototype : t3 instanceof Object ? s : null;
          };
        }, 92851: (t2, e2, r2) => {
          var n2 = r2(41063), i = r2(8500), o = r2(61545)(false), s = r2(53548)("IE_PROTO");
          t2.exports = function(t3, e3) {
            var r3, a = i(t3), h = 0, f = [];
            for (r3 in a)
              r3 != s && n2(a, r3) && f.push(r3);
            for (; e3.length > h; )
              n2(a, r3 = e3[h++]) && (~o(f, r3) || f.push(r3));
            return f;
          };
        }, 15825: (t2, e2, r2) => {
          var n2 = r2(92851), i = r2(97590);
          t2.exports = Object.keys || function(t3) {
            return n2(t3, i);
          };
        }, 41144: (t2, e2) => {
          e2.f = {}.propertyIsEnumerable;
        }, 81025: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(14411), o = r2(71240);
          t2.exports = function(t3, e3) {
            var r3 = (i.Object || {})[t3] || Object[t3], s = {};
            s[t3] = e3(r3), n2(n2.S + n2.F * o(function() {
              r3(1);
            }), "Object", s);
          };
        }, 15346: (t2, e2, r2) => {
          var n2 = r2(51916), i = r2(15825), o = r2(8500), s = r2(41144).f;
          t2.exports = function(t3) {
            return function(e3) {
              for (var r3, a = o(e3), h = i(a), f = h.length, u = 0, c = []; f > u; )
                r3 = h[u++], n2 && !s.call(a, r3) || c.push(t3 ? [r3, a[r3]] : a[r3]);
              return c;
            };
          };
        }, 17285: (t2, e2, r2) => {
          var n2 = r2(14230), i = r2(32520), o = r2(59719), s = r2(56341).Reflect;
          t2.exports = s && s.ownKeys || function(t3) {
            var e3 = n2.f(o(t3)), r3 = i.f;
            return r3 ? e3.concat(r3(t3)) : e3;
          };
        }, 13765: (t2, e2, r2) => {
          var n2 = r2(56341).parseFloat, i = r2(97370).trim;
          t2.exports = 1 / n2(r2(18275) + "-0") != -1 / 0 ? function(t3) {
            var e3 = i(String(t3), 3), r3 = n2(e3);
            return 0 === r3 && "-" == e3.charAt(0) ? -0 : r3;
          } : n2;
        }, 80500: (t2, e2, r2) => {
          var n2 = r2(56341).parseInt, i = r2(97370).trim, o = r2(18275), s = /^[-+]?0[xX]/;
          t2.exports = 8 !== n2(o + "08") || 22 !== n2(o + "0x16") ? function(t3, e3) {
            var r3 = i(String(t3), 3);
            return n2(r3, e3 >>> 0 || (s.test(r3) ? 16 : 10));
          } : n2;
        }, 98332: (t2) => {
          t2.exports = function(t3) {
            try {
              return { e: false, v: t3() };
            } catch (t4) {
              return { e: true, v: t4 };
            }
          };
        }, 38614: (t2, e2, r2) => {
          var n2 = r2(59719), i = r2(17481), o = r2(83285);
          t2.exports = function(t3, e3) {
            if (n2(t3), i(e3) && e3.constructor === t3)
              return e3;
            var r3 = o.f(t3);
            return (0, r3.resolve)(e3), r3.promise;
          };
        }, 21761: (t2) => {
          t2.exports = function(t3, e2) {
            return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
          };
        }, 24092: (t2, e2, r2) => {
          var n2 = r2(1564);
          t2.exports = function(t3, e3, r3) {
            for (var i in e3)
              n2(t3, i, e3[i], r3);
            return t3;
          };
        }, 1564: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(98442), o = r2(41063), s = r2(90430)("src"), a = r2(65979), h = "toString", f = ("" + a).split(h);
          r2(14411).inspectSource = function(t3) {
            return a.call(t3);
          }, (t2.exports = function(t3, e3, r3, a2) {
            var h2 = "function" == typeof r3;
            h2 && (o(r3, "name") || i(r3, "name", e3)), t3[e3] !== r3 && (h2 && (o(r3, s) || i(r3, s, t3[e3] ? "" + t3[e3] : f.join(String(e3)))), t3 === n2 ? t3[e3] = r3 : a2 ? t3[e3] ? t3[e3] = r3 : i(t3, e3, r3) : (delete t3[e3], i(t3, e3, r3)));
          })(Function.prototype, h, function() {
            return "function" == typeof this && this[s] || a.call(this);
          });
        }, 29073: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(12845), i = RegExp.prototype.exec;
          t2.exports = function(t3, e3) {
            var r3 = t3.exec;
            if ("function" == typeof r3) {
              var o = r3.call(t3, e3);
              if ("object" != typeof o)
                throw new TypeError("RegExp exec method returned something other than an Object or null");
              return o;
            }
            if ("RegExp" !== n2(t3))
              throw new TypeError("RegExp#exec called on incompatible receiver");
            return i.call(t3, e3);
          };
        }, 18868: (t2, e2, r2) => {
          "use strict";
          var n2, i, o = r2(6439), s = RegExp.prototype.exec, a = String.prototype.replace, h = s, f = (n2 = /a/, i = /b*/g, s.call(n2, "a"), s.call(i, "a"), 0 !== n2.lastIndex || 0 !== i.lastIndex), u = void 0 !== /()??/.exec("")[1];
          (f || u) && (h = function(t3) {
            var e3, r3, n3, i2, h2 = this;
            return u && (r3 = new RegExp("^" + h2.source + "$(?!\\s)", o.call(h2))), f && (e3 = h2.lastIndex), n3 = s.call(h2, t3), f && n3 && (h2.lastIndex = h2.global ? n3.index + n3[0].length : e3), u && n3 && n3.length > 1 && a.call(n3[0], r3, function() {
              for (i2 = 1; i2 < arguments.length - 2; i2++)
                void 0 === arguments[i2] && (n3[i2] = void 0);
            }), n3;
          }), t2.exports = h;
        }, 61541: (t2) => {
          t2.exports = Object.is || function(t3, e2) {
            return t3 === e2 ? 0 !== t3 || 1 / t3 == 1 / e2 : t3 != t3 && e2 != e2;
          };
        }, 87135: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(59719), o = function(t3, e3) {
            if (i(t3), !n2(e3) && null !== e3)
              throw TypeError(e3 + ": can't set as prototype!");
          };
          t2.exports = { set: Object.setPrototypeOf || ("__proto__" in {} ? function(t3, e3, n3) {
            try {
              (n3 = r2(82794)(Function.call, r2(57762).f(Object.prototype, "__proto__").set, 2))(t3, []), e3 = !(t3 instanceof Array);
            } catch (t4) {
              e3 = true;
            }
            return function(t4, r3) {
              return o(t4, r3), e3 ? t4.__proto__ = r3 : n3(t4, r3), t4;
            };
          }({}, false) : void 0), check: o };
        }, 75993: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(56341), i = r2(83530), o = r2(51916), s = r2(9739)("species");
          t2.exports = function(t3) {
            var e3 = n2[t3];
            o && e3 && !e3[s] && i.f(e3, s, { configurable: true, get: function() {
              return this;
            } });
          };
        }, 21309: (t2, e2, r2) => {
          var n2 = r2(83530).f, i = r2(41063), o = r2(9739)("toStringTag");
          t2.exports = function(t3, e3, r3) {
            t3 && !i(t3 = r3 ? t3 : t3.prototype, o) && n2(t3, o, { configurable: true, value: e3 });
          };
        }, 53548: (t2, e2, r2) => {
          var n2 = r2(97355)("keys"), i = r2(90430);
          t2.exports = function(t3) {
            return n2[t3] || (n2[t3] = i(t3));
          };
        }, 97355: (t2, e2, r2) => {
          var n2 = r2(14411), i = r2(56341), o = "__core-js_shared__", s = i[o] || (i[o] = {});
          (t2.exports = function(t3, e3) {
            return s[t3] || (s[t3] = void 0 !== e3 ? e3 : {});
          })("versions", []).push({ version: n2.version, mode: r2(35113) ? "pure" : "global", copyright: "\xA9 2019 Denis Pushkarev (zloirock.ru)" });
        }, 59789: (t2, e2, r2) => {
          var n2 = r2(59719), i = r2(23079), o = r2(9739)("species");
          t2.exports = function(t3, e3) {
            var r3, s = n2(t3).constructor;
            return void 0 === s || null == (r3 = n2(s)[o]) ? e3 : i(r3);
          };
        }, 85139: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(71240);
          t2.exports = function(t3, e3) {
            return !!t3 && n2(function() {
              e3 ? t3.call(null, function() {
              }, 1) : t3.call(null);
            });
          };
        }, 7384: (t2, e2, r2) => {
          var n2 = r2(51549), i = r2(13589);
          t2.exports = function(t3) {
            return function(e3, r3) {
              var o, s, a = String(i(e3)), h = n2(r3), f = a.length;
              return h < 0 || h >= f ? t3 ? "" : void 0 : (o = a.charCodeAt(h)) < 55296 || o > 56319 || h + 1 === f || (s = a.charCodeAt(h + 1)) < 56320 || s > 57343 ? t3 ? a.charAt(h) : o : t3 ? a.slice(h, h + 2) : s - 56320 + (o - 55296 << 10) + 65536;
            };
          };
        }, 83256: (t2, e2, r2) => {
          var n2 = r2(89543), i = r2(13589);
          t2.exports = function(t3, e3, r3) {
            if (n2(e3))
              throw TypeError("String#" + r3 + " doesn't accept regex!");
            return String(i(t3));
          };
        }, 79048: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(71240), o = r2(13589), s = /"/g, a = function(t3, e3, r3, n3) {
            var i2 = String(o(t3)), a2 = "<" + e3;
            return "" !== r3 && (a2 += " " + r3 + '="' + String(n3).replace(s, "&quot;") + '"'), a2 + ">" + i2 + "</" + e3 + ">";
          };
          t2.exports = function(t3, e3) {
            var r3 = {};
            r3[t3] = e3(a), n2(n2.P + n2.F * i(function() {
              var e4 = ""[t3]('"');
              return e4 !== e4.toLowerCase() || e4.split('"').length > 3;
            }), "String", r3);
          };
        }, 9823: (t2, e2, r2) => {
          var n2 = r2(61838), i = r2(40005), o = r2(13589);
          t2.exports = function(t3, e3, r3, s) {
            var a = String(o(t3)), h = a.length, f = void 0 === r3 ? " " : String(r3), u = n2(e3);
            if (u <= h || "" == f)
              return a;
            var c = u - h, d = i.call(f, Math.ceil(c / f.length));
            return d.length > c && (d = d.slice(0, c)), s ? d + a : a + d;
          };
        }, 40005: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(51549), i = r2(13589);
          t2.exports = function(t3) {
            var e3 = String(i(this)), r3 = "", o = n2(t3);
            if (o < 0 || o == 1 / 0)
              throw RangeError("Count can't be negative");
            for (; o > 0; (o >>>= 1) && (e3 += e3))
              1 & o && (r3 += e3);
            return r3;
          };
        }, 97370: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(13589), o = r2(71240), s = r2(18275), a = "[" + s + "]", h = RegExp("^" + a + a + "*"), f = RegExp(a + a + "*$"), u = function(t3, e3, r3) {
            var i2 = {}, a2 = o(function() {
              return !!s[t3]() || "\u200B\x85" != "\u200B\x85"[t3]();
            }), h2 = i2[t3] = a2 ? e3(c) : s[t3];
            r3 && (i2[r3] = h2), n2(n2.P + n2.F * a2, "String", i2);
          }, c = u.trim = function(t3, e3) {
            return t3 = String(i(t3)), 1 & e3 && (t3 = t3.replace(h, "")), 2 & e3 && (t3 = t3.replace(f, "")), t3;
          };
          t2.exports = u;
        }, 18275: (t2) => {
          t2.exports = "	\n\v\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
        }, 7122: (t2, e2, r2) => {
          var n2, i, o, s = r2(82794), a = r2(16137), h = r2(26137), f = r2(83383), u = r2(56341), c = u.process, d = u.setImmediate, l = u.clearImmediate, p = u.MessageChannel, g = u.Dispatch, y = 0, m = {}, v = function() {
            var t3 = +this;
            if (m.hasOwnProperty(t3)) {
              var e3 = m[t3];
              delete m[t3], e3();
            }
          }, b = function(t3) {
            v.call(t3.data);
          };
          d && l || (d = function(t3) {
            for (var e3 = [], r3 = 1; arguments.length > r3; )
              e3.push(arguments[r3++]);
            return m[++y] = function() {
              a("function" == typeof t3 ? t3 : Function(t3), e3);
            }, n2(y), y;
          }, l = function(t3) {
            delete m[t3];
          }, "process" == r2(89426)(c) ? n2 = function(t3) {
            c.nextTick(s(v, t3, 1));
          } : g && g.now ? n2 = function(t3) {
            g.now(s(v, t3, 1));
          } : p ? (o = (i = new p()).port2, i.port1.onmessage = b, n2 = s(o.postMessage, o, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (n2 = function(t3) {
            u.postMessage(t3 + "", "*");
          }, u.addEventListener("message", b, false)) : n2 = "onreadystatechange" in f("script") ? function(t3) {
            h.appendChild(f("script")).onreadystatechange = function() {
              h.removeChild(this), v.call(t3);
            };
          } : function(t3) {
            setTimeout(s(v, t3, 1), 0);
          }), t2.exports = { set: d, clear: l };
        }, 15044: (t2, e2, r2) => {
          var n2 = r2(51549), i = Math.max, o = Math.min;
          t2.exports = function(t3, e3) {
            return (t3 = n2(t3)) < 0 ? i(t3 + e3, 0) : o(t3, e3);
          };
        }, 99707: (t2, e2, r2) => {
          var n2 = r2(51549), i = r2(61838);
          t2.exports = function(t3) {
            if (void 0 === t3)
              return 0;
            var e3 = n2(t3), r3 = i(e3);
            if (e3 !== r3)
              throw RangeError("Wrong length!");
            return r3;
          };
        }, 51549: (t2) => {
          var e2 = Math.ceil, r2 = Math.floor;
          t2.exports = function(t3) {
            return isNaN(t3 = +t3) ? 0 : (t3 > 0 ? r2 : e2)(t3);
          };
        }, 8500: (t2, e2, r2) => {
          var n2 = r2(60975), i = r2(13589);
          t2.exports = function(t3) {
            return n2(i(t3));
          };
        }, 61838: (t2, e2, r2) => {
          var n2 = r2(51549), i = Math.min;
          t2.exports = function(t3) {
            return t3 > 0 ? i(n2(t3), 9007199254740991) : 0;
          };
        }, 54200: (t2, e2, r2) => {
          var n2 = r2(13589);
          t2.exports = function(t3) {
            return Object(n2(t3));
          };
        }, 9241: (t2, e2, r2) => {
          var n2 = r2(17481);
          t2.exports = function(t3, e3) {
            if (!n2(t3))
              return t3;
            var r3, i;
            if (e3 && "function" == typeof (r3 = t3.toString) && !n2(i = r3.call(t3)))
              return i;
            if ("function" == typeof (r3 = t3.valueOf) && !n2(i = r3.call(t3)))
              return i;
            if (!e3 && "function" == typeof (r3 = t3.toString) && !n2(i = r3.call(t3)))
              return i;
            throw TypeError("Can't convert object to primitive value");
          };
        }, 58754: (t2, e2, r2) => {
          "use strict";
          if (r2(51916)) {
            var n2 = r2(35113), i = r2(56341), o = r2(71240), s = r2(35366), a = r2(67728), h = r2(29895), f = r2(82794), u = r2(30599), c = r2(21761), d = r2(98442), l = r2(24092), p = r2(51549), g = r2(61838), y = r2(99707), m = r2(15044), v = r2(9241), b = r2(41063), w = r2(12845), _ = r2(17481), k = r2(54200), S = r2(63894), A = r2(62545), x = r2(44408), M = r2(14230).f, E = r2(18444), B = r2(90430), I = r2(9739), P = r2(66934), T = r2(61545), R = r2(59789), O = r2(71308), C = r2(4919), j = r2(61461), N = r2(75993), D = r2(70852), L = r2(4893), F = r2(83530), q = r2(57762), U = F.f, V = q.f, z = i.RangeError, H = i.TypeError, K = i.Uint8Array, W = "ArrayBuffer", G = "SharedArrayBuffer", Y = "BYTES_PER_ELEMENT", J = Array.prototype, X = h.ArrayBuffer, Z = h.DataView, $ = P(0), Q = P(2), tt = P(3), et = P(4), rt = P(5), nt = P(6), it = T(true), ot = T(false), st = O.values, at = O.keys, ht = O.entries, ft = J.lastIndexOf, ut = J.reduce, ct = J.reduceRight, dt = J.join, lt = J.sort, pt = J.slice, gt = J.toString, yt = J.toLocaleString, mt = I("iterator"), vt = I("toStringTag"), bt = B("typed_constructor"), wt = B("def_constructor"), _t = a.CONSTR, kt = a.TYPED, St = a.VIEW, At = "Wrong length!", xt = P(1, function(t3, e3) {
              return Pt(R(t3, t3[wt]), e3);
            }), Mt = o(function() {
              return 1 === new K(new Uint16Array([1]).buffer)[0];
            }), Et = !!K && !!K.prototype.set && o(function() {
              new K(1).set({});
            }), Bt = function(t3, e3) {
              var r3 = p(t3);
              if (r3 < 0 || r3 % e3)
                throw z("Wrong offset!");
              return r3;
            }, It = function(t3) {
              if (_(t3) && kt in t3)
                return t3;
              throw H(t3 + " is not a typed array!");
            }, Pt = function(t3, e3) {
              if (!_(t3) || !(bt in t3))
                throw H("It is not a typed array constructor!");
              return new t3(e3);
            }, Tt = function(t3, e3) {
              return Rt(R(t3, t3[wt]), e3);
            }, Rt = function(t3, e3) {
              for (var r3 = 0, n3 = e3.length, i2 = Pt(t3, n3); n3 > r3; )
                i2[r3] = e3[r3++];
              return i2;
            }, Ot = function(t3, e3, r3) {
              U(t3, e3, { get: function() {
                return this._d[r3];
              } });
            }, Ct = function(t3) {
              var e3, r3, n3, i2, o2, s2, a2 = k(t3), h2 = arguments.length, u2 = h2 > 1 ? arguments[1] : void 0, c2 = void 0 !== u2, d2 = E(a2);
              if (null != d2 && !S(d2)) {
                for (s2 = d2.call(a2), n3 = [], e3 = 0; !(o2 = s2.next()).done; e3++)
                  n3.push(o2.value);
                a2 = n3;
              }
              for (c2 && h2 > 2 && (u2 = f(u2, arguments[2], 2)), e3 = 0, r3 = g(a2.length), i2 = Pt(this, r3); r3 > e3; e3++)
                i2[e3] = c2 ? u2(a2[e3], e3) : a2[e3];
              return i2;
            }, jt = function() {
              for (var t3 = 0, e3 = arguments.length, r3 = Pt(this, e3); e3 > t3; )
                r3[t3] = arguments[t3++];
              return r3;
            }, Nt = !!K && o(function() {
              yt.call(new K(1));
            }), Dt = function() {
              return yt.apply(Nt ? pt.call(It(this)) : It(this), arguments);
            }, Lt = { copyWithin: function(t3, e3) {
              return L.call(It(this), t3, e3, arguments.length > 2 ? arguments[2] : void 0);
            }, every: function(t3) {
              return et(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, fill: function(t3) {
              return D.apply(It(this), arguments);
            }, filter: function(t3) {
              return Tt(this, Q(It(this), t3, arguments.length > 1 ? arguments[1] : void 0));
            }, find: function(t3) {
              return rt(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, findIndex: function(t3) {
              return nt(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, forEach: function(t3) {
              $(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, indexOf: function(t3) {
              return ot(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, includes: function(t3) {
              return it(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, join: function(t3) {
              return dt.apply(It(this), arguments);
            }, lastIndexOf: function(t3) {
              return ft.apply(It(this), arguments);
            }, map: function(t3) {
              return xt(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, reduce: function(t3) {
              return ut.apply(It(this), arguments);
            }, reduceRight: function(t3) {
              return ct.apply(It(this), arguments);
            }, reverse: function() {
              for (var t3, e3 = this, r3 = It(e3).length, n3 = Math.floor(r3 / 2), i2 = 0; i2 < n3; )
                t3 = e3[i2], e3[i2++] = e3[--r3], e3[r3] = t3;
              return e3;
            }, some: function(t3) {
              return tt(It(this), t3, arguments.length > 1 ? arguments[1] : void 0);
            }, sort: function(t3) {
              return lt.call(It(this), t3);
            }, subarray: function(t3, e3) {
              var r3 = It(this), n3 = r3.length, i2 = m(t3, n3);
              return new (R(r3, r3[wt]))(r3.buffer, r3.byteOffset + i2 * r3.BYTES_PER_ELEMENT, g((void 0 === e3 ? n3 : m(e3, n3)) - i2));
            } }, Ft = function(t3, e3) {
              return Tt(this, pt.call(It(this), t3, e3));
            }, qt = function(t3) {
              It(this);
              var e3 = Bt(arguments[1], 1), r3 = this.length, n3 = k(t3), i2 = g(n3.length), o2 = 0;
              if (i2 + e3 > r3)
                throw z(At);
              for (; o2 < i2; )
                this[e3 + o2] = n3[o2++];
            }, Ut = { entries: function() {
              return ht.call(It(this));
            }, keys: function() {
              return at.call(It(this));
            }, values: function() {
              return st.call(It(this));
            } }, Vt = function(t3, e3) {
              return _(t3) && t3[kt] && "symbol" != typeof e3 && e3 in t3 && String(+e3) == String(e3);
            }, zt = function(t3, e3) {
              return Vt(t3, e3 = v(e3, true)) ? c(2, t3[e3]) : V(t3, e3);
            }, Ht = function(t3, e3, r3) {
              return !(Vt(t3, e3 = v(e3, true)) && _(r3) && b(r3, "value")) || b(r3, "get") || b(r3, "set") || r3.configurable || b(r3, "writable") && !r3.writable || b(r3, "enumerable") && !r3.enumerable ? U(t3, e3, r3) : (t3[e3] = r3.value, t3);
            };
            _t || (q.f = zt, F.f = Ht), s(s.S + s.F * !_t, "Object", { getOwnPropertyDescriptor: zt, defineProperty: Ht }), o(function() {
              gt.call({});
            }) && (gt = yt = function() {
              return dt.call(this);
            });
            var Kt = l({}, Lt);
            l(Kt, Ut), d(Kt, mt, Ut.values), l(Kt, { slice: Ft, set: qt, constructor: function() {
            }, toString: gt, toLocaleString: Dt }), Ot(Kt, "buffer", "b"), Ot(Kt, "byteOffset", "o"), Ot(Kt, "byteLength", "l"), Ot(Kt, "length", "e"), U(Kt, vt, { get: function() {
              return this[kt];
            } }), t2.exports = function(t3, e3, r3, h2) {
              var f2 = t3 + ((h2 = !!h2) ? "Clamped" : "") + "Array", c2 = "get" + t3, l2 = "set" + t3, p2 = i[f2], m2 = p2 || {}, v2 = p2 && x(p2), b2 = !p2 || !a.ABV, k2 = {}, S2 = p2 && p2.prototype, E2 = function(t4, r4) {
                U(t4, r4, { get: function() {
                  return function(t5, r5) {
                    var n3 = t5._d;
                    return n3.v[c2](r5 * e3 + n3.o, Mt);
                  }(this, r4);
                }, set: function(t5) {
                  return function(t6, r5, n3) {
                    var i2 = t6._d;
                    h2 && (n3 = (n3 = Math.round(n3)) < 0 ? 0 : n3 > 255 ? 255 : 255 & n3), i2.v[l2](r5 * e3 + i2.o, n3, Mt);
                  }(this, r4, t5);
                }, enumerable: true });
              };
              b2 ? (p2 = r3(function(t4, r4, n3, i2) {
                u(t4, p2, f2, "_d");
                var o2, s2, a2, h3, c3 = 0, l3 = 0;
                if (_(r4)) {
                  if (!(r4 instanceof X || (h3 = w(r4)) == W || h3 == G))
                    return kt in r4 ? Rt(p2, r4) : Ct.call(p2, r4);
                  o2 = r4, l3 = Bt(n3, e3);
                  var m3 = r4.byteLength;
                  if (void 0 === i2) {
                    if (m3 % e3)
                      throw z(At);
                    if ((s2 = m3 - l3) < 0)
                      throw z(At);
                  } else if ((s2 = g(i2) * e3) + l3 > m3)
                    throw z(At);
                  a2 = s2 / e3;
                } else
                  a2 = y(r4), o2 = new X(s2 = a2 * e3);
                for (d(t4, "_d", { b: o2, o: l3, l: s2, e: a2, v: new Z(o2) }); c3 < a2; )
                  E2(t4, c3++);
              }), S2 = p2.prototype = A(Kt), d(S2, "constructor", p2)) : o(function() {
                p2(1);
              }) && o(function() {
                new p2(-1);
              }) && j(function(t4) {
                new p2(), new p2(null), new p2(1.5), new p2(t4);
              }, true) || (p2 = r3(function(t4, r4, n3, i2) {
                var o2;
                return u(t4, p2, f2), _(r4) ? r4 instanceof X || (o2 = w(r4)) == W || o2 == G ? void 0 !== i2 ? new m2(r4, Bt(n3, e3), i2) : void 0 !== n3 ? new m2(r4, Bt(n3, e3)) : new m2(r4) : kt in r4 ? Rt(p2, r4) : Ct.call(p2, r4) : new m2(y(r4));
              }), $(v2 !== Function.prototype ? M(m2).concat(M(v2)) : M(m2), function(t4) {
                t4 in p2 || d(p2, t4, m2[t4]);
              }), p2.prototype = S2, n2 || (S2.constructor = p2));
              var B2 = S2[mt], I2 = !!B2 && ("values" == B2.name || null == B2.name), P2 = Ut.values;
              d(p2, bt, true), d(S2, kt, f2), d(S2, St, true), d(S2, wt, p2), (h2 ? new p2(1)[vt] == f2 : vt in S2) || U(S2, vt, { get: function() {
                return f2;
              } }), k2[f2] = p2, s(s.G + s.W + s.F * (p2 != m2), k2), s(s.S, f2, { BYTES_PER_ELEMENT: e3 }), s(s.S + s.F * o(function() {
                m2.of.call(p2, 1);
              }), f2, { from: Ct, of: jt }), Y in S2 || d(S2, Y, e3), s(s.P, f2, Lt), N(f2), s(s.P + s.F * Et, f2, { set: qt }), s(s.P + s.F * !I2, f2, Ut), n2 || S2.toString == gt || (S2.toString = gt), s(s.P + s.F * o(function() {
                new p2(1).slice();
              }), f2, { slice: Ft }), s(s.P + s.F * (o(function() {
                return [1, 2].toLocaleString() != new p2([1, 2]).toLocaleString();
              }) || !o(function() {
                S2.toLocaleString.call([1, 2]);
              })), f2, { toLocaleString: Dt }), C[f2] = I2 ? B2 : P2, n2 || I2 || d(S2, mt, P2);
            };
          } else
            t2.exports = function() {
            };
        }, 29895: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(56341), i = r2(51916), o = r2(35113), s = r2(67728), a = r2(98442), h = r2(24092), f = r2(71240), u = r2(30599), c = r2(51549), d = r2(61838), l = r2(99707), p = r2(14230).f, g = r2(83530).f, y = r2(70852), m = r2(21309), v = "ArrayBuffer", b = "DataView", w = "Wrong index!", _ = n2.ArrayBuffer, k = n2.DataView, S = n2.Math, A = n2.RangeError, x = n2.Infinity, M = _, E = S.abs, B = S.pow, I = S.floor, P = S.log, T = S.LN2, R = "buffer", O = "byteLength", C = "byteOffset", j = i ? "_b" : R, N = i ? "_l" : O, D = i ? "_o" : C;
          function L(t3, e3, r3) {
            var n3, i2, o2, s2 = new Array(r3), a2 = 8 * r3 - e3 - 1, h2 = (1 << a2) - 1, f2 = h2 >> 1, u2 = 23 === e3 ? B(2, -24) - B(2, -77) : 0, c2 = 0, d2 = t3 < 0 || 0 === t3 && 1 / t3 < 0 ? 1 : 0;
            for ((t3 = E(t3)) != t3 || t3 === x ? (i2 = t3 != t3 ? 1 : 0, n3 = h2) : (n3 = I(P(t3) / T), t3 * (o2 = B(2, -n3)) < 1 && (n3--, o2 *= 2), (t3 += n3 + f2 >= 1 ? u2 / o2 : u2 * B(2, 1 - f2)) * o2 >= 2 && (n3++, o2 /= 2), n3 + f2 >= h2 ? (i2 = 0, n3 = h2) : n3 + f2 >= 1 ? (i2 = (t3 * o2 - 1) * B(2, e3), n3 += f2) : (i2 = t3 * B(2, f2 - 1) * B(2, e3), n3 = 0)); e3 >= 8; s2[c2++] = 255 & i2, i2 /= 256, e3 -= 8)
              ;
            for (n3 = n3 << e3 | i2, a2 += e3; a2 > 0; s2[c2++] = 255 & n3, n3 /= 256, a2 -= 8)
              ;
            return s2[--c2] |= 128 * d2, s2;
          }
          function F(t3, e3, r3) {
            var n3, i2 = 8 * r3 - e3 - 1, o2 = (1 << i2) - 1, s2 = o2 >> 1, a2 = i2 - 7, h2 = r3 - 1, f2 = t3[h2--], u2 = 127 & f2;
            for (f2 >>= 7; a2 > 0; u2 = 256 * u2 + t3[h2], h2--, a2 -= 8)
              ;
            for (n3 = u2 & (1 << -a2) - 1, u2 >>= -a2, a2 += e3; a2 > 0; n3 = 256 * n3 + t3[h2], h2--, a2 -= 8)
              ;
            if (0 === u2)
              u2 = 1 - s2;
            else {
              if (u2 === o2)
                return n3 ? NaN : f2 ? -x : x;
              n3 += B(2, e3), u2 -= s2;
            }
            return (f2 ? -1 : 1) * n3 * B(2, u2 - e3);
          }
          function q(t3) {
            return t3[3] << 24 | t3[2] << 16 | t3[1] << 8 | t3[0];
          }
          function U(t3) {
            return [255 & t3];
          }
          function V(t3) {
            return [255 & t3, t3 >> 8 & 255];
          }
          function z(t3) {
            return [255 & t3, t3 >> 8 & 255, t3 >> 16 & 255, t3 >> 24 & 255];
          }
          function H(t3) {
            return L(t3, 52, 8);
          }
          function K(t3) {
            return L(t3, 23, 4);
          }
          function W(t3, e3, r3) {
            g(t3.prototype, e3, { get: function() {
              return this[r3];
            } });
          }
          function G(t3, e3, r3, n3) {
            var i2 = l(+r3);
            if (i2 + e3 > t3[N])
              throw A(w);
            var o2 = t3[j]._b, s2 = i2 + t3[D], a2 = o2.slice(s2, s2 + e3);
            return n3 ? a2 : a2.reverse();
          }
          function Y(t3, e3, r3, n3, i2, o2) {
            var s2 = l(+r3);
            if (s2 + e3 > t3[N])
              throw A(w);
            for (var a2 = t3[j]._b, h2 = s2 + t3[D], f2 = n3(+i2), u2 = 0; u2 < e3; u2++)
              a2[h2 + u2] = f2[o2 ? u2 : e3 - u2 - 1];
          }
          if (s.ABV) {
            if (!f(function() {
              _(1);
            }) || !f(function() {
              new _(-1);
            }) || f(function() {
              return new _(), new _(1.5), new _(NaN), _.name != v;
            })) {
              for (var J, X = (_ = function(t3) {
                return u(this, _), new M(l(t3));
              }).prototype = M.prototype, Z = p(M), $ = 0; Z.length > $; )
                (J = Z[$++]) in _ || a(_, J, M[J]);
              o || (X.constructor = _);
            }
            var Q = new k(new _(2)), tt = k.prototype.setInt8;
            Q.setInt8(0, 2147483648), Q.setInt8(1, 2147483649), !Q.getInt8(0) && Q.getInt8(1) || h(k.prototype, { setInt8: function(t3, e3) {
              tt.call(this, t3, e3 << 24 >> 24);
            }, setUint8: function(t3, e3) {
              tt.call(this, t3, e3 << 24 >> 24);
            } }, true);
          } else
            _ = function(t3) {
              u(this, _, v);
              var e3 = l(t3);
              this._b = y.call(new Array(e3), 0), this[N] = e3;
            }, k = function(t3, e3, r3) {
              u(this, k, b), u(t3, _, b);
              var n3 = t3[N], i2 = c(e3);
              if (i2 < 0 || i2 > n3)
                throw A("Wrong offset!");
              if (i2 + (r3 = void 0 === r3 ? n3 - i2 : d(r3)) > n3)
                throw A("Wrong length!");
              this[j] = t3, this[D] = i2, this[N] = r3;
            }, i && (W(_, O, "_l"), W(k, R, "_b"), W(k, O, "_l"), W(k, C, "_o")), h(k.prototype, { getInt8: function(t3) {
              return G(this, 1, t3)[0] << 24 >> 24;
            }, getUint8: function(t3) {
              return G(this, 1, t3)[0];
            }, getInt16: function(t3) {
              var e3 = G(this, 2, t3, arguments[1]);
              return (e3[1] << 8 | e3[0]) << 16 >> 16;
            }, getUint16: function(t3) {
              var e3 = G(this, 2, t3, arguments[1]);
              return e3[1] << 8 | e3[0];
            }, getInt32: function(t3) {
              return q(G(this, 4, t3, arguments[1]));
            }, getUint32: function(t3) {
              return q(G(this, 4, t3, arguments[1])) >>> 0;
            }, getFloat32: function(t3) {
              return F(G(this, 4, t3, arguments[1]), 23, 4);
            }, getFloat64: function(t3) {
              return F(G(this, 8, t3, arguments[1]), 52, 8);
            }, setInt8: function(t3, e3) {
              Y(this, 1, t3, U, e3);
            }, setUint8: function(t3, e3) {
              Y(this, 1, t3, U, e3);
            }, setInt16: function(t3, e3) {
              Y(this, 2, t3, V, e3, arguments[2]);
            }, setUint16: function(t3, e3) {
              Y(this, 2, t3, V, e3, arguments[2]);
            }, setInt32: function(t3, e3) {
              Y(this, 4, t3, z, e3, arguments[2]);
            }, setUint32: function(t3, e3) {
              Y(this, 4, t3, z, e3, arguments[2]);
            }, setFloat32: function(t3, e3) {
              Y(this, 4, t3, K, e3, arguments[2]);
            }, setFloat64: function(t3, e3) {
              Y(this, 8, t3, H, e3, arguments[2]);
            } });
          m(_, v), m(k, b), a(k.prototype, s.VIEW, true), e2.ArrayBuffer = _, e2.DataView = k;
        }, 67728: (t2, e2, r2) => {
          for (var n2, i = r2(56341), o = r2(98442), s = r2(90430), a = s("typed_array"), h = s("view"), f = !(!i.ArrayBuffer || !i.DataView), u = f, c = 0, d = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); c < 9; )
            (n2 = i[d[c++]]) ? (o(n2.prototype, a, true), o(n2.prototype, h, true)) : u = false;
          t2.exports = { ABV: f, CONSTR: u, TYPED: a, VIEW: h };
        }, 90430: (t2) => {
          var e2 = 0, r2 = Math.random();
          t2.exports = function(t3) {
            return "Symbol(".concat(void 0 === t3 ? "" : t3, ")_", (++e2 + r2).toString(36));
          };
        }, 83843: (t2, e2, r2) => {
          var n2 = r2(56341).navigator;
          t2.exports = n2 && n2.userAgent || "";
        }, 91603: (t2, e2, r2) => {
          var n2 = r2(17481);
          t2.exports = function(t3, e3) {
            if (!n2(t3) || t3._t !== e3)
              throw TypeError("Incompatible receiver, " + e3 + " required!");
            return t3;
          };
        }, 48155: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(14411), o = r2(35113), s = r2(38833), a = r2(83530).f;
          t2.exports = function(t3) {
            var e3 = i.Symbol || (i.Symbol = o ? {} : n2.Symbol || {});
            "_" == t3.charAt(0) || t3 in e3 || a(e3, t3, { value: s.f(t3) });
          };
        }, 38833: (t2, e2, r2) => {
          e2.f = r2(9739);
        }, 9739: (t2, e2, r2) => {
          var n2 = r2(97355)("wks"), i = r2(90430), o = r2(56341).Symbol, s = "function" == typeof o;
          (t2.exports = function(t3) {
            return n2[t3] || (n2[t3] = s && o[t3] || (s ? o : i)("Symbol." + t3));
          }).store = n2;
        }, 18444: (t2, e2, r2) => {
          var n2 = r2(12845), i = r2(9739)("iterator"), o = r2(4919);
          t2.exports = r2(14411).getIteratorMethod = function(t3) {
            if (null != t3)
              return t3[i] || t3["@@iterator"] || o[n2(t3)];
          };
        }, 71412: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.P, "Array", { copyWithin: r2(4893) }), r2(12802)("copyWithin");
        }, 35943: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(4);
          n2(n2.P + n2.F * !r2(85139)([].every, true), "Array", { every: function(t3) {
            return i(this, t3, arguments[1]);
          } });
        }, 30360: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.P, "Array", { fill: r2(70852) }), r2(12802)("fill");
        }, 33352: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(2);
          n2(n2.P + n2.F * !r2(85139)([].filter, true), "Array", { filter: function(t3) {
            return i(this, t3, arguments[1]);
          } });
        }, 83118: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(6), o = "findIndex", s = true;
          o in [] && Array(1)[o](function() {
            s = false;
          }), n2(n2.P + n2.F * s, "Array", { findIndex: function(t3) {
            return i(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } }), r2(12802)(o);
        }, 18394: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(5), o = "find", s = true;
          o in [] && Array(1).find(function() {
            s = false;
          }), n2(n2.P + n2.F * s, "Array", { find: function(t3) {
            return i(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } }), r2(12802)(o);
        }, 9106: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(0), o = r2(85139)([].forEach, true);
          n2(n2.P + n2.F * !o, "Array", { forEach: function(t3) {
            return i(this, t3, arguments[1]);
          } });
        }, 65271: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(82794), i = r2(35366), o = r2(54200), s = r2(55539), a = r2(63894), h = r2(61838), f = r2(51676), u = r2(18444);
          i(i.S + i.F * !r2(61461)(function(t3) {
            Array.from(t3);
          }), "Array", { from: function(t3) {
            var e3, r3, i2, c, d = o(t3), l = "function" == typeof this ? this : Array, p = arguments.length, g = p > 1 ? arguments[1] : void 0, y = void 0 !== g, m = 0, v = u(d);
            if (y && (g = n2(g, p > 2 ? arguments[2] : void 0, 2)), null == v || l == Array && a(v))
              for (r3 = new l(e3 = h(d.length)); e3 > m; m++)
                f(r3, m, y ? g(d[m], m) : d[m]);
            else
              for (c = v.call(d), r3 = new l(); !(i2 = c.next()).done; m++)
                f(r3, m, y ? s(c, g, [i2.value, m], true) : i2.value);
            return r3.length = m, r3;
          } });
        }, 86174: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(61545)(false), o = [].indexOf, s = !!o && 1 / [1].indexOf(1, -0) < 0;
          n2(n2.P + n2.F * (s || !r2(85139)(o)), "Array", { indexOf: function(t3) {
            return s ? o.apply(this, arguments) || 0 : i(this, t3, arguments[1]);
          } });
        }, 50160: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Array", { isArray: r2(40689) });
        }, 71308: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(12802), i = r2(78611), o = r2(4919), s = r2(8500);
          t2.exports = r2(19121)(Array, "Array", function(t3, e3) {
            this._t = s(t3), this._i = 0, this._k = e3;
          }, function() {
            var t3 = this._t, e3 = this._k, r3 = this._i++;
            return !t3 || r3 >= t3.length ? (this._t = void 0, i(1)) : i(0, "keys" == e3 ? r3 : "values" == e3 ? t3[r3] : [r3, t3[r3]]);
          }, "values"), o.Arguments = o.Array, n2("keys"), n2("values"), n2("entries");
        }, 92523: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(8500), o = [].join;
          n2(n2.P + n2.F * (r2(60975) != Object || !r2(85139)(o)), "Array", { join: function(t3) {
            return o.call(i(this), void 0 === t3 ? "," : t3);
          } });
        }, 86975: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(8500), o = r2(51549), s = r2(61838), a = [].lastIndexOf, h = !!a && 1 / [1].lastIndexOf(1, -0) < 0;
          n2(n2.P + n2.F * (h || !r2(85139)(a)), "Array", { lastIndexOf: function(t3) {
            if (h)
              return a.apply(this, arguments) || 0;
            var e3 = i(this), r3 = s(e3.length), n3 = r3 - 1;
            for (arguments.length > 1 && (n3 = Math.min(n3, o(arguments[1]))), n3 < 0 && (n3 = r3 + n3); n3 >= 0; n3--)
              if (n3 in e3 && e3[n3] === t3)
                return n3 || 0;
            return -1;
          } });
        }, 9139: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(1);
          n2(n2.P + n2.F * !r2(85139)([].map, true), "Array", { map: function(t3) {
            return i(this, t3, arguments[1]);
          } });
        }, 18221: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(51676);
          n2(n2.S + n2.F * r2(71240)(function() {
            function t3() {
            }
            return !(Array.of.call(t3) instanceof t3);
          }), "Array", { of: function() {
            for (var t3 = 0, e3 = arguments.length, r3 = new ("function" == typeof this ? this : Array)(e3); e3 > t3; )
              i(r3, t3, arguments[t3++]);
            return r3.length = e3, r3;
          } });
        }, 88292: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(9857);
          n2(n2.P + n2.F * !r2(85139)([].reduceRight, true), "Array", { reduceRight: function(t3) {
            return i(this, t3, arguments.length, arguments[1], true);
          } });
        }, 59483: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(9857);
          n2(n2.P + n2.F * !r2(85139)([].reduce, true), "Array", { reduce: function(t3) {
            return i(this, t3, arguments.length, arguments[1], false);
          } });
        }, 65441: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(26137), o = r2(89426), s = r2(15044), a = r2(61838), h = [].slice;
          n2(n2.P + n2.F * r2(71240)(function() {
            i && h.call(i);
          }), "Array", { slice: function(t3, e3) {
            var r3 = a(this.length), n3 = o(this);
            if (e3 = void 0 === e3 ? r3 : e3, "Array" == n3)
              return h.call(this, t3, e3);
            for (var i2 = s(t3, r3), f = s(e3, r3), u = a(f - i2), c = new Array(u), d = 0; d < u; d++)
              c[d] = "String" == n3 ? this.charAt(i2 + d) : this[i2 + d];
            return c;
          } });
        }, 53289: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(66934)(3);
          n2(n2.P + n2.F * !r2(85139)([].some, true), "Array", { some: function(t3) {
            return i(this, t3, arguments[1]);
          } });
        }, 88375: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(23079), o = r2(54200), s = r2(71240), a = [].sort, h = [1, 2, 3];
          n2(n2.P + n2.F * (s(function() {
            h.sort(void 0);
          }) || !s(function() {
            h.sort(null);
          }) || !r2(85139)(a)), "Array", { sort: function(t3) {
            return void 0 === t3 ? a.call(o(this)) : a.call(o(this), i(t3));
          } });
        }, 78772: (t2, e2, r2) => {
          r2(75993)("Array");
        }, 32338: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Date", { now: function() {
            return new Date().getTime();
          } });
        }, 21575: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(41792);
          n2(n2.P + n2.F * (Date.prototype.toISOString !== i), "Date", { toISOString: i });
        }, 20641: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(54200), o = r2(9241);
          n2(n2.P + n2.F * r2(71240)(function() {
            return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({ toISOString: function() {
              return 1;
            } });
          }), "Date", { toJSON: function(t3) {
            var e3 = i(this), r3 = o(e3);
            return "number" != typeof r3 || isFinite(r3) ? e3.toISOString() : null;
          } });
        }, 91033: (t2, e2, r2) => {
          var n2 = r2(9739)("toPrimitive"), i = Date.prototype;
          n2 in i || r2(98442)(i, n2, r2(27687));
        }, 75611: (t2, e2, r2) => {
          var n2 = Date.prototype, i = "Invalid Date", o = n2.toString, s = n2.getTime;
          new Date(NaN) + "" != i && r2(1564)(n2, "toString", function() {
            var t3 = s.call(this);
            return t3 == t3 ? o.call(this) : i;
          });
        }, 78769: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.P, "Function", { bind: r2(46966) });
        }, 99383: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(17481), i = r2(44408), o = r2(9739)("hasInstance"), s = Function.prototype;
          o in s || r2(83530).f(s, o, { value: function(t3) {
            if ("function" != typeof this || !n2(t3))
              return false;
            if (!n2(this.prototype))
              return t3 instanceof this;
            for (; t3 = i(t3); )
              if (this.prototype === t3)
                return true;
            return false;
          } });
        }, 729: (t2, e2, r2) => {
          var n2 = r2(83530).f, i = Function.prototype, o = /^\s*function ([^ (]*)/, s = "name";
          s in i || r2(51916) && n2(i, s, { configurable: true, get: function() {
            try {
              return ("" + this).match(o)[1];
            } catch (t3) {
              return "";
            }
          } });
        }, 82509: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(95144), i = r2(91603), o = "Map";
          t2.exports = r2(58091)(o, function(t3) {
            return function() {
              return t3(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { get: function(t3) {
            var e3 = n2.getEntry(i(this, o), t3);
            return e3 && e3.v;
          }, set: function(t3, e3) {
            return n2.def(i(this, o), 0 === t3 ? 0 : t3, e3);
          } }, n2, true);
        }, 12372: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(19007), o = Math.sqrt, s = Math.acosh;
          n2(n2.S + n2.F * !(s && 710 == Math.floor(s(Number.MAX_VALUE)) && s(1 / 0) == 1 / 0), "Math", { acosh: function(t3) {
            return (t3 = +t3) < 1 ? NaN : t3 > 9490626562425156e-8 ? Math.log(t3) + Math.LN2 : i(t3 - 1 + o(t3 - 1) * o(t3 + 1));
          } });
        }, 30511: (t2, e2, r2) => {
          var n2 = r2(35366), i = Math.asinh;
          n2(n2.S + n2.F * !(i && 1 / i(0) > 0), "Math", { asinh: function t3(e3) {
            return isFinite(e3 = +e3) && 0 != e3 ? e3 < 0 ? -t3(-e3) : Math.log(e3 + Math.sqrt(e3 * e3 + 1)) : e3;
          } });
        }, 6781: (t2, e2, r2) => {
          var n2 = r2(35366), i = Math.atanh;
          n2(n2.S + n2.F * !(i && 1 / i(-0) < 0), "Math", { atanh: function(t3) {
            return 0 == (t3 = +t3) ? t3 : Math.log((1 + t3) / (1 - t3)) / 2;
          } });
        }, 74434: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(84247);
          n2(n2.S, "Math", { cbrt: function(t3) {
            return i(t3 = +t3) * Math.pow(Math.abs(t3), 1 / 3);
          } });
        }, 14783: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { clz32: function(t3) {
            return (t3 >>>= 0) ? 31 - Math.floor(Math.log(t3 + 0.5) * Math.LOG2E) : 32;
          } });
        }, 95521: (t2, e2, r2) => {
          var n2 = r2(35366), i = Math.exp;
          n2(n2.S, "Math", { cosh: function(t3) {
            return (i(t3 = +t3) + i(-t3)) / 2;
          } });
        }, 94093: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(77117);
          n2(n2.S + n2.F * (i != Math.expm1), "Math", { expm1: i });
        }, 86378: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { fround: r2(59396) });
        }, 52380: (t2, e2, r2) => {
          var n2 = r2(35366), i = Math.abs;
          n2(n2.S, "Math", { hypot: function(t3, e3) {
            for (var r3, n3, o = 0, s = 0, a = arguments.length, h = 0; s < a; )
              h < (r3 = i(arguments[s++])) ? (o = o * (n3 = h / r3) * n3 + 1, h = r3) : o += r3 > 0 ? (n3 = r3 / h) * n3 : r3;
            return h === 1 / 0 ? 1 / 0 : h * Math.sqrt(o);
          } });
        }, 2803: (t2, e2, r2) => {
          var n2 = r2(35366), i = Math.imul;
          n2(n2.S + n2.F * r2(71240)(function() {
            return -5 != i(4294967295, 5) || 2 != i.length;
          }), "Math", { imul: function(t3, e3) {
            var r3 = 65535, n3 = +t3, i2 = +e3, o = r3 & n3, s = r3 & i2;
            return 0 | o * s + ((r3 & n3 >>> 16) * s + o * (r3 & i2 >>> 16) << 16 >>> 0);
          } });
        }, 63725: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { log10: function(t3) {
            return Math.log(t3) * Math.LOG10E;
          } });
        }, 7977: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { log1p: r2(19007) });
        }, 14192: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { log2: function(t3) {
            return Math.log(t3) / Math.LN2;
          } });
        }, 2940: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { sign: r2(84247) });
        }, 35731: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(77117), o = Math.exp;
          n2(n2.S + n2.F * r2(71240)(function() {
            return -2e-17 != !Math.sinh(-2e-17);
          }), "Math", { sinh: function(t3) {
            return Math.abs(t3 = +t3) < 1 ? (i(t3) - i(-t3)) / 2 : (o(t3 - 1) - o(-t3 - 1)) * (Math.E / 2);
          } });
        }, 79382: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(77117), o = Math.exp;
          n2(n2.S, "Math", { tanh: function(t3) {
            var e3 = i(t3 = +t3), r3 = i(-t3);
            return e3 == 1 / 0 ? 1 : r3 == 1 / 0 ? -1 : (e3 - r3) / (o(t3) + o(-t3));
          } });
        }, 38877: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Math", { trunc: function(t3) {
            return (t3 > 0 ? Math.floor : Math.ceil)(t3);
          } });
        }, 10348: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(56341), i = r2(41063), o = r2(89426), s = r2(94805), a = r2(9241), h = r2(71240), f = r2(14230).f, u = r2(57762).f, c = r2(83530).f, d = r2(97370).trim, l = "Number", p = n2.Number, g = p, y = p.prototype, m = o(r2(62545)(y)) == l, v = "trim" in String.prototype, b = function(t3) {
            var e3 = a(t3, false);
            if ("string" == typeof e3 && e3.length > 2) {
              var r3, n3, i2, o2 = (e3 = v ? e3.trim() : d(e3, 3)).charCodeAt(0);
              if (43 === o2 || 45 === o2) {
                if (88 === (r3 = e3.charCodeAt(2)) || 120 === r3)
                  return NaN;
              } else if (48 === o2) {
                switch (e3.charCodeAt(1)) {
                  case 66:
                  case 98:
                    n3 = 2, i2 = 49;
                    break;
                  case 79:
                  case 111:
                    n3 = 8, i2 = 55;
                    break;
                  default:
                    return +e3;
                }
                for (var s2, h2 = e3.slice(2), f2 = 0, u2 = h2.length; f2 < u2; f2++)
                  if ((s2 = h2.charCodeAt(f2)) < 48 || s2 > i2)
                    return NaN;
                return parseInt(h2, n3);
              }
            }
            return +e3;
          };
          if (!p(" 0o1") || !p("0b1") || p("+0x1")) {
            p = function(t3) {
              var e3 = arguments.length < 1 ? 0 : t3, r3 = this;
              return r3 instanceof p && (m ? h(function() {
                y.valueOf.call(r3);
              }) : o(r3) != l) ? s(new g(b(e3)), r3, p) : b(e3);
            };
            for (var w, _ = r2(51916) ? f(g) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), k = 0; _.length > k; k++)
              i(g, w = _[k]) && !i(p, w) && c(p, w, u(g, w));
            p.prototype = y, y.constructor = p, r2(1564)(n2, l, p);
          }
        }, 64007: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Number", { EPSILON: Math.pow(2, -52) });
        }, 87616: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(56341).isFinite;
          n2(n2.S, "Number", { isFinite: function(t3) {
            return "number" == typeof t3 && i(t3);
          } });
        }, 86762: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Number", { isInteger: r2(22289) });
        }, 43316: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Number", { isNaN: function(t3) {
            return t3 != t3;
          } });
        }, 93019: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(22289), o = Math.abs;
          n2(n2.S, "Number", { isSafeInteger: function(t3) {
            return i(t3) && o(t3) <= 9007199254740991;
          } });
        }, 40293: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Number", { MAX_SAFE_INTEGER: 9007199254740991 });
        }, 60640: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Number", { MIN_SAFE_INTEGER: -9007199254740991 });
        }, 96589: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(13765);
          n2(n2.S + n2.F * (Number.parseFloat != i), "Number", { parseFloat: i });
        }, 93210: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(80500);
          n2(n2.S + n2.F * (Number.parseInt != i), "Number", { parseInt: i });
        }, 71028: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(51549), o = r2(23373), s = r2(40005), a = 1 .toFixed, h = Math.floor, f = [0, 0, 0, 0, 0, 0], u = "Number.toFixed: incorrect invocation!", c = "0", d = function(t3, e3) {
            for (var r3 = -1, n3 = e3; ++r3 < 6; )
              n3 += t3 * f[r3], f[r3] = n3 % 1e7, n3 = h(n3 / 1e7);
          }, l = function(t3) {
            for (var e3 = 6, r3 = 0; --e3 >= 0; )
              r3 += f[e3], f[e3] = h(r3 / t3), r3 = r3 % t3 * 1e7;
          }, p = function() {
            for (var t3 = 6, e3 = ""; --t3 >= 0; )
              if ("" !== e3 || 0 === t3 || 0 !== f[t3]) {
                var r3 = String(f[t3]);
                e3 = "" === e3 ? r3 : e3 + s.call(c, 7 - r3.length) + r3;
              }
            return e3;
          }, g = function(t3, e3, r3) {
            return 0 === e3 ? r3 : e3 % 2 == 1 ? g(t3, e3 - 1, r3 * t3) : g(t3 * t3, e3 / 2, r3);
          };
          n2(n2.P + n2.F * (!!a && ("0.000" !== 8e-5 .toFixed(3) || "1" !== 0.9 .toFixed(0) || "1.25" !== 1.255 .toFixed(2) || "1000000000000000128" !== 1000000000000000100 .toFixed(0)) || !r2(71240)(function() {
            a.call({});
          })), "Number", { toFixed: function(t3) {
            var e3, r3, n3, a2, h2 = o(this, u), f2 = i(t3), y = "", m = c;
            if (f2 < 0 || f2 > 20)
              throw RangeError(u);
            if (h2 != h2)
              return "NaN";
            if (h2 <= -1e21 || h2 >= 1e21)
              return String(h2);
            if (h2 < 0 && (y = "-", h2 = -h2), h2 > 1e-21)
              if (e3 = function(t4) {
                for (var e4 = 0, r4 = t4; r4 >= 4096; )
                  e4 += 12, r4 /= 4096;
                for (; r4 >= 2; )
                  e4 += 1, r4 /= 2;
                return e4;
              }(h2 * g(2, 69, 1)) - 69, r3 = e3 < 0 ? h2 * g(2, -e3, 1) : h2 / g(2, e3, 1), r3 *= 4503599627370496, (e3 = 52 - e3) > 0) {
                for (d(0, r3), n3 = f2; n3 >= 7; )
                  d(1e7, 0), n3 -= 7;
                for (d(g(10, n3, 1), 0), n3 = e3 - 1; n3 >= 23; )
                  l(1 << 23), n3 -= 23;
                l(1 << n3), d(1, 1), l(2), m = p();
              } else
                d(0, r3), d(1 << -e3, 0), m = p() + s.call(c, f2);
            return f2 > 0 ? y + ((a2 = m.length) <= f2 ? "0." + s.call(c, f2 - a2) + m : m.slice(0, a2 - f2) + "." + m.slice(a2 - f2)) : y + m;
          } });
        }, 2610: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(71240), o = r2(23373), s = 1 .toPrecision;
          n2(n2.P + n2.F * (i(function() {
            return "1" !== s.call(1, void 0);
          }) || !i(function() {
            s.call({});
          })), "Number", { toPrecision: function(t3) {
            var e3 = o(this, "Number#toPrecision: incorrect invocation!");
            return void 0 === t3 ? s.call(e3) : s.call(e3, t3);
          } });
        }, 88325: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S + n2.F, "Object", { assign: r2(49821) });
        }, 57944: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Object", { create: r2(62545) });
        }, 10266: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S + n2.F * !r2(51916), "Object", { defineProperties: r2(30413) });
        }, 65388: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S + n2.F * !r2(51916), "Object", { defineProperty: r2(83530).f });
        }, 40192: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(82153).onFreeze;
          r2(81025)("freeze", function(t3) {
            return function(e3) {
              return t3 && n2(e3) ? t3(i(e3)) : e3;
            };
          });
        }, 57557: (t2, e2, r2) => {
          var n2 = r2(8500), i = r2(57762).f;
          r2(81025)("getOwnPropertyDescriptor", function() {
            return function(t3, e3) {
              return i(n2(t3), e3);
            };
          });
        }, 54943: (t2, e2, r2) => {
          r2(81025)("getOwnPropertyNames", function() {
            return r2(85009).f;
          });
        }, 63386: (t2, e2, r2) => {
          var n2 = r2(54200), i = r2(44408);
          r2(81025)("getPrototypeOf", function() {
            return function(t3) {
              return i(n2(t3));
            };
          });
        }, 4649: (t2, e2, r2) => {
          var n2 = r2(17481);
          r2(81025)("isExtensible", function(t3) {
            return function(e3) {
              return !!n2(e3) && (!t3 || t3(e3));
            };
          });
        }, 16736: (t2, e2, r2) => {
          var n2 = r2(17481);
          r2(81025)("isFrozen", function(t3) {
            return function(e3) {
              return !n2(e3) || !!t3 && t3(e3);
            };
          });
        }, 7260: (t2, e2, r2) => {
          var n2 = r2(17481);
          r2(81025)("isSealed", function(t3) {
            return function(e3) {
              return !n2(e3) || !!t3 && t3(e3);
            };
          });
        }, 52798: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Object", { is: r2(61541) });
        }, 30081: (t2, e2, r2) => {
          var n2 = r2(54200), i = r2(15825);
          r2(81025)("keys", function() {
            return function(t3) {
              return i(n2(t3));
            };
          });
        }, 17026: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(82153).onFreeze;
          r2(81025)("preventExtensions", function(t3) {
            return function(e3) {
              return t3 && n2(e3) ? t3(i(e3)) : e3;
            };
          });
        }, 24371: (t2, e2, r2) => {
          var n2 = r2(17481), i = r2(82153).onFreeze;
          r2(81025)("seal", function(t3) {
            return function(e3) {
              return t3 && n2(e3) ? t3(i(e3)) : e3;
            };
          });
        }, 86911: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Object", { setPrototypeOf: r2(87135).set });
        }, 84394: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(12845), i = {};
          i[r2(9739)("toStringTag")] = "z", i + "" != "[object z]" && r2(1564)(Object.prototype, "toString", function() {
            return "[object " + n2(this) + "]";
          }, true);
        }, 15072: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(13765);
          n2(n2.G + n2.F * (parseFloat != i), { parseFloat: i });
        }, 19315: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(80500);
          n2(n2.G + n2.F * (parseInt != i), { parseInt: i });
        }, 12813: (t2, e2, r2) => {
          "use strict";
          var n2, i, o, s, a = r2(35113), h = r2(56341), f = r2(82794), u = r2(12845), c = r2(35366), d = r2(17481), l = r2(23079), p = r2(30599), g = r2(62971), y = r2(59789), m = r2(7122).set, v = r2(37)(), b = r2(83285), w = r2(98332), _ = r2(83843), k = r2(38614), S = "Promise", A = h.TypeError, x = h.process, M = x && x.versions, E = M && M.v8 || "", B = h.Promise, I = "process" == u(x), P = function() {
          }, T = i = b.f, R = !!function() {
            try {
              var t3 = B.resolve(1), e3 = (t3.constructor = {})[r2(9739)("species")] = function(t4) {
                t4(P, P);
              };
              return (I || "function" == typeof PromiseRejectionEvent) && t3.then(P) instanceof e3 && 0 !== E.indexOf("6.6") && -1 === _.indexOf("Chrome/66");
            } catch (t4) {
            }
          }(), O = function(t3) {
            var e3;
            return !(!d(t3) || "function" != typeof (e3 = t3.then)) && e3;
          }, C = function(t3, e3) {
            if (!t3._n) {
              t3._n = true;
              var r3 = t3._c;
              v(function() {
                for (var n3 = t3._v, i2 = 1 == t3._s, o2 = 0, s2 = function(e4) {
                  var r4, o3, s3, a2 = i2 ? e4.ok : e4.fail, h2 = e4.resolve, f2 = e4.reject, u2 = e4.domain;
                  try {
                    a2 ? (i2 || (2 == t3._h && D(t3), t3._h = 1), true === a2 ? r4 = n3 : (u2 && u2.enter(), r4 = a2(n3), u2 && (u2.exit(), s3 = true)), r4 === e4.promise ? f2(A("Promise-chain cycle")) : (o3 = O(r4)) ? o3.call(r4, h2, f2) : h2(r4)) : f2(n3);
                  } catch (t4) {
                    u2 && !s3 && u2.exit(), f2(t4);
                  }
                }; r3.length > o2; )
                  s2(r3[o2++]);
                t3._c = [], t3._n = false, e3 && !t3._h && j(t3);
              });
            }
          }, j = function(t3) {
            m.call(h, function() {
              var e3, r3, n3, i2 = t3._v, o2 = N(t3);
              if (o2 && (e3 = w(function() {
                I ? x.emit("unhandledRejection", i2, t3) : (r3 = h.onunhandledrejection) ? r3({ promise: t3, reason: i2 }) : (n3 = h.console) && n3.error && n3.error("Unhandled promise rejection", i2);
              }), t3._h = I || N(t3) ? 2 : 1), t3._a = void 0, o2 && e3.e)
                throw e3.v;
            });
          }, N = function(t3) {
            return 1 !== t3._h && 0 === (t3._a || t3._c).length;
          }, D = function(t3) {
            m.call(h, function() {
              var e3;
              I ? x.emit("rejectionHandled", t3) : (e3 = h.onrejectionhandled) && e3({ promise: t3, reason: t3._v });
            });
          }, L = function(t3) {
            var e3 = this;
            e3._d || (e3._d = true, (e3 = e3._w || e3)._v = t3, e3._s = 2, e3._a || (e3._a = e3._c.slice()), C(e3, true));
          }, F = function(t3) {
            var e3, r3 = this;
            if (!r3._d) {
              r3._d = true, r3 = r3._w || r3;
              try {
                if (r3 === t3)
                  throw A("Promise can't be resolved itself");
                (e3 = O(t3)) ? v(function() {
                  var n3 = { _w: r3, _d: false };
                  try {
                    e3.call(t3, f(F, n3, 1), f(L, n3, 1));
                  } catch (t4) {
                    L.call(n3, t4);
                  }
                }) : (r3._v = t3, r3._s = 1, C(r3, false));
              } catch (t4) {
                L.call({ _w: r3, _d: false }, t4);
              }
            }
          };
          R || (B = function(t3) {
            p(this, B, S, "_h"), l(t3), n2.call(this);
            try {
              t3(f(F, this, 1), f(L, this, 1));
            } catch (t4) {
              L.call(this, t4);
            }
          }, (n2 = function(t3) {
            this._c = [], this._a = void 0, this._s = 0, this._d = false, this._v = void 0, this._h = 0, this._n = false;
          }).prototype = r2(24092)(B.prototype, { then: function(t3, e3) {
            var r3 = T(y(this, B));
            return r3.ok = "function" != typeof t3 || t3, r3.fail = "function" == typeof e3 && e3, r3.domain = I ? x.domain : void 0, this._c.push(r3), this._a && this._a.push(r3), this._s && C(this, false), r3.promise;
          }, catch: function(t3) {
            return this.then(void 0, t3);
          } }), o = function() {
            var t3 = new n2();
            this.promise = t3, this.resolve = f(F, t3, 1), this.reject = f(L, t3, 1);
          }, b.f = T = function(t3) {
            return t3 === B || t3 === s ? new o(t3) : i(t3);
          }), c(c.G + c.W + c.F * !R, { Promise: B }), r2(21309)(B, S), r2(75993)(S), s = r2(14411).Promise, c(c.S + c.F * !R, S, { reject: function(t3) {
            var e3 = T(this);
            return (0, e3.reject)(t3), e3.promise;
          } }), c(c.S + c.F * (a || !R), S, { resolve: function(t3) {
            return k(a && this === s ? B : this, t3);
          } }), c(c.S + c.F * !(R && r2(61461)(function(t3) {
            B.all(t3).catch(P);
          })), S, { all: function(t3) {
            var e3 = this, r3 = T(e3), n3 = r3.resolve, i2 = r3.reject, o2 = w(function() {
              var r4 = [], o3 = 0, s2 = 1;
              g(t3, false, function(t4) {
                var a2 = o3++, h2 = false;
                r4.push(void 0), s2++, e3.resolve(t4).then(function(t5) {
                  h2 || (h2 = true, r4[a2] = t5, --s2 || n3(r4));
                }, i2);
              }), --s2 || n3(r4);
            });
            return o2.e && i2(o2.v), r3.promise;
          }, race: function(t3) {
            var e3 = this, r3 = T(e3), n3 = r3.reject, i2 = w(function() {
              g(t3, false, function(t4) {
                e3.resolve(t4).then(r3.resolve, n3);
              });
            });
            return i2.e && n3(i2.v), r3.promise;
          } });
        }, 69310: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(23079), o = r2(59719), s = (r2(56341).Reflect || {}).apply, a = Function.apply;
          n2(n2.S + n2.F * !r2(71240)(function() {
            s(function() {
            });
          }), "Reflect", { apply: function(t3, e3, r3) {
            var n3 = i(t3), h = o(r3);
            return s ? s(n3, e3, h) : a.call(n3, e3, h);
          } });
        }, 66722: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(62545), o = r2(23079), s = r2(59719), a = r2(17481), h = r2(71240), f = r2(46966), u = (r2(56341).Reflect || {}).construct, c = h(function() {
            function t3() {
            }
            return !(u(function() {
            }, [], t3) instanceof t3);
          }), d = !h(function() {
            u(function() {
            });
          });
          n2(n2.S + n2.F * (c || d), "Reflect", { construct: function(t3, e3) {
            o(t3), s(e3);
            var r3 = arguments.length < 3 ? t3 : o(arguments[2]);
            if (d && !c)
              return u(t3, e3, r3);
            if (t3 == r3) {
              switch (e3.length) {
                case 0:
                  return new t3();
                case 1:
                  return new t3(e3[0]);
                case 2:
                  return new t3(e3[0], e3[1]);
                case 3:
                  return new t3(e3[0], e3[1], e3[2]);
                case 4:
                  return new t3(e3[0], e3[1], e3[2], e3[3]);
              }
              var n3 = [null];
              return n3.push.apply(n3, e3), new (f.apply(t3, n3))();
            }
            var h2 = r3.prototype, l = i(a(h2) ? h2 : Object.prototype), p = Function.apply.call(t3, l, e3);
            return a(p) ? p : l;
          } });
        }, 18372: (t2, e2, r2) => {
          var n2 = r2(83530), i = r2(35366), o = r2(59719), s = r2(9241);
          i(i.S + i.F * r2(71240)(function() {
            Reflect.defineProperty(n2.f({}, 1, { value: 1 }), 1, { value: 2 });
          }), "Reflect", { defineProperty: function(t3, e3, r3) {
            o(t3), e3 = s(e3, true), o(r3);
            try {
              return n2.f(t3, e3, r3), true;
            } catch (t4) {
              return false;
            }
          } });
        }, 14604: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(57762).f, o = r2(59719);
          n2(n2.S, "Reflect", { deleteProperty: function(t3, e3) {
            var r3 = i(o(t3), e3);
            return !(r3 && !r3.configurable) && delete t3[e3];
          } });
        }, 84781: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(59719), o = function(t3) {
            this._t = i(t3), this._i = 0;
            var e3, r3 = this._k = [];
            for (e3 in t3)
              r3.push(e3);
          };
          r2(47938)(o, "Object", function() {
            var t3, e3 = this, r3 = e3._k;
            do {
              if (e3._i >= r3.length)
                return { value: void 0, done: true };
            } while (!((t3 = r3[e3._i++]) in e3._t));
            return { value: t3, done: false };
          }), n2(n2.S, "Reflect", { enumerate: function(t3) {
            return new o(t3);
          } });
        }, 24395: (t2, e2, r2) => {
          var n2 = r2(57762), i = r2(35366), o = r2(59719);
          i(i.S, "Reflect", { getOwnPropertyDescriptor: function(t3, e3) {
            return n2.f(o(t3), e3);
          } });
        }, 49649: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(44408), o = r2(59719);
          n2(n2.S, "Reflect", { getPrototypeOf: function(t3) {
            return i(o(t3));
          } });
        }, 38416: (t2, e2, r2) => {
          var n2 = r2(57762), i = r2(44408), o = r2(41063), s = r2(35366), a = r2(17481), h = r2(59719);
          s(s.S, "Reflect", { get: function t3(e3, r3) {
            var s2, f, u = arguments.length < 3 ? e3 : arguments[2];
            return h(e3) === u ? e3[r3] : (s2 = n2.f(e3, r3)) ? o(s2, "value") ? s2.value : void 0 !== s2.get ? s2.get.call(u) : void 0 : a(f = i(e3)) ? t3(f, r3, u) : void 0;
          } });
        }, 32475: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Reflect", { has: function(t3, e3) {
            return e3 in t3;
          } });
        }, 12924: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(59719), o = Object.isExtensible;
          n2(n2.S, "Reflect", { isExtensible: function(t3) {
            return i(t3), !o || o(t3);
          } });
        }, 16337: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.S, "Reflect", { ownKeys: r2(17285) });
        }, 83286: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(59719), o = Object.preventExtensions;
          n2(n2.S, "Reflect", { preventExtensions: function(t3) {
            i(t3);
            try {
              return o && o(t3), true;
            } catch (t4) {
              return false;
            }
          } });
        }, 68766: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(87135);
          i && n2(n2.S, "Reflect", { setPrototypeOf: function(t3, e3) {
            i.check(t3, e3);
            try {
              return i.set(t3, e3), true;
            } catch (t4) {
              return false;
            }
          } });
        }, 47225: (t2, e2, r2) => {
          var n2 = r2(83530), i = r2(57762), o = r2(44408), s = r2(41063), a = r2(35366), h = r2(21761), f = r2(59719), u = r2(17481);
          a(a.S, "Reflect", { set: function t3(e3, r3, a2) {
            var c, d, l = arguments.length < 4 ? e3 : arguments[3], p = i.f(f(e3), r3);
            if (!p) {
              if (u(d = o(e3)))
                return t3(d, r3, a2, l);
              p = h(0);
            }
            if (s(p, "value")) {
              if (false === p.writable || !u(l))
                return false;
              if (c = i.f(l, r3)) {
                if (c.get || c.set || false === c.writable)
                  return false;
                c.value = a2, n2.f(l, r3, c);
              } else
                n2.f(l, r3, h(0, a2));
              return true;
            }
            return void 0 !== p.set && (p.set.call(l, a2), true);
          } });
        }, 87080: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(94805), o = r2(83530).f, s = r2(14230).f, a = r2(89543), h = r2(6439), f = n2.RegExp, u = f, c = f.prototype, d = /a/g, l = /a/g, p = new f(d) !== d;
          if (r2(51916) && (!p || r2(71240)(function() {
            return l[r2(9739)("match")] = false, f(d) != d || f(l) == l || "/a/i" != f(d, "i");
          }))) {
            f = function(t3, e3) {
              var r3 = this instanceof f, n3 = a(t3), o2 = void 0 === e3;
              return !r3 && n3 && t3.constructor === f && o2 ? t3 : i(p ? new u(n3 && !o2 ? t3.source : t3, e3) : u((n3 = t3 instanceof f) ? t3.source : t3, n3 && o2 ? h.call(t3) : e3), r3 ? this : c, f);
            };
            for (var g = function(t3) {
              t3 in f || o(f, t3, { configurable: true, get: function() {
                return u[t3];
              }, set: function(e3) {
                u[t3] = e3;
              } });
            }, y = s(u), m = 0; y.length > m; )
              g(y[m++]);
            c.constructor = f, f.prototype = c, r2(1564)(n2, "RegExp", f);
          }
          r2(75993)("RegExp");
        }, 58615: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(18868);
          r2(35366)({ target: "RegExp", proto: true, forced: n2 !== /./.exec }, { exec: n2 });
        }, 39544: (t2, e2, r2) => {
          r2(51916) && "g" != /./g.flags && r2(83530).f(RegExp.prototype, "flags", { configurable: true, get: r2(6439) });
        }, 45475: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(59719), i = r2(61838), o = r2(9959), s = r2(29073);
          r2(25307)("match", 1, function(t3, e3, r3, a) {
            return [function(r4) {
              var n3 = t3(this), i2 = null == r4 ? void 0 : r4[e3];
              return void 0 !== i2 ? i2.call(r4, n3) : new RegExp(r4)[e3](String(n3));
            }, function(t4) {
              var e4 = a(r3, t4, this);
              if (e4.done)
                return e4.value;
              var h = n2(t4), f = String(this);
              if (!h.global)
                return s(h, f);
              var u = h.unicode;
              h.lastIndex = 0;
              for (var c, d = [], l = 0; null !== (c = s(h, f)); ) {
                var p = String(c[0]);
                d[l] = p, "" === p && (h.lastIndex = o(f, i(h.lastIndex), u)), l++;
              }
              return 0 === l ? null : d;
            }];
          });
        }, 33770: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(59719), i = r2(54200), o = r2(61838), s = r2(51549), a = r2(9959), h = r2(29073), f = Math.max, u = Math.min, c = Math.floor, d = /\$([$&`']|\d\d?|<[^>]*>)/g, l = /\$([$&`']|\d\d?)/g;
          r2(25307)("replace", 2, function(t3, e3, r3, p) {
            return [function(n3, i2) {
              var o2 = t3(this), s2 = null == n3 ? void 0 : n3[e3];
              return void 0 !== s2 ? s2.call(n3, o2, i2) : r3.call(String(o2), n3, i2);
            }, function(t4, e4) {
              var i2 = p(r3, t4, this, e4);
              if (i2.done)
                return i2.value;
              var c2 = n2(t4), d2 = String(this), l2 = "function" == typeof e4;
              l2 || (e4 = String(e4));
              var y = c2.global;
              if (y) {
                var m = c2.unicode;
                c2.lastIndex = 0;
              }
              for (var v = []; ; ) {
                var b = h(c2, d2);
                if (null === b)
                  break;
                if (v.push(b), !y)
                  break;
                "" === String(b[0]) && (c2.lastIndex = a(d2, o(c2.lastIndex), m));
              }
              for (var w, _ = "", k = 0, S = 0; S < v.length; S++) {
                b = v[S];
                for (var A = String(b[0]), x = f(u(s(b.index), d2.length), 0), M = [], E = 1; E < b.length; E++)
                  M.push(void 0 === (w = b[E]) ? w : String(w));
                var B = b.groups;
                if (l2) {
                  var I = [A].concat(M, x, d2);
                  void 0 !== B && I.push(B);
                  var P = String(e4.apply(void 0, I));
                } else
                  P = g(A, d2, x, M, B, e4);
                x >= k && (_ += d2.slice(k, x) + P, k = x + A.length);
              }
              return _ + d2.slice(k);
            }];
            function g(t4, e4, n3, o2, s2, a2) {
              var h2 = n3 + t4.length, f2 = o2.length, u2 = l;
              return void 0 !== s2 && (s2 = i(s2), u2 = d), r3.call(a2, u2, function(r4, i2) {
                var a3;
                switch (i2.charAt(0)) {
                  case "$":
                    return "$";
                  case "&":
                    return t4;
                  case "`":
                    return e4.slice(0, n3);
                  case "'":
                    return e4.slice(h2);
                  case "<":
                    a3 = s2[i2.slice(1, -1)];
                    break;
                  default:
                    var u3 = +i2;
                    if (0 === u3)
                      return r4;
                    if (u3 > f2) {
                      var d2 = c(u3 / 10);
                      return 0 === d2 ? r4 : d2 <= f2 ? void 0 === o2[d2 - 1] ? i2.charAt(1) : o2[d2 - 1] + i2.charAt(1) : r4;
                    }
                    a3 = o2[u3 - 1];
                }
                return void 0 === a3 ? "" : a3;
              });
            }
          });
        }, 5201: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(59719), i = r2(61541), o = r2(29073);
          r2(25307)("search", 1, function(t3, e3, r3, s) {
            return [function(r4) {
              var n3 = t3(this), i2 = null == r4 ? void 0 : r4[e3];
              return void 0 !== i2 ? i2.call(r4, n3) : new RegExp(r4)[e3](String(n3));
            }, function(t4) {
              var e4 = s(r3, t4, this);
              if (e4.done)
                return e4.value;
              var a = n2(t4), h = String(this), f = a.lastIndex;
              i(f, 0) || (a.lastIndex = 0);
              var u = o(a, h);
              return i(a.lastIndex, f) || (a.lastIndex = f), null === u ? -1 : u.index;
            }];
          });
        }, 61385: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(89543), i = r2(59719), o = r2(59789), s = r2(9959), a = r2(61838), h = r2(29073), f = r2(18868), u = r2(71240), c = Math.min, d = [].push, l = 4294967295, p = !u(function() {
            RegExp(l, "y");
          });
          r2(25307)("split", 2, function(t3, e3, r3, u2) {
            var g;
            return g = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(t4, e4) {
              var i2 = String(this);
              if (void 0 === t4 && 0 === e4)
                return [];
              if (!n2(t4))
                return r3.call(i2, t4, e4);
              for (var o2, s2, a2, h2 = [], u3 = (t4.ignoreCase ? "i" : "") + (t4.multiline ? "m" : "") + (t4.unicode ? "u" : "") + (t4.sticky ? "y" : ""), c2 = 0, p2 = void 0 === e4 ? l : e4 >>> 0, g2 = new RegExp(t4.source, u3 + "g"); (o2 = f.call(g2, i2)) && !((s2 = g2.lastIndex) > c2 && (h2.push(i2.slice(c2, o2.index)), o2.length > 1 && o2.index < i2.length && d.apply(h2, o2.slice(1)), a2 = o2[0].length, c2 = s2, h2.length >= p2)); )
                g2.lastIndex === o2.index && g2.lastIndex++;
              return c2 === i2.length ? !a2 && g2.test("") || h2.push("") : h2.push(i2.slice(c2)), h2.length > p2 ? h2.slice(0, p2) : h2;
            } : "0".split(void 0, 0).length ? function(t4, e4) {
              return void 0 === t4 && 0 === e4 ? [] : r3.call(this, t4, e4);
            } : r3, [function(r4, n3) {
              var i2 = t3(this), o2 = null == r4 ? void 0 : r4[e3];
              return void 0 !== o2 ? o2.call(r4, i2, n3) : g.call(String(i2), r4, n3);
            }, function(t4, e4) {
              var n3 = u2(g, t4, this, e4, g !== r3);
              if (n3.done)
                return n3.value;
              var f2 = i(t4), d2 = String(this), y = o(f2, RegExp), m = f2.unicode, v = (f2.ignoreCase ? "i" : "") + (f2.multiline ? "m" : "") + (f2.unicode ? "u" : "") + (p ? "y" : "g"), b = new y(p ? f2 : "^(?:" + f2.source + ")", v), w = void 0 === e4 ? l : e4 >>> 0;
              if (0 === w)
                return [];
              if (0 === d2.length)
                return null === h(b, d2) ? [d2] : [];
              for (var _ = 0, k = 0, S = []; k < d2.length; ) {
                b.lastIndex = p ? k : 0;
                var A, x = h(b, p ? d2 : d2.slice(k));
                if (null === x || (A = c(a(b.lastIndex + (p ? 0 : k)), d2.length)) === _)
                  k = s(d2, k, m);
                else {
                  if (S.push(d2.slice(_, k)), S.length === w)
                    return S;
                  for (var M = 1; M <= x.length - 1; M++)
                    if (S.push(x[M]), S.length === w)
                      return S;
                  k = _ = A;
                }
              }
              return S.push(d2.slice(_)), S;
            }];
          });
        }, 35244: (t2, e2, r2) => {
          "use strict";
          r2(39544);
          var n2 = r2(59719), i = r2(6439), o = r2(51916), s = "toString", a = /./.toString, h = function(t3) {
            r2(1564)(RegExp.prototype, s, t3, true);
          };
          r2(71240)(function() {
            return "/a/b" != a.call({ source: "a", flags: "b" });
          }) ? h(function() {
            var t3 = n2(this);
            return "/".concat(t3.source, "/", "flags" in t3 ? t3.flags : !o && t3 instanceof RegExp ? i.call(t3) : void 0);
          }) : a.name != s && h(function() {
            return a.call(this);
          });
        }, 98253: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(95144), i = r2(91603);
          t2.exports = r2(58091)("Set", function(t3) {
            return function() {
              return t3(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { add: function(t3) {
            return n2.def(i(this, "Set"), t3 = 0 === t3 ? 0 : t3, t3);
          } }, n2);
        }, 50447: (t2, e2, r2) => {
          "use strict";
          r2(79048)("anchor", function(t3) {
            return function(e3) {
              return t3(this, "a", "name", e3);
            };
          });
        }, 65624: (t2, e2, r2) => {
          "use strict";
          r2(79048)("big", function(t3) {
            return function() {
              return t3(this, "big", "", "");
            };
          });
        }, 51263: (t2, e2, r2) => {
          "use strict";
          r2(79048)("blink", function(t3) {
            return function() {
              return t3(this, "blink", "", "");
            };
          });
        }, 65193: (t2, e2, r2) => {
          "use strict";
          r2(79048)("bold", function(t3) {
            return function() {
              return t3(this, "b", "", "");
            };
          });
        }, 82858: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(7384)(false);
          n2(n2.P, "String", { codePointAt: function(t3) {
            return i(this, t3);
          } });
        }, 22058: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(61838), o = r2(83256), s = "endsWith", a = "".endsWith;
          n2(n2.P + n2.F * r2(46881)(s), "String", { endsWith: function(t3) {
            var e3 = o(this, t3, s), r3 = arguments.length > 1 ? arguments[1] : void 0, n3 = i(e3.length), h = void 0 === r3 ? n3 : Math.min(i(r3), n3), f = String(t3);
            return a ? a.call(e3, f, h) : e3.slice(h - f.length, h) === f;
          } });
        }, 28241: (t2, e2, r2) => {
          "use strict";
          r2(79048)("fixed", function(t3) {
            return function() {
              return t3(this, "tt", "", "");
            };
          });
        }, 96723: (t2, e2, r2) => {
          "use strict";
          r2(79048)("fontcolor", function(t3) {
            return function(e3) {
              return t3(this, "font", "color", e3);
            };
          });
        }, 9394: (t2, e2, r2) => {
          "use strict";
          r2(79048)("fontsize", function(t3) {
            return function(e3) {
              return t3(this, "font", "size", e3);
            };
          });
        }, 22539: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(15044), o = String.fromCharCode, s = String.fromCodePoint;
          n2(n2.S + n2.F * (!!s && 1 != s.length), "String", { fromCodePoint: function(t3) {
            for (var e3, r3 = [], n3 = arguments.length, s2 = 0; n3 > s2; ) {
              if (e3 = +arguments[s2++], i(e3, 1114111) !== e3)
                throw RangeError(e3 + " is not a valid code point");
              r3.push(e3 < 65536 ? o(e3) : o(55296 + ((e3 -= 65536) >> 10), e3 % 1024 + 56320));
            }
            return r3.join("");
          } });
        }, 95472: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(83256), o = "includes";
          n2(n2.P + n2.F * r2(46881)(o), "String", { includes: function(t3) {
            return !!~i(this, t3, o).indexOf(t3, arguments.length > 1 ? arguments[1] : void 0);
          } });
        }, 66938: (t2, e2, r2) => {
          "use strict";
          r2(79048)("italics", function(t3) {
            return function() {
              return t3(this, "i", "", "");
            };
          });
        }, 74333: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(7384)(true);
          r2(19121)(String, "String", function(t3) {
            this._t = String(t3), this._i = 0;
          }, function() {
            var t3, e3 = this._t, r3 = this._i;
            return r3 >= e3.length ? { value: void 0, done: true } : (t3 = n2(e3, r3), this._i += t3.length, { value: t3, done: false });
          });
        }, 11961: (t2, e2, r2) => {
          "use strict";
          r2(79048)("link", function(t3) {
            return function(e3) {
              return t3(this, "a", "href", e3);
            };
          });
        }, 39820: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(8500), o = r2(61838);
          n2(n2.S, "String", { raw: function(t3) {
            for (var e3 = i(t3.raw), r3 = o(e3.length), n3 = arguments.length, s = [], a = 0; r3 > a; )
              s.push(String(e3[a++])), a < n3 && s.push(String(arguments[a]));
            return s.join("");
          } });
        }, 57001: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.P, "String", { repeat: r2(40005) });
        }, 69659: (t2, e2, r2) => {
          "use strict";
          r2(79048)("small", function(t3) {
            return function() {
              return t3(this, "small", "", "");
            };
          });
        }, 57492: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(61838), o = r2(83256), s = "startsWith", a = "".startsWith;
          n2(n2.P + n2.F * r2(46881)(s), "String", { startsWith: function(t3) {
            var e3 = o(this, t3, s), r3 = i(Math.min(arguments.length > 1 ? arguments[1] : void 0, e3.length)), n3 = String(t3);
            return a ? a.call(e3, n3, r3) : e3.slice(r3, r3 + n3.length) === n3;
          } });
        }, 23354: (t2, e2, r2) => {
          "use strict";
          r2(79048)("strike", function(t3) {
            return function() {
              return t3(this, "strike", "", "");
            };
          });
        }, 99620: (t2, e2, r2) => {
          "use strict";
          r2(79048)("sub", function(t3) {
            return function() {
              return t3(this, "sub", "", "");
            };
          });
        }, 638: (t2, e2, r2) => {
          "use strict";
          r2(79048)("sup", function(t3) {
            return function() {
              return t3(this, "sup", "", "");
            };
          });
        }, 28417: (t2, e2, r2) => {
          "use strict";
          r2(97370)("trim", function(t3) {
            return function() {
              return t3(this, 3);
            };
          });
        }, 98997: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(56341), i = r2(41063), o = r2(51916), s = r2(35366), a = r2(1564), h = r2(82153).KEY, f = r2(71240), u = r2(97355), c = r2(21309), d = r2(90430), l = r2(9739), p = r2(38833), g = r2(48155), y = r2(4535), m = r2(40689), v = r2(59719), b = r2(17481), w = r2(54200), _ = r2(8500), k = r2(9241), S = r2(21761), A = r2(62545), x = r2(85009), M = r2(57762), E = r2(32520), B = r2(83530), I = r2(15825), P = M.f, T = B.f, R = x.f, O = n2.Symbol, C = n2.JSON, j = C && C.stringify, N = l("_hidden"), D = l("toPrimitive"), L = {}.propertyIsEnumerable, F = u("symbol-registry"), q = u("symbols"), U = u("op-symbols"), V = Object.prototype, z = "function" == typeof O && !!E.f, H = n2.QObject, K = !H || !H.prototype || !H.prototype.findChild, W = o && f(function() {
            return 7 != A(T({}, "a", { get: function() {
              return T(this, "a", { value: 7 }).a;
            } })).a;
          }) ? function(t3, e3, r3) {
            var n3 = P(V, e3);
            n3 && delete V[e3], T(t3, e3, r3), n3 && t3 !== V && T(V, e3, n3);
          } : T, G = function(t3) {
            var e3 = q[t3] = A(O.prototype);
            return e3._k = t3, e3;
          }, Y = z && "symbol" == typeof O.iterator ? function(t3) {
            return "symbol" == typeof t3;
          } : function(t3) {
            return t3 instanceof O;
          }, J = function(t3, e3, r3) {
            return t3 === V && J(U, e3, r3), v(t3), e3 = k(e3, true), v(r3), i(q, e3) ? (r3.enumerable ? (i(t3, N) && t3[N][e3] && (t3[N][e3] = false), r3 = A(r3, { enumerable: S(0, false) })) : (i(t3, N) || T(t3, N, S(1, {})), t3[N][e3] = true), W(t3, e3, r3)) : T(t3, e3, r3);
          }, X = function(t3, e3) {
            v(t3);
            for (var r3, n3 = y(e3 = _(e3)), i2 = 0, o2 = n3.length; o2 > i2; )
              J(t3, r3 = n3[i2++], e3[r3]);
            return t3;
          }, Z = function(t3) {
            var e3 = L.call(this, t3 = k(t3, true));
            return !(this === V && i(q, t3) && !i(U, t3)) && (!(e3 || !i(this, t3) || !i(q, t3) || i(this, N) && this[N][t3]) || e3);
          }, $ = function(t3, e3) {
            if (t3 = _(t3), e3 = k(e3, true), t3 !== V || !i(q, e3) || i(U, e3)) {
              var r3 = P(t3, e3);
              return !r3 || !i(q, e3) || i(t3, N) && t3[N][e3] || (r3.enumerable = true), r3;
            }
          }, Q = function(t3) {
            for (var e3, r3 = R(_(t3)), n3 = [], o2 = 0; r3.length > o2; )
              i(q, e3 = r3[o2++]) || e3 == N || e3 == h || n3.push(e3);
            return n3;
          }, tt = function(t3) {
            for (var e3, r3 = t3 === V, n3 = R(r3 ? U : _(t3)), o2 = [], s2 = 0; n3.length > s2; )
              !i(q, e3 = n3[s2++]) || r3 && !i(V, e3) || o2.push(q[e3]);
            return o2;
          };
          z || (O = function() {
            if (this instanceof O)
              throw TypeError("Symbol is not a constructor!");
            var t3 = d(arguments.length > 0 ? arguments[0] : void 0), e3 = function(r3) {
              this === V && e3.call(U, r3), i(this, N) && i(this[N], t3) && (this[N][t3] = false), W(this, t3, S(1, r3));
            };
            return o && K && W(V, t3, { configurable: true, set: e3 }), G(t3);
          }, a(O.prototype, "toString", function() {
            return this._k;
          }), M.f = $, B.f = J, r2(14230).f = x.f = Q, r2(41144).f = Z, E.f = tt, o && !r2(35113) && a(V, "propertyIsEnumerable", Z, true), p.f = function(t3) {
            return G(l(t3));
          }), s(s.G + s.W + s.F * !z, { Symbol: O });
          for (var et = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), rt = 0; et.length > rt; )
            l(et[rt++]);
          for (var nt = I(l.store), it = 0; nt.length > it; )
            g(nt[it++]);
          s(s.S + s.F * !z, "Symbol", { for: function(t3) {
            return i(F, t3 += "") ? F[t3] : F[t3] = O(t3);
          }, keyFor: function(t3) {
            if (!Y(t3))
              throw TypeError(t3 + " is not a symbol!");
            for (var e3 in F)
              if (F[e3] === t3)
                return e3;
          }, useSetter: function() {
            K = true;
          }, useSimple: function() {
            K = false;
          } }), s(s.S + s.F * !z, "Object", { create: function(t3, e3) {
            return void 0 === e3 ? A(t3) : X(A(t3), e3);
          }, defineProperty: J, defineProperties: X, getOwnPropertyDescriptor: $, getOwnPropertyNames: Q, getOwnPropertySymbols: tt });
          var ot = f(function() {
            E.f(1);
          });
          s(s.S + s.F * ot, "Object", { getOwnPropertySymbols: function(t3) {
            return E.f(w(t3));
          } }), C && s(s.S + s.F * (!z || f(function() {
            var t3 = O();
            return "[null]" != j([t3]) || "{}" != j({ a: t3 }) || "{}" != j(Object(t3));
          })), "JSON", { stringify: function(t3) {
            for (var e3, r3, n3 = [t3], i2 = 1; arguments.length > i2; )
              n3.push(arguments[i2++]);
            if (r3 = e3 = n3[1], (b(e3) || void 0 !== t3) && !Y(t3))
              return m(e3) || (e3 = function(t4, e4) {
                if ("function" == typeof r3 && (e4 = r3.call(this, t4, e4)), !Y(e4))
                  return e4;
              }), n3[1] = e3, j.apply(C, n3);
          } }), O.prototype[D] || r2(98442)(O.prototype, D, O.prototype.valueOf), c(O, "Symbol"), c(Math, "Math", true), c(n2.JSON, "JSON", true);
        }, 63315: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(67728), o = r2(29895), s = r2(59719), a = r2(15044), h = r2(61838), f = r2(17481), u = r2(56341).ArrayBuffer, c = r2(59789), d = o.ArrayBuffer, l = o.DataView, p = i.ABV && u.isView, g = d.prototype.slice, y = i.VIEW, m = "ArrayBuffer";
          n2(n2.G + n2.W + n2.F * (u !== d), { ArrayBuffer: d }), n2(n2.S + n2.F * !i.CONSTR, m, { isView: function(t3) {
            return p && p(t3) || f(t3) && y in t3;
          } }), n2(n2.P + n2.U + n2.F * r2(71240)(function() {
            return !new d(2).slice(1, void 0).byteLength;
          }), m, { slice: function(t3, e3) {
            if (void 0 !== g && void 0 === e3)
              return g.call(s(this), t3);
            for (var r3 = s(this).byteLength, n3 = a(t3, r3), i2 = a(void 0 === e3 ? r3 : e3, r3), o2 = new (c(this, d))(h(i2 - n3)), f2 = new l(this), u2 = new l(o2), p2 = 0; n3 < i2; )
              u2.setUint8(p2++, f2.getUint8(n3++));
            return o2;
          } }), r2(75993)(m);
        }, 12920: (t2, e2, r2) => {
          var n2 = r2(35366);
          n2(n2.G + n2.W + n2.F * !r2(67728).ABV, { DataView: r2(29895).DataView });
        }, 30951: (t2, e2, r2) => {
          r2(58754)("Float32", 4, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 10029: (t2, e2, r2) => {
          r2(58754)("Float64", 8, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 76935: (t2, e2, r2) => {
          r2(58754)("Int16", 2, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 56403: (t2, e2, r2) => {
          r2(58754)("Int32", 4, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 95443: (t2, e2, r2) => {
          r2(58754)("Int8", 1, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 17846: (t2, e2, r2) => {
          r2(58754)("Uint16", 2, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 51200: (t2, e2, r2) => {
          r2(58754)("Uint32", 4, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 69815: (t2, e2, r2) => {
          r2(58754)("Uint8", 1, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          });
        }, 43771: (t2, e2, r2) => {
          r2(58754)("Uint8", 1, function(t3) {
            return function(e3, r3, n2) {
              return t3(this, e3, r3, n2);
            };
          }, true);
        }, 57391: (t2, e2, r2) => {
          "use strict";
          var n2, i = r2(56341), o = r2(66934)(0), s = r2(1564), a = r2(82153), h = r2(49821), f = r2(33503), u = r2(17481), c = r2(91603), d = r2(91603), l = !i.ActiveXObject && "ActiveXObject" in i, p = "WeakMap", g = a.getWeak, y = Object.isExtensible, m = f.ufstore, v = function(t3) {
            return function() {
              return t3(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, b = { get: function(t3) {
            if (u(t3)) {
              var e3 = g(t3);
              return true === e3 ? m(c(this, p)).get(t3) : e3 ? e3[this._i] : void 0;
            }
          }, set: function(t3, e3) {
            return f.def(c(this, p), t3, e3);
          } }, w = t2.exports = r2(58091)(p, v, b, f, true, true);
          d && l && (h((n2 = f.getConstructor(v, p)).prototype, b), a.NEED = true, o(["delete", "has", "get", "set"], function(t3) {
            var e3 = w.prototype, r3 = e3[t3];
            s(e3, t3, function(e4, i2) {
              if (u(e4) && !y(e4)) {
                this._f || (this._f = new n2());
                var o2 = this._f[t3](e4, i2);
                return "set" == t3 ? this : o2;
              }
              return r3.call(this, e4, i2);
            });
          }));
        }, 33307: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(33503), i = r2(91603), o = "WeakSet";
          r2(58091)(o, function(t3) {
            return function() {
              return t3(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { add: function(t3) {
            return n2.def(i(this, o), t3, true);
          } }, n2, false, true);
        }, 98125: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(3885), o = r2(54200), s = r2(61838), a = r2(23079), h = r2(44087);
          n2(n2.P, "Array", { flatMap: function(t3) {
            var e3, r3, n3 = o(this);
            return a(t3), e3 = s(n3.length), r3 = h(n3, 0), i(r3, n3, n3, e3, 0, 1, t3, arguments[1]), r3;
          } }), r2(12802)("flatMap");
        }, 49348: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(61545)(true);
          n2(n2.P, "Array", { includes: function(t3) {
            return i(this, t3, arguments.length > 1 ? arguments[1] : void 0);
          } }), r2(12802)("includes");
        }, 1768: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(15346)(true);
          n2(n2.S, "Object", { entries: function(t3) {
            return i(t3);
          } });
        }, 59223: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(17285), o = r2(8500), s = r2(57762), a = r2(51676);
          n2(n2.S, "Object", { getOwnPropertyDescriptors: function(t3) {
            for (var e3, r3, n3 = o(t3), h = s.f, f = i(n3), u = {}, c = 0; f.length > c; )
              void 0 !== (r3 = h(n3, e3 = f[c++])) && a(u, e3, r3);
            return u;
          } });
        }, 67442: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(15346)(false);
          n2(n2.S, "Object", { values: function(t3) {
            return i(t3);
          } });
        }, 14936: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(14411), o = r2(56341), s = r2(59789), a = r2(38614);
          n2(n2.P + n2.R, "Promise", { finally: function(t3) {
            var e3 = s(this, i.Promise || o.Promise), r3 = "function" == typeof t3;
            return this.then(r3 ? function(r4) {
              return a(e3, t3()).then(function() {
                return r4;
              });
            } : t3, r3 ? function(r4) {
              return a(e3, t3()).then(function() {
                throw r4;
              });
            } : t3);
          } });
        }, 20239: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(9823), o = r2(83843), s = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
          n2(n2.P + n2.F * s, "String", { padEnd: function(t3) {
            return i(this, t3, arguments.length > 1 ? arguments[1] : void 0, false);
          } });
        }, 28755: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35366), i = r2(9823), o = r2(83843), s = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(o);
          n2(n2.P + n2.F * s, "String", { padStart: function(t3) {
            return i(this, t3, arguments.length > 1 ? arguments[1] : void 0, true);
          } });
        }, 53412: (t2, e2, r2) => {
          "use strict";
          r2(97370)("trimLeft", function(t3) {
            return function() {
              return t3(this, 1);
            };
          }, "trimStart");
        }, 66948: (t2, e2, r2) => {
          "use strict";
          r2(97370)("trimRight", function(t3) {
            return function() {
              return t3(this, 2);
            };
          }, "trimEnd");
        }, 78284: (t2, e2, r2) => {
          r2(48155)("asyncIterator");
        }, 78745: (t2, e2, r2) => {
          for (var n2 = r2(71308), i = r2(15825), o = r2(1564), s = r2(56341), a = r2(98442), h = r2(4919), f = r2(9739), u = f("iterator"), c = f("toStringTag"), d = h.Array, l = { CSSRuleList: true, CSSStyleDeclaration: false, CSSValueList: false, ClientRectList: false, DOMRectList: false, DOMStringList: false, DOMTokenList: true, DataTransferItemList: false, FileList: false, HTMLAllCollection: false, HTMLCollection: false, HTMLFormElement: false, HTMLSelectElement: false, MediaList: true, MimeTypeArray: false, NamedNodeMap: false, NodeList: true, PaintRequestList: false, Plugin: false, PluginArray: false, SVGLengthList: false, SVGNumberList: false, SVGPathSegList: false, SVGPointList: false, SVGStringList: false, SVGTransformList: false, SourceBufferList: false, StyleSheetList: true, TextTrackCueList: false, TextTrackList: false, TouchList: false }, p = i(l), g = 0; g < p.length; g++) {
            var y, m = p[g], v = l[m], b = s[m], w = b && b.prototype;
            if (w && (w[u] || a(w, u, d), w[c] || a(w, c, m), h[m] = d, v))
              for (y in n2)
                w[y] || o(w, y, n2[y], true);
          }
        }, 60025: (t2, e2, r2) => {
          var n2 = r2(35366), i = r2(7122);
          n2(n2.G + n2.B, { setImmediate: i.set, clearImmediate: i.clear });
        }, 51629: (t2, e2, r2) => {
          var n2 = r2(56341), i = r2(35366), o = r2(83843), s = [].slice, a = /MSIE .\./.test(o), h = function(t3) {
            return function(e3, r3) {
              var n3 = arguments.length > 2, i2 = !!n3 && s.call(arguments, 2);
              return t3(n3 ? function() {
                ("function" == typeof e3 ? e3 : Function(e3)).apply(this, i2);
              } : e3, r3);
            };
          };
          i(i.G + i.B + i.F * a, { setTimeout: h(n2.setTimeout), setInterval: h(n2.setInterval) });
        }, 1523: (t2, e2, r2) => {
          r2(51629), r2(60025), r2(78745), t2.exports = r2(14411);
        }, 52928: (t2) => {
          var e2 = function(t3) {
            "use strict";
            var e3, r2 = Object.prototype, n2 = r2.hasOwnProperty, i = "function" == typeof Symbol ? Symbol : {}, o = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", a = i.toStringTag || "@@toStringTag";
            function h(t4, e4, r3, n3) {
              var i2 = e4 && e4.prototype instanceof g ? e4 : g, o2 = Object.create(i2.prototype), s2 = new E(n3 || []);
              return o2._invoke = function(t5, e5, r4) {
                var n4 = u;
                return function(i3, o3) {
                  if (n4 === d)
                    throw new Error("Generator is already running");
                  if (n4 === l) {
                    if ("throw" === i3)
                      throw o3;
                    return I();
                  }
                  for (r4.method = i3, r4.arg = o3; ; ) {
                    var s3 = r4.delegate;
                    if (s3) {
                      var a2 = A(s3, r4);
                      if (a2) {
                        if (a2 === p)
                          continue;
                        return a2;
                      }
                    }
                    if ("next" === r4.method)
                      r4.sent = r4._sent = r4.arg;
                    else if ("throw" === r4.method) {
                      if (n4 === u)
                        throw n4 = l, r4.arg;
                      r4.dispatchException(r4.arg);
                    } else
                      "return" === r4.method && r4.abrupt("return", r4.arg);
                    n4 = d;
                    var h2 = f(t5, e5, r4);
                    if ("normal" === h2.type) {
                      if (n4 = r4.done ? l : c, h2.arg === p)
                        continue;
                      return { value: h2.arg, done: r4.done };
                    }
                    "throw" === h2.type && (n4 = l, r4.method = "throw", r4.arg = h2.arg);
                  }
                };
              }(t4, r3, s2), o2;
            }
            function f(t4, e4, r3) {
              try {
                return { type: "normal", arg: t4.call(e4, r3) };
              } catch (t5) {
                return { type: "throw", arg: t5 };
              }
            }
            t3.wrap = h;
            var u = "suspendedStart", c = "suspendedYield", d = "executing", l = "completed", p = {};
            function g() {
            }
            function y() {
            }
            function m() {
            }
            var v = {};
            v[o] = function() {
              return this;
            };
            var b = Object.getPrototypeOf, w = b && b(b(B([])));
            w && w !== r2 && n2.call(w, o) && (v = w);
            var _ = m.prototype = g.prototype = Object.create(v);
            function k(t4) {
              ["next", "throw", "return"].forEach(function(e4) {
                t4[e4] = function(t5) {
                  return this._invoke(e4, t5);
                };
              });
            }
            function S(t4, e4) {
              function r3(i3, o2, s2, a2) {
                var h2 = f(t4[i3], t4, o2);
                if ("throw" !== h2.type) {
                  var u2 = h2.arg, c2 = u2.value;
                  return c2 && "object" == typeof c2 && n2.call(c2, "__await") ? e4.resolve(c2.__await).then(function(t5) {
                    r3("next", t5, s2, a2);
                  }, function(t5) {
                    r3("throw", t5, s2, a2);
                  }) : e4.resolve(c2).then(function(t5) {
                    u2.value = t5, s2(u2);
                  }, function(t5) {
                    return r3("throw", t5, s2, a2);
                  });
                }
                a2(h2.arg);
              }
              var i2;
              this._invoke = function(t5, n3) {
                function o2() {
                  return new e4(function(e5, i3) {
                    r3(t5, n3, e5, i3);
                  });
                }
                return i2 = i2 ? i2.then(o2, o2) : o2();
              };
            }
            function A(t4, r3) {
              var n3 = t4.iterator[r3.method];
              if (n3 === e3) {
                if (r3.delegate = null, "throw" === r3.method) {
                  if (t4.iterator.return && (r3.method = "return", r3.arg = e3, A(t4, r3), "throw" === r3.method))
                    return p;
                  r3.method = "throw", r3.arg = new TypeError("The iterator does not provide a 'throw' method");
                }
                return p;
              }
              var i2 = f(n3, t4.iterator, r3.arg);
              if ("throw" === i2.type)
                return r3.method = "throw", r3.arg = i2.arg, r3.delegate = null, p;
              var o2 = i2.arg;
              return o2 ? o2.done ? (r3[t4.resultName] = o2.value, r3.next = t4.nextLoc, "return" !== r3.method && (r3.method = "next", r3.arg = e3), r3.delegate = null, p) : o2 : (r3.method = "throw", r3.arg = new TypeError("iterator result is not an object"), r3.delegate = null, p);
            }
            function x(t4) {
              var e4 = { tryLoc: t4[0] };
              1 in t4 && (e4.catchLoc = t4[1]), 2 in t4 && (e4.finallyLoc = t4[2], e4.afterLoc = t4[3]), this.tryEntries.push(e4);
            }
            function M(t4) {
              var e4 = t4.completion || {};
              e4.type = "normal", delete e4.arg, t4.completion = e4;
            }
            function E(t4) {
              this.tryEntries = [{ tryLoc: "root" }], t4.forEach(x, this), this.reset(true);
            }
            function B(t4) {
              if (t4) {
                var r3 = t4[o];
                if (r3)
                  return r3.call(t4);
                if ("function" == typeof t4.next)
                  return t4;
                if (!isNaN(t4.length)) {
                  var i2 = -1, s2 = function r4() {
                    for (; ++i2 < t4.length; )
                      if (n2.call(t4, i2))
                        return r4.value = t4[i2], r4.done = false, r4;
                    return r4.value = e3, r4.done = true, r4;
                  };
                  return s2.next = s2;
                }
              }
              return { next: I };
            }
            function I() {
              return { value: e3, done: true };
            }
            return y.prototype = _.constructor = m, m.constructor = y, m[a] = y.displayName = "GeneratorFunction", t3.isGeneratorFunction = function(t4) {
              var e4 = "function" == typeof t4 && t4.constructor;
              return !!e4 && (e4 === y || "GeneratorFunction" === (e4.displayName || e4.name));
            }, t3.mark = function(t4) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(t4, m) : (t4.__proto__ = m, a in t4 || (t4[a] = "GeneratorFunction")), t4.prototype = Object.create(_), t4;
            }, t3.awrap = function(t4) {
              return { __await: t4 };
            }, k(S.prototype), S.prototype[s] = function() {
              return this;
            }, t3.AsyncIterator = S, t3.async = function(e4, r3, n3, i2, o2) {
              void 0 === o2 && (o2 = Promise);
              var s2 = new S(h(e4, r3, n3, i2), o2);
              return t3.isGeneratorFunction(r3) ? s2 : s2.next().then(function(t4) {
                return t4.done ? t4.value : s2.next();
              });
            }, k(_), _[a] = "Generator", _[o] = function() {
              return this;
            }, _.toString = function() {
              return "[object Generator]";
            }, t3.keys = function(t4) {
              var e4 = [];
              for (var r3 in t4)
                e4.push(r3);
              return e4.reverse(), function r4() {
                for (; e4.length; ) {
                  var n3 = e4.pop();
                  if (n3 in t4)
                    return r4.value = n3, r4.done = false, r4;
                }
                return r4.done = true, r4;
              };
            }, t3.values = B, E.prototype = { constructor: E, reset: function(t4) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = e3, this.done = false, this.delegate = null, this.method = "next", this.arg = e3, this.tryEntries.forEach(M), !t4)
                for (var r3 in this)
                  "t" === r3.charAt(0) && n2.call(this, r3) && !isNaN(+r3.slice(1)) && (this[r3] = e3);
            }, stop: function() {
              this.done = true;
              var t4 = this.tryEntries[0].completion;
              if ("throw" === t4.type)
                throw t4.arg;
              return this.rval;
            }, dispatchException: function(t4) {
              if (this.done)
                throw t4;
              var r3 = this;
              function i2(n3, i3) {
                return a2.type = "throw", a2.arg = t4, r3.next = n3, i3 && (r3.method = "next", r3.arg = e3), !!i3;
              }
              for (var o2 = this.tryEntries.length - 1; o2 >= 0; --o2) {
                var s2 = this.tryEntries[o2], a2 = s2.completion;
                if ("root" === s2.tryLoc)
                  return i2("end");
                if (s2.tryLoc <= this.prev) {
                  var h2 = n2.call(s2, "catchLoc"), f2 = n2.call(s2, "finallyLoc");
                  if (h2 && f2) {
                    if (this.prev < s2.catchLoc)
                      return i2(s2.catchLoc, true);
                    if (this.prev < s2.finallyLoc)
                      return i2(s2.finallyLoc);
                  } else if (h2) {
                    if (this.prev < s2.catchLoc)
                      return i2(s2.catchLoc, true);
                  } else {
                    if (!f2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < s2.finallyLoc)
                      return i2(s2.finallyLoc);
                  }
                }
              }
            }, abrupt: function(t4, e4) {
              for (var r3 = this.tryEntries.length - 1; r3 >= 0; --r3) {
                var i2 = this.tryEntries[r3];
                if (i2.tryLoc <= this.prev && n2.call(i2, "finallyLoc") && this.prev < i2.finallyLoc) {
                  var o2 = i2;
                  break;
                }
              }
              o2 && ("break" === t4 || "continue" === t4) && o2.tryLoc <= e4 && e4 <= o2.finallyLoc && (o2 = null);
              var s2 = o2 ? o2.completion : {};
              return s2.type = t4, s2.arg = e4, o2 ? (this.method = "next", this.next = o2.finallyLoc, p) : this.complete(s2);
            }, complete: function(t4, e4) {
              if ("throw" === t4.type)
                throw t4.arg;
              return "break" === t4.type || "continue" === t4.type ? this.next = t4.arg : "return" === t4.type ? (this.rval = this.arg = t4.arg, this.method = "return", this.next = "end") : "normal" === t4.type && e4 && (this.next = e4), p;
            }, finish: function(t4) {
              for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
                var r3 = this.tryEntries[e4];
                if (r3.finallyLoc === t4)
                  return this.complete(r3.completion, r3.afterLoc), M(r3), p;
              }
            }, catch: function(t4) {
              for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
                var r3 = this.tryEntries[e4];
                if (r3.tryLoc === t4) {
                  var n3 = r3.completion;
                  if ("throw" === n3.type) {
                    var i2 = n3.arg;
                    M(r3);
                  }
                  return i2;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(t4, r3, n3) {
              return this.delegate = { iterator: B(t4), resultName: r3, nextLoc: n3 }, "next" === this.method && (this.arg = e3), p;
            } }, t3;
          }(t2.exports);
          try {
            regeneratorRuntime = e2;
          } catch (t3) {
            Function("r", "regeneratorRuntime = r")(e2);
          }
        }, 43812: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2 = r2(58355), i = r2(91673), o = r2(2498);
          e2.getMasterKeyFromSeed = function(t3) {
            var e3 = n2("sha512", "ed25519 blake2b seed").update(Buffer.from(t3, "hex")).digest();
            return { key: e3.slice(0, 32), chainCode: e3.slice(32) };
          }, e2.getPublicKey = function(t3) {
            var e3 = i.sign.keyPair.fromSeed(t3), r3 = e3.secretKey;
            return { publicKey: e3.publicKey, privateKey: r3 };
          }, e2.isValidPath = function(t3) {
            return !!o.pathRegex.test(t3) && !t3.split("/").slice(1).map(o.replaceDerive).some(isNaN);
          }, e2.derivePath = function(t3, r3) {
            if (!e2.isValidPath(t3))
              throw new Error("Invalid derivation path");
            var i2 = e2.getMasterKeyFromSeed(r3), s = i2.key, a = i2.chainCode;
            return t3.split("/").slice(1).map(o.replaceDerive).map(function(t4) {
              return parseInt(t4, 10);
            }).reduce(function(t4, e3) {
              return function(t5, e4) {
                var r4 = t5.key, i3 = t5.chainCode, o2 = Buffer.allocUnsafe(4);
                o2.writeUInt32BE(e4, 0);
                var s2 = Buffer.concat([Buffer.alloc(1, 0), r4, o2]), a2 = n2("sha512", i3).update(s2).digest();
                return { key: a2.slice(0, 32), chainCode: a2.slice(32) };
              }(t4, e3 + 2147483648);
            }, { key: s, chainCode: a });
          };
        }, 2498: (t2, e2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.pathRegex = new RegExp("^m(\\/[0-9]+')+$"), e2.replaceDerive = function(t3) {
            return t3.replace("'", "");
          };
        }, 91673: (t2, e2, r2) => {
          var n2 = r2(63535);
          !function(t3) {
            "use strict";
            var e3 = function(t4) {
              var e4, r3 = new Float64Array(16);
              if (t4)
                for (e4 = 0; e4 < t4.length; e4++)
                  r3[e4] = t4[e4];
              return r3;
            }, i = function() {
              throw new Error("no PRNG");
            }, o = new Uint8Array(16), s = new Uint8Array(32);
            s[0] = 9;
            var a = e3(), h = e3([1]), f = e3([56129, 1]), u = e3([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), c = e3([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), d = e3([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), l = e3([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), p = e3([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
            function g(t4, e4, r3, n3, i2) {
              var o2, s2 = 0;
              for (o2 = 0; o2 < i2; o2++)
                s2 |= t4[e4 + o2] ^ r3[n3 + o2];
              return (1 & s2 - 1 >>> 8) - 1;
            }
            function y(t4, e4, r3, n3) {
              return g(t4, e4, r3, n3, 16);
            }
            function m(t4, e4, r3, n3) {
              return g(t4, e4, r3, n3, 32);
            }
            function v(t4, e4, r3, n3) {
              !function(t5, e5, r4, n4) {
                for (var i2, o2 = 255 & n4[0] | (255 & n4[1]) << 8 | (255 & n4[2]) << 16 | (255 & n4[3]) << 24, s2 = 255 & r4[0] | (255 & r4[1]) << 8 | (255 & r4[2]) << 16 | (255 & r4[3]) << 24, a2 = 255 & r4[4] | (255 & r4[5]) << 8 | (255 & r4[6]) << 16 | (255 & r4[7]) << 24, h2 = 255 & r4[8] | (255 & r4[9]) << 8 | (255 & r4[10]) << 16 | (255 & r4[11]) << 24, f2 = 255 & r4[12] | (255 & r4[13]) << 8 | (255 & r4[14]) << 16 | (255 & r4[15]) << 24, u2 = 255 & n4[4] | (255 & n4[5]) << 8 | (255 & n4[6]) << 16 | (255 & n4[7]) << 24, c2 = 255 & e5[0] | (255 & e5[1]) << 8 | (255 & e5[2]) << 16 | (255 & e5[3]) << 24, d2 = 255 & e5[4] | (255 & e5[5]) << 8 | (255 & e5[6]) << 16 | (255 & e5[7]) << 24, l2 = 255 & e5[8] | (255 & e5[9]) << 8 | (255 & e5[10]) << 16 | (255 & e5[11]) << 24, p2 = 255 & e5[12] | (255 & e5[13]) << 8 | (255 & e5[14]) << 16 | (255 & e5[15]) << 24, g2 = 255 & n4[8] | (255 & n4[9]) << 8 | (255 & n4[10]) << 16 | (255 & n4[11]) << 24, y2 = 255 & r4[16] | (255 & r4[17]) << 8 | (255 & r4[18]) << 16 | (255 & r4[19]) << 24, m2 = 255 & r4[20] | (255 & r4[21]) << 8 | (255 & r4[22]) << 16 | (255 & r4[23]) << 24, v2 = 255 & r4[24] | (255 & r4[25]) << 8 | (255 & r4[26]) << 16 | (255 & r4[27]) << 24, b2 = 255 & r4[28] | (255 & r4[29]) << 8 | (255 & r4[30]) << 16 | (255 & r4[31]) << 24, w2 = 255 & n4[12] | (255 & n4[13]) << 8 | (255 & n4[14]) << 16 | (255 & n4[15]) << 24, _2 = o2, k2 = s2, S2 = a2, A2 = h2, x2 = f2, M2 = u2, E2 = c2, B2 = d2, I2 = l2, P2 = p2, T2 = g2, R2 = y2, O2 = m2, C2 = v2, j2 = b2, N2 = w2, D2 = 0; D2 < 20; D2 += 2)
                  _2 ^= (i2 = (O2 ^= (i2 = (I2 ^= (i2 = (x2 ^= (i2 = _2 + O2 | 0) << 7 | i2 >>> 25) + _2 | 0) << 9 | i2 >>> 23) + x2 | 0) << 13 | i2 >>> 19) + I2 | 0) << 18 | i2 >>> 14, M2 ^= (i2 = (k2 ^= (i2 = (C2 ^= (i2 = (P2 ^= (i2 = M2 + k2 | 0) << 7 | i2 >>> 25) + M2 | 0) << 9 | i2 >>> 23) + P2 | 0) << 13 | i2 >>> 19) + C2 | 0) << 18 | i2 >>> 14, T2 ^= (i2 = (E2 ^= (i2 = (S2 ^= (i2 = (j2 ^= (i2 = T2 + E2 | 0) << 7 | i2 >>> 25) + T2 | 0) << 9 | i2 >>> 23) + j2 | 0) << 13 | i2 >>> 19) + S2 | 0) << 18 | i2 >>> 14, N2 ^= (i2 = (R2 ^= (i2 = (B2 ^= (i2 = (A2 ^= (i2 = N2 + R2 | 0) << 7 | i2 >>> 25) + N2 | 0) << 9 | i2 >>> 23) + A2 | 0) << 13 | i2 >>> 19) + B2 | 0) << 18 | i2 >>> 14, _2 ^= (i2 = (A2 ^= (i2 = (S2 ^= (i2 = (k2 ^= (i2 = _2 + A2 | 0) << 7 | i2 >>> 25) + _2 | 0) << 9 | i2 >>> 23) + k2 | 0) << 13 | i2 >>> 19) + S2 | 0) << 18 | i2 >>> 14, M2 ^= (i2 = (x2 ^= (i2 = (B2 ^= (i2 = (E2 ^= (i2 = M2 + x2 | 0) << 7 | i2 >>> 25) + M2 | 0) << 9 | i2 >>> 23) + E2 | 0) << 13 | i2 >>> 19) + B2 | 0) << 18 | i2 >>> 14, T2 ^= (i2 = (P2 ^= (i2 = (I2 ^= (i2 = (R2 ^= (i2 = T2 + P2 | 0) << 7 | i2 >>> 25) + T2 | 0) << 9 | i2 >>> 23) + R2 | 0) << 13 | i2 >>> 19) + I2 | 0) << 18 | i2 >>> 14, N2 ^= (i2 = (j2 ^= (i2 = (C2 ^= (i2 = (O2 ^= (i2 = N2 + j2 | 0) << 7 | i2 >>> 25) + N2 | 0) << 9 | i2 >>> 23) + O2 | 0) << 13 | i2 >>> 19) + C2 | 0) << 18 | i2 >>> 14;
                _2 = _2 + o2 | 0, k2 = k2 + s2 | 0, S2 = S2 + a2 | 0, A2 = A2 + h2 | 0, x2 = x2 + f2 | 0, M2 = M2 + u2 | 0, E2 = E2 + c2 | 0, B2 = B2 + d2 | 0, I2 = I2 + l2 | 0, P2 = P2 + p2 | 0, T2 = T2 + g2 | 0, R2 = R2 + y2 | 0, O2 = O2 + m2 | 0, C2 = C2 + v2 | 0, j2 = j2 + b2 | 0, N2 = N2 + w2 | 0, t5[0] = _2 >>> 0 & 255, t5[1] = _2 >>> 8 & 255, t5[2] = _2 >>> 16 & 255, t5[3] = _2 >>> 24 & 255, t5[4] = k2 >>> 0 & 255, t5[5] = k2 >>> 8 & 255, t5[6] = k2 >>> 16 & 255, t5[7] = k2 >>> 24 & 255, t5[8] = S2 >>> 0 & 255, t5[9] = S2 >>> 8 & 255, t5[10] = S2 >>> 16 & 255, t5[11] = S2 >>> 24 & 255, t5[12] = A2 >>> 0 & 255, t5[13] = A2 >>> 8 & 255, t5[14] = A2 >>> 16 & 255, t5[15] = A2 >>> 24 & 255, t5[16] = x2 >>> 0 & 255, t5[17] = x2 >>> 8 & 255, t5[18] = x2 >>> 16 & 255, t5[19] = x2 >>> 24 & 255, t5[20] = M2 >>> 0 & 255, t5[21] = M2 >>> 8 & 255, t5[22] = M2 >>> 16 & 255, t5[23] = M2 >>> 24 & 255, t5[24] = E2 >>> 0 & 255, t5[25] = E2 >>> 8 & 255, t5[26] = E2 >>> 16 & 255, t5[27] = E2 >>> 24 & 255, t5[28] = B2 >>> 0 & 255, t5[29] = B2 >>> 8 & 255, t5[30] = B2 >>> 16 & 255, t5[31] = B2 >>> 24 & 255, t5[32] = I2 >>> 0 & 255, t5[33] = I2 >>> 8 & 255, t5[34] = I2 >>> 16 & 255, t5[35] = I2 >>> 24 & 255, t5[36] = P2 >>> 0 & 255, t5[37] = P2 >>> 8 & 255, t5[38] = P2 >>> 16 & 255, t5[39] = P2 >>> 24 & 255, t5[40] = T2 >>> 0 & 255, t5[41] = T2 >>> 8 & 255, t5[42] = T2 >>> 16 & 255, t5[43] = T2 >>> 24 & 255, t5[44] = R2 >>> 0 & 255, t5[45] = R2 >>> 8 & 255, t5[46] = R2 >>> 16 & 255, t5[47] = R2 >>> 24 & 255, t5[48] = O2 >>> 0 & 255, t5[49] = O2 >>> 8 & 255, t5[50] = O2 >>> 16 & 255, t5[51] = O2 >>> 24 & 255, t5[52] = C2 >>> 0 & 255, t5[53] = C2 >>> 8 & 255, t5[54] = C2 >>> 16 & 255, t5[55] = C2 >>> 24 & 255, t5[56] = j2 >>> 0 & 255, t5[57] = j2 >>> 8 & 255, t5[58] = j2 >>> 16 & 255, t5[59] = j2 >>> 24 & 255, t5[60] = N2 >>> 0 & 255, t5[61] = N2 >>> 8 & 255, t5[62] = N2 >>> 16 & 255, t5[63] = N2 >>> 24 & 255;
              }(t4, e4, r3, n3);
            }
            function b(t4, e4, r3, n3) {
              !function(t5, e5, r4, n4) {
                for (var i2, o2 = 255 & n4[0] | (255 & n4[1]) << 8 | (255 & n4[2]) << 16 | (255 & n4[3]) << 24, s2 = 255 & r4[0] | (255 & r4[1]) << 8 | (255 & r4[2]) << 16 | (255 & r4[3]) << 24, a2 = 255 & r4[4] | (255 & r4[5]) << 8 | (255 & r4[6]) << 16 | (255 & r4[7]) << 24, h2 = 255 & r4[8] | (255 & r4[9]) << 8 | (255 & r4[10]) << 16 | (255 & r4[11]) << 24, f2 = 255 & r4[12] | (255 & r4[13]) << 8 | (255 & r4[14]) << 16 | (255 & r4[15]) << 24, u2 = 255 & n4[4] | (255 & n4[5]) << 8 | (255 & n4[6]) << 16 | (255 & n4[7]) << 24, c2 = 255 & e5[0] | (255 & e5[1]) << 8 | (255 & e5[2]) << 16 | (255 & e5[3]) << 24, d2 = 255 & e5[4] | (255 & e5[5]) << 8 | (255 & e5[6]) << 16 | (255 & e5[7]) << 24, l2 = 255 & e5[8] | (255 & e5[9]) << 8 | (255 & e5[10]) << 16 | (255 & e5[11]) << 24, p2 = 255 & e5[12] | (255 & e5[13]) << 8 | (255 & e5[14]) << 16 | (255 & e5[15]) << 24, g2 = 255 & n4[8] | (255 & n4[9]) << 8 | (255 & n4[10]) << 16 | (255 & n4[11]) << 24, y2 = 255 & r4[16] | (255 & r4[17]) << 8 | (255 & r4[18]) << 16 | (255 & r4[19]) << 24, m2 = 255 & r4[20] | (255 & r4[21]) << 8 | (255 & r4[22]) << 16 | (255 & r4[23]) << 24, v2 = 255 & r4[24] | (255 & r4[25]) << 8 | (255 & r4[26]) << 16 | (255 & r4[27]) << 24, b2 = 255 & r4[28] | (255 & r4[29]) << 8 | (255 & r4[30]) << 16 | (255 & r4[31]) << 24, w2 = 255 & n4[12] | (255 & n4[13]) << 8 | (255 & n4[14]) << 16 | (255 & n4[15]) << 24, _2 = 0; _2 < 20; _2 += 2)
                  o2 ^= (i2 = (m2 ^= (i2 = (l2 ^= (i2 = (f2 ^= (i2 = o2 + m2 | 0) << 7 | i2 >>> 25) + o2 | 0) << 9 | i2 >>> 23) + f2 | 0) << 13 | i2 >>> 19) + l2 | 0) << 18 | i2 >>> 14, u2 ^= (i2 = (s2 ^= (i2 = (v2 ^= (i2 = (p2 ^= (i2 = u2 + s2 | 0) << 7 | i2 >>> 25) + u2 | 0) << 9 | i2 >>> 23) + p2 | 0) << 13 | i2 >>> 19) + v2 | 0) << 18 | i2 >>> 14, g2 ^= (i2 = (c2 ^= (i2 = (a2 ^= (i2 = (b2 ^= (i2 = g2 + c2 | 0) << 7 | i2 >>> 25) + g2 | 0) << 9 | i2 >>> 23) + b2 | 0) << 13 | i2 >>> 19) + a2 | 0) << 18 | i2 >>> 14, w2 ^= (i2 = (y2 ^= (i2 = (d2 ^= (i2 = (h2 ^= (i2 = w2 + y2 | 0) << 7 | i2 >>> 25) + w2 | 0) << 9 | i2 >>> 23) + h2 | 0) << 13 | i2 >>> 19) + d2 | 0) << 18 | i2 >>> 14, o2 ^= (i2 = (h2 ^= (i2 = (a2 ^= (i2 = (s2 ^= (i2 = o2 + h2 | 0) << 7 | i2 >>> 25) + o2 | 0) << 9 | i2 >>> 23) + s2 | 0) << 13 | i2 >>> 19) + a2 | 0) << 18 | i2 >>> 14, u2 ^= (i2 = (f2 ^= (i2 = (d2 ^= (i2 = (c2 ^= (i2 = u2 + f2 | 0) << 7 | i2 >>> 25) + u2 | 0) << 9 | i2 >>> 23) + c2 | 0) << 13 | i2 >>> 19) + d2 | 0) << 18 | i2 >>> 14, g2 ^= (i2 = (p2 ^= (i2 = (l2 ^= (i2 = (y2 ^= (i2 = g2 + p2 | 0) << 7 | i2 >>> 25) + g2 | 0) << 9 | i2 >>> 23) + y2 | 0) << 13 | i2 >>> 19) + l2 | 0) << 18 | i2 >>> 14, w2 ^= (i2 = (b2 ^= (i2 = (v2 ^= (i2 = (m2 ^= (i2 = w2 + b2 | 0) << 7 | i2 >>> 25) + w2 | 0) << 9 | i2 >>> 23) + m2 | 0) << 13 | i2 >>> 19) + v2 | 0) << 18 | i2 >>> 14;
                t5[0] = o2 >>> 0 & 255, t5[1] = o2 >>> 8 & 255, t5[2] = o2 >>> 16 & 255, t5[3] = o2 >>> 24 & 255, t5[4] = u2 >>> 0 & 255, t5[5] = u2 >>> 8 & 255, t5[6] = u2 >>> 16 & 255, t5[7] = u2 >>> 24 & 255, t5[8] = g2 >>> 0 & 255, t5[9] = g2 >>> 8 & 255, t5[10] = g2 >>> 16 & 255, t5[11] = g2 >>> 24 & 255, t5[12] = w2 >>> 0 & 255, t5[13] = w2 >>> 8 & 255, t5[14] = w2 >>> 16 & 255, t5[15] = w2 >>> 24 & 255, t5[16] = c2 >>> 0 & 255, t5[17] = c2 >>> 8 & 255, t5[18] = c2 >>> 16 & 255, t5[19] = c2 >>> 24 & 255, t5[20] = d2 >>> 0 & 255, t5[21] = d2 >>> 8 & 255, t5[22] = d2 >>> 16 & 255, t5[23] = d2 >>> 24 & 255, t5[24] = l2 >>> 0 & 255, t5[25] = l2 >>> 8 & 255, t5[26] = l2 >>> 16 & 255, t5[27] = l2 >>> 24 & 255, t5[28] = p2 >>> 0 & 255, t5[29] = p2 >>> 8 & 255, t5[30] = p2 >>> 16 & 255, t5[31] = p2 >>> 24 & 255;
              }(t4, e4, r3, n3);
            }
            var w = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            function _(t4, e4, r3, n3, i2, o2, s2) {
              var a2, h2, f2 = new Uint8Array(16), u2 = new Uint8Array(64);
              for (h2 = 0; h2 < 16; h2++)
                f2[h2] = 0;
              for (h2 = 0; h2 < 8; h2++)
                f2[h2] = o2[h2];
              for (; i2 >= 64; ) {
                for (v(u2, f2, s2, w), h2 = 0; h2 < 64; h2++)
                  t4[e4 + h2] = r3[n3 + h2] ^ u2[h2];
                for (a2 = 1, h2 = 8; h2 < 16; h2++)
                  a2 = a2 + (255 & f2[h2]) | 0, f2[h2] = 255 & a2, a2 >>>= 8;
                i2 -= 64, e4 += 64, n3 += 64;
              }
              if (i2 > 0)
                for (v(u2, f2, s2, w), h2 = 0; h2 < i2; h2++)
                  t4[e4 + h2] = r3[n3 + h2] ^ u2[h2];
              return 0;
            }
            function k(t4, e4, r3, n3, i2) {
              var o2, s2, a2 = new Uint8Array(16), h2 = new Uint8Array(64);
              for (s2 = 0; s2 < 16; s2++)
                a2[s2] = 0;
              for (s2 = 0; s2 < 8; s2++)
                a2[s2] = n3[s2];
              for (; r3 >= 64; ) {
                for (v(h2, a2, i2, w), s2 = 0; s2 < 64; s2++)
                  t4[e4 + s2] = h2[s2];
                for (o2 = 1, s2 = 8; s2 < 16; s2++)
                  o2 = o2 + (255 & a2[s2]) | 0, a2[s2] = 255 & o2, o2 >>>= 8;
                r3 -= 64, e4 += 64;
              }
              if (r3 > 0)
                for (v(h2, a2, i2, w), s2 = 0; s2 < r3; s2++)
                  t4[e4 + s2] = h2[s2];
              return 0;
            }
            function S(t4, e4, r3, n3, i2) {
              var o2 = new Uint8Array(32);
              b(o2, n3, i2, w);
              for (var s2 = new Uint8Array(8), a2 = 0; a2 < 8; a2++)
                s2[a2] = n3[a2 + 16];
              return k(t4, e4, r3, s2, o2);
            }
            function A(t4, e4, r3, n3, i2, o2, s2) {
              var a2 = new Uint8Array(32);
              b(a2, o2, s2, w);
              for (var h2 = new Uint8Array(8), f2 = 0; f2 < 8; f2++)
                h2[f2] = o2[f2 + 16];
              return _(t4, e4, r3, n3, i2, h2, a2);
            }
            var x = function(t4) {
              var e4, r3, n3, i2, o2, s2, a2, h2;
              this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0, e4 = 255 & t4[0] | (255 & t4[1]) << 8, this.r[0] = 8191 & e4, r3 = 255 & t4[2] | (255 & t4[3]) << 8, this.r[1] = 8191 & (e4 >>> 13 | r3 << 3), n3 = 255 & t4[4] | (255 & t4[5]) << 8, this.r[2] = 7939 & (r3 >>> 10 | n3 << 6), i2 = 255 & t4[6] | (255 & t4[7]) << 8, this.r[3] = 8191 & (n3 >>> 7 | i2 << 9), o2 = 255 & t4[8] | (255 & t4[9]) << 8, this.r[4] = 255 & (i2 >>> 4 | o2 << 12), this.r[5] = o2 >>> 1 & 8190, s2 = 255 & t4[10] | (255 & t4[11]) << 8, this.r[6] = 8191 & (o2 >>> 14 | s2 << 2), a2 = 255 & t4[12] | (255 & t4[13]) << 8, this.r[7] = 8065 & (s2 >>> 11 | a2 << 5), h2 = 255 & t4[14] | (255 & t4[15]) << 8, this.r[8] = 8191 & (a2 >>> 8 | h2 << 8), this.r[9] = h2 >>> 5 & 127, this.pad[0] = 255 & t4[16] | (255 & t4[17]) << 8, this.pad[1] = 255 & t4[18] | (255 & t4[19]) << 8, this.pad[2] = 255 & t4[20] | (255 & t4[21]) << 8, this.pad[3] = 255 & t4[22] | (255 & t4[23]) << 8, this.pad[4] = 255 & t4[24] | (255 & t4[25]) << 8, this.pad[5] = 255 & t4[26] | (255 & t4[27]) << 8, this.pad[6] = 255 & t4[28] | (255 & t4[29]) << 8, this.pad[7] = 255 & t4[30] | (255 & t4[31]) << 8;
            };
            function M(t4, e4, r3, n3, i2, o2) {
              var s2 = new x(o2);
              return s2.update(r3, n3, i2), s2.finish(t4, e4), 0;
            }
            function E(t4, e4, r3, n3, i2, o2) {
              var s2 = new Uint8Array(16);
              return M(s2, 0, r3, n3, i2, o2), y(t4, e4, s2, 0);
            }
            function B(t4, e4, r3, n3, i2) {
              var o2;
              if (r3 < 32)
                return -1;
              for (A(t4, 0, e4, 0, r3, n3, i2), M(t4, 16, t4, 32, r3 - 32, t4), o2 = 0; o2 < 16; o2++)
                t4[o2] = 0;
              return 0;
            }
            function I(t4, e4, r3, n3, i2) {
              var o2, s2 = new Uint8Array(32);
              if (r3 < 32)
                return -1;
              if (S(s2, 0, 32, n3, i2), 0 !== E(e4, 16, e4, 32, r3 - 32, s2))
                return -1;
              for (A(t4, 0, e4, 0, r3, n3, i2), o2 = 0; o2 < 32; o2++)
                t4[o2] = 0;
              return 0;
            }
            function P(t4, e4) {
              var r3;
              for (r3 = 0; r3 < 16; r3++)
                t4[r3] = 0 | e4[r3];
            }
            function T(t4) {
              var e4, r3, n3 = 1;
              for (e4 = 0; e4 < 16; e4++)
                r3 = t4[e4] + n3 + 65535, n3 = Math.floor(r3 / 65536), t4[e4] = r3 - 65536 * n3;
              t4[0] += n3 - 1 + 37 * (n3 - 1);
            }
            function R(t4, e4, r3) {
              for (var n3, i2 = ~(r3 - 1), o2 = 0; o2 < 16; o2++)
                n3 = i2 & (t4[o2] ^ e4[o2]), t4[o2] ^= n3, e4[o2] ^= n3;
            }
            function O(t4, r3) {
              var n3, i2, o2, s2 = e3(), a2 = e3();
              for (n3 = 0; n3 < 16; n3++)
                a2[n3] = r3[n3];
              for (T(a2), T(a2), T(a2), i2 = 0; i2 < 2; i2++) {
                for (s2[0] = a2[0] - 65517, n3 = 1; n3 < 15; n3++)
                  s2[n3] = a2[n3] - 65535 - (s2[n3 - 1] >> 16 & 1), s2[n3 - 1] &= 65535;
                s2[15] = a2[15] - 32767 - (s2[14] >> 16 & 1), o2 = s2[15] >> 16 & 1, s2[14] &= 65535, R(a2, s2, 1 - o2);
              }
              for (n3 = 0; n3 < 16; n3++)
                t4[2 * n3] = 255 & a2[n3], t4[2 * n3 + 1] = a2[n3] >> 8;
            }
            function C(t4, e4) {
              var r3 = new Uint8Array(32), n3 = new Uint8Array(32);
              return O(r3, t4), O(n3, e4), m(r3, 0, n3, 0);
            }
            function j(t4) {
              var e4 = new Uint8Array(32);
              return O(e4, t4), 1 & e4[0];
            }
            function N(t4, e4) {
              var r3;
              for (r3 = 0; r3 < 16; r3++)
                t4[r3] = e4[2 * r3] + (e4[2 * r3 + 1] << 8);
              t4[15] &= 32767;
            }
            function D(t4, e4, r3) {
              for (var n3 = 0; n3 < 16; n3++)
                t4[n3] = e4[n3] + r3[n3];
            }
            function L(t4, e4, r3) {
              for (var n3 = 0; n3 < 16; n3++)
                t4[n3] = e4[n3] - r3[n3];
            }
            function F(t4, e4, r3) {
              var n3, i2, o2 = 0, s2 = 0, a2 = 0, h2 = 0, f2 = 0, u2 = 0, c2 = 0, d2 = 0, l2 = 0, p2 = 0, g2 = 0, y2 = 0, m2 = 0, v2 = 0, b2 = 0, w2 = 0, _2 = 0, k2 = 0, S2 = 0, A2 = 0, x2 = 0, M2 = 0, E2 = 0, B2 = 0, I2 = 0, P2 = 0, T2 = 0, R2 = 0, O2 = 0, C2 = 0, j2 = 0, N2 = r3[0], D2 = r3[1], L2 = r3[2], F2 = r3[3], q2 = r3[4], U2 = r3[5], V2 = r3[6], z2 = r3[7], H2 = r3[8], K2 = r3[9], W2 = r3[10], G2 = r3[11], Y2 = r3[12], J2 = r3[13], X2 = r3[14], Z2 = r3[15];
              o2 += (n3 = e4[0]) * N2, s2 += n3 * D2, a2 += n3 * L2, h2 += n3 * F2, f2 += n3 * q2, u2 += n3 * U2, c2 += n3 * V2, d2 += n3 * z2, l2 += n3 * H2, p2 += n3 * K2, g2 += n3 * W2, y2 += n3 * G2, m2 += n3 * Y2, v2 += n3 * J2, b2 += n3 * X2, w2 += n3 * Z2, s2 += (n3 = e4[1]) * N2, a2 += n3 * D2, h2 += n3 * L2, f2 += n3 * F2, u2 += n3 * q2, c2 += n3 * U2, d2 += n3 * V2, l2 += n3 * z2, p2 += n3 * H2, g2 += n3 * K2, y2 += n3 * W2, m2 += n3 * G2, v2 += n3 * Y2, b2 += n3 * J2, w2 += n3 * X2, _2 += n3 * Z2, a2 += (n3 = e4[2]) * N2, h2 += n3 * D2, f2 += n3 * L2, u2 += n3 * F2, c2 += n3 * q2, d2 += n3 * U2, l2 += n3 * V2, p2 += n3 * z2, g2 += n3 * H2, y2 += n3 * K2, m2 += n3 * W2, v2 += n3 * G2, b2 += n3 * Y2, w2 += n3 * J2, _2 += n3 * X2, k2 += n3 * Z2, h2 += (n3 = e4[3]) * N2, f2 += n3 * D2, u2 += n3 * L2, c2 += n3 * F2, d2 += n3 * q2, l2 += n3 * U2, p2 += n3 * V2, g2 += n3 * z2, y2 += n3 * H2, m2 += n3 * K2, v2 += n3 * W2, b2 += n3 * G2, w2 += n3 * Y2, _2 += n3 * J2, k2 += n3 * X2, S2 += n3 * Z2, f2 += (n3 = e4[4]) * N2, u2 += n3 * D2, c2 += n3 * L2, d2 += n3 * F2, l2 += n3 * q2, p2 += n3 * U2, g2 += n3 * V2, y2 += n3 * z2, m2 += n3 * H2, v2 += n3 * K2, b2 += n3 * W2, w2 += n3 * G2, _2 += n3 * Y2, k2 += n3 * J2, S2 += n3 * X2, A2 += n3 * Z2, u2 += (n3 = e4[5]) * N2, c2 += n3 * D2, d2 += n3 * L2, l2 += n3 * F2, p2 += n3 * q2, g2 += n3 * U2, y2 += n3 * V2, m2 += n3 * z2, v2 += n3 * H2, b2 += n3 * K2, w2 += n3 * W2, _2 += n3 * G2, k2 += n3 * Y2, S2 += n3 * J2, A2 += n3 * X2, x2 += n3 * Z2, c2 += (n3 = e4[6]) * N2, d2 += n3 * D2, l2 += n3 * L2, p2 += n3 * F2, g2 += n3 * q2, y2 += n3 * U2, m2 += n3 * V2, v2 += n3 * z2, b2 += n3 * H2, w2 += n3 * K2, _2 += n3 * W2, k2 += n3 * G2, S2 += n3 * Y2, A2 += n3 * J2, x2 += n3 * X2, M2 += n3 * Z2, d2 += (n3 = e4[7]) * N2, l2 += n3 * D2, p2 += n3 * L2, g2 += n3 * F2, y2 += n3 * q2, m2 += n3 * U2, v2 += n3 * V2, b2 += n3 * z2, w2 += n3 * H2, _2 += n3 * K2, k2 += n3 * W2, S2 += n3 * G2, A2 += n3 * Y2, x2 += n3 * J2, M2 += n3 * X2, E2 += n3 * Z2, l2 += (n3 = e4[8]) * N2, p2 += n3 * D2, g2 += n3 * L2, y2 += n3 * F2, m2 += n3 * q2, v2 += n3 * U2, b2 += n3 * V2, w2 += n3 * z2, _2 += n3 * H2, k2 += n3 * K2, S2 += n3 * W2, A2 += n3 * G2, x2 += n3 * Y2, M2 += n3 * J2, E2 += n3 * X2, B2 += n3 * Z2, p2 += (n3 = e4[9]) * N2, g2 += n3 * D2, y2 += n3 * L2, m2 += n3 * F2, v2 += n3 * q2, b2 += n3 * U2, w2 += n3 * V2, _2 += n3 * z2, k2 += n3 * H2, S2 += n3 * K2, A2 += n3 * W2, x2 += n3 * G2, M2 += n3 * Y2, E2 += n3 * J2, B2 += n3 * X2, I2 += n3 * Z2, g2 += (n3 = e4[10]) * N2, y2 += n3 * D2, m2 += n3 * L2, v2 += n3 * F2, b2 += n3 * q2, w2 += n3 * U2, _2 += n3 * V2, k2 += n3 * z2, S2 += n3 * H2, A2 += n3 * K2, x2 += n3 * W2, M2 += n3 * G2, E2 += n3 * Y2, B2 += n3 * J2, I2 += n3 * X2, P2 += n3 * Z2, y2 += (n3 = e4[11]) * N2, m2 += n3 * D2, v2 += n3 * L2, b2 += n3 * F2, w2 += n3 * q2, _2 += n3 * U2, k2 += n3 * V2, S2 += n3 * z2, A2 += n3 * H2, x2 += n3 * K2, M2 += n3 * W2, E2 += n3 * G2, B2 += n3 * Y2, I2 += n3 * J2, P2 += n3 * X2, T2 += n3 * Z2, m2 += (n3 = e4[12]) * N2, v2 += n3 * D2, b2 += n3 * L2, w2 += n3 * F2, _2 += n3 * q2, k2 += n3 * U2, S2 += n3 * V2, A2 += n3 * z2, x2 += n3 * H2, M2 += n3 * K2, E2 += n3 * W2, B2 += n3 * G2, I2 += n3 * Y2, P2 += n3 * J2, T2 += n3 * X2, R2 += n3 * Z2, v2 += (n3 = e4[13]) * N2, b2 += n3 * D2, w2 += n3 * L2, _2 += n3 * F2, k2 += n3 * q2, S2 += n3 * U2, A2 += n3 * V2, x2 += n3 * z2, M2 += n3 * H2, E2 += n3 * K2, B2 += n3 * W2, I2 += n3 * G2, P2 += n3 * Y2, T2 += n3 * J2, R2 += n3 * X2, O2 += n3 * Z2, b2 += (n3 = e4[14]) * N2, w2 += n3 * D2, _2 += n3 * L2, k2 += n3 * F2, S2 += n3 * q2, A2 += n3 * U2, x2 += n3 * V2, M2 += n3 * z2, E2 += n3 * H2, B2 += n3 * K2, I2 += n3 * W2, P2 += n3 * G2, T2 += n3 * Y2, R2 += n3 * J2, O2 += n3 * X2, C2 += n3 * Z2, w2 += (n3 = e4[15]) * N2, s2 += 38 * (k2 += n3 * L2), a2 += 38 * (S2 += n3 * F2), h2 += 38 * (A2 += n3 * q2), f2 += 38 * (x2 += n3 * U2), u2 += 38 * (M2 += n3 * V2), c2 += 38 * (E2 += n3 * z2), d2 += 38 * (B2 += n3 * H2), l2 += 38 * (I2 += n3 * K2), p2 += 38 * (P2 += n3 * W2), g2 += 38 * (T2 += n3 * G2), y2 += 38 * (R2 += n3 * Y2), m2 += 38 * (O2 += n3 * J2), v2 += 38 * (C2 += n3 * X2), b2 += 38 * (j2 += n3 * Z2), o2 = (n3 = (o2 += 38 * (_2 += n3 * D2)) + (i2 = 1) + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), s2 = (n3 = s2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), a2 = (n3 = a2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), h2 = (n3 = h2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), f2 = (n3 = f2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), u2 = (n3 = u2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), c2 = (n3 = c2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), d2 = (n3 = d2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), l2 = (n3 = l2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), p2 = (n3 = p2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), g2 = (n3 = g2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), y2 = (n3 = y2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), m2 = (n3 = m2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), v2 = (n3 = v2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), b2 = (n3 = b2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), w2 = (n3 = w2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), o2 = (n3 = (o2 += i2 - 1 + 37 * (i2 - 1)) + (i2 = 1) + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), s2 = (n3 = s2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), a2 = (n3 = a2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), h2 = (n3 = h2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), f2 = (n3 = f2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), u2 = (n3 = u2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), c2 = (n3 = c2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), d2 = (n3 = d2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), l2 = (n3 = l2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), p2 = (n3 = p2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), g2 = (n3 = g2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), y2 = (n3 = y2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), m2 = (n3 = m2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), v2 = (n3 = v2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), b2 = (n3 = b2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), w2 = (n3 = w2 + i2 + 65535) - 65536 * (i2 = Math.floor(n3 / 65536)), o2 += i2 - 1 + 37 * (i2 - 1), t4[0] = o2, t4[1] = s2, t4[2] = a2, t4[3] = h2, t4[4] = f2, t4[5] = u2, t4[6] = c2, t4[7] = d2, t4[8] = l2, t4[9] = p2, t4[10] = g2, t4[11] = y2, t4[12] = m2, t4[13] = v2, t4[14] = b2, t4[15] = w2;
            }
            function q(t4, e4) {
              F(t4, e4, e4);
            }
            function U(t4, r3) {
              var n3, i2 = e3();
              for (n3 = 0; n3 < 16; n3++)
                i2[n3] = r3[n3];
              for (n3 = 253; n3 >= 0; n3--)
                q(i2, i2), 2 !== n3 && 4 !== n3 && F(i2, i2, r3);
              for (n3 = 0; n3 < 16; n3++)
                t4[n3] = i2[n3];
            }
            function V(t4, r3, n3) {
              var i2, o2, s2 = new Uint8Array(32), a2 = new Float64Array(80), h2 = e3(), u2 = e3(), c2 = e3(), d2 = e3(), l2 = e3(), p2 = e3();
              for (o2 = 0; o2 < 31; o2++)
                s2[o2] = r3[o2];
              for (s2[31] = 127 & r3[31] | 64, s2[0] &= 248, N(a2, n3), o2 = 0; o2 < 16; o2++)
                u2[o2] = a2[o2], d2[o2] = h2[o2] = c2[o2] = 0;
              for (h2[0] = d2[0] = 1, o2 = 254; o2 >= 0; --o2)
                R(h2, u2, i2 = s2[o2 >>> 3] >>> (7 & o2) & 1), R(c2, d2, i2), D(l2, h2, c2), L(h2, h2, c2), D(c2, u2, d2), L(u2, u2, d2), q(d2, l2), q(p2, h2), F(h2, c2, h2), F(c2, u2, l2), D(l2, h2, c2), L(h2, h2, c2), q(u2, h2), L(c2, d2, p2), F(h2, c2, f), D(h2, h2, d2), F(c2, c2, h2), F(h2, d2, p2), F(d2, u2, a2), q(u2, l2), R(h2, u2, i2), R(c2, d2, i2);
              for (o2 = 0; o2 < 16; o2++)
                a2[o2 + 16] = h2[o2], a2[o2 + 32] = c2[o2], a2[o2 + 48] = u2[o2], a2[o2 + 64] = d2[o2];
              var g2 = a2.subarray(32), y2 = a2.subarray(16);
              return U(g2, g2), F(y2, y2, g2), O(t4, y2), 0;
            }
            function z(t4, e4) {
              return V(t4, e4, s);
            }
            function H(t4, e4) {
              return i(e4, 32), z(t4, e4);
            }
            function K(t4, e4, r3) {
              var n3 = new Uint8Array(32);
              return V(n3, r3, e4), b(t4, o, n3, w);
            }
            x.prototype.blocks = function(t4, e4, r3) {
              for (var n3, i2, o2, s2, a2, h2, f2, u2, c2, d2, l2, p2, g2, y2, m2, v2, b2, w2, _2, k2 = this.fin ? 0 : 2048, S2 = this.h[0], A2 = this.h[1], x2 = this.h[2], M2 = this.h[3], E2 = this.h[4], B2 = this.h[5], I2 = this.h[6], P2 = this.h[7], T2 = this.h[8], R2 = this.h[9], O2 = this.r[0], C2 = this.r[1], j2 = this.r[2], N2 = this.r[3], D2 = this.r[4], L2 = this.r[5], F2 = this.r[6], q2 = this.r[7], U2 = this.r[8], V2 = this.r[9]; r3 >= 16; )
                d2 = c2 = 0, d2 += (S2 += 8191 & (n3 = 255 & t4[e4 + 0] | (255 & t4[e4 + 1]) << 8)) * O2, d2 += (A2 += 8191 & (n3 >>> 13 | (i2 = 255 & t4[e4 + 2] | (255 & t4[e4 + 3]) << 8) << 3)) * (5 * V2), d2 += (x2 += 8191 & (i2 >>> 10 | (o2 = 255 & t4[e4 + 4] | (255 & t4[e4 + 5]) << 8) << 6)) * (5 * U2), d2 += (M2 += 8191 & (o2 >>> 7 | (s2 = 255 & t4[e4 + 6] | (255 & t4[e4 + 7]) << 8) << 9)) * (5 * q2), c2 = (d2 += (E2 += 8191 & (s2 >>> 4 | (a2 = 255 & t4[e4 + 8] | (255 & t4[e4 + 9]) << 8) << 12)) * (5 * F2)) >>> 13, d2 &= 8191, d2 += (B2 += a2 >>> 1 & 8191) * (5 * L2), d2 += (I2 += 8191 & (a2 >>> 14 | (h2 = 255 & t4[e4 + 10] | (255 & t4[e4 + 11]) << 8) << 2)) * (5 * D2), d2 += (P2 += 8191 & (h2 >>> 11 | (f2 = 255 & t4[e4 + 12] | (255 & t4[e4 + 13]) << 8) << 5)) * (5 * N2), d2 += (T2 += 8191 & (f2 >>> 8 | (u2 = 255 & t4[e4 + 14] | (255 & t4[e4 + 15]) << 8) << 8)) * (5 * j2), l2 = c2 += (d2 += (R2 += u2 >>> 5 | k2) * (5 * C2)) >>> 13, l2 += S2 * C2, l2 += A2 * O2, l2 += x2 * (5 * V2), l2 += M2 * (5 * U2), c2 = (l2 += E2 * (5 * q2)) >>> 13, l2 &= 8191, l2 += B2 * (5 * F2), l2 += I2 * (5 * L2), l2 += P2 * (5 * D2), l2 += T2 * (5 * N2), c2 += (l2 += R2 * (5 * j2)) >>> 13, l2 &= 8191, p2 = c2, p2 += S2 * j2, p2 += A2 * C2, p2 += x2 * O2, p2 += M2 * (5 * V2), c2 = (p2 += E2 * (5 * U2)) >>> 13, p2 &= 8191, p2 += B2 * (5 * q2), p2 += I2 * (5 * F2), p2 += P2 * (5 * L2), p2 += T2 * (5 * D2), g2 = c2 += (p2 += R2 * (5 * N2)) >>> 13, g2 += S2 * N2, g2 += A2 * j2, g2 += x2 * C2, g2 += M2 * O2, c2 = (g2 += E2 * (5 * V2)) >>> 13, g2 &= 8191, g2 += B2 * (5 * U2), g2 += I2 * (5 * q2), g2 += P2 * (5 * F2), g2 += T2 * (5 * L2), y2 = c2 += (g2 += R2 * (5 * D2)) >>> 13, y2 += S2 * D2, y2 += A2 * N2, y2 += x2 * j2, y2 += M2 * C2, c2 = (y2 += E2 * O2) >>> 13, y2 &= 8191, y2 += B2 * (5 * V2), y2 += I2 * (5 * U2), y2 += P2 * (5 * q2), y2 += T2 * (5 * F2), m2 = c2 += (y2 += R2 * (5 * L2)) >>> 13, m2 += S2 * L2, m2 += A2 * D2, m2 += x2 * N2, m2 += M2 * j2, c2 = (m2 += E2 * C2) >>> 13, m2 &= 8191, m2 += B2 * O2, m2 += I2 * (5 * V2), m2 += P2 * (5 * U2), m2 += T2 * (5 * q2), v2 = c2 += (m2 += R2 * (5 * F2)) >>> 13, v2 += S2 * F2, v2 += A2 * L2, v2 += x2 * D2, v2 += M2 * N2, c2 = (v2 += E2 * j2) >>> 13, v2 &= 8191, v2 += B2 * C2, v2 += I2 * O2, v2 += P2 * (5 * V2), v2 += T2 * (5 * U2), b2 = c2 += (v2 += R2 * (5 * q2)) >>> 13, b2 += S2 * q2, b2 += A2 * F2, b2 += x2 * L2, b2 += M2 * D2, c2 = (b2 += E2 * N2) >>> 13, b2 &= 8191, b2 += B2 * j2, b2 += I2 * C2, b2 += P2 * O2, b2 += T2 * (5 * V2), w2 = c2 += (b2 += R2 * (5 * U2)) >>> 13, w2 += S2 * U2, w2 += A2 * q2, w2 += x2 * F2, w2 += M2 * L2, c2 = (w2 += E2 * D2) >>> 13, w2 &= 8191, w2 += B2 * N2, w2 += I2 * j2, w2 += P2 * C2, w2 += T2 * O2, _2 = c2 += (w2 += R2 * (5 * V2)) >>> 13, _2 += S2 * V2, _2 += A2 * U2, _2 += x2 * q2, _2 += M2 * F2, c2 = (_2 += E2 * L2) >>> 13, _2 &= 8191, _2 += B2 * D2, _2 += I2 * N2, _2 += P2 * j2, _2 += T2 * C2, S2 = d2 = 8191 & (c2 = (c2 = ((c2 += (_2 += R2 * O2) >>> 13) << 2) + c2 | 0) + (d2 &= 8191) | 0), A2 = l2 += c2 >>>= 13, x2 = p2 &= 8191, M2 = g2 &= 8191, E2 = y2 &= 8191, B2 = m2 &= 8191, I2 = v2 &= 8191, P2 = b2 &= 8191, T2 = w2 &= 8191, R2 = _2 &= 8191, e4 += 16, r3 -= 16;
              this.h[0] = S2, this.h[1] = A2, this.h[2] = x2, this.h[3] = M2, this.h[4] = E2, this.h[5] = B2, this.h[6] = I2, this.h[7] = P2, this.h[8] = T2, this.h[9] = R2;
            }, x.prototype.finish = function(t4, e4) {
              var r3, n3, i2, o2, s2 = new Uint16Array(10);
              if (this.leftover) {
                for (o2 = this.leftover, this.buffer[o2++] = 1; o2 < 16; o2++)
                  this.buffer[o2] = 0;
                this.fin = 1, this.blocks(this.buffer, 0, 16);
              }
              for (r3 = this.h[1] >>> 13, this.h[1] &= 8191, o2 = 2; o2 < 10; o2++)
                this.h[o2] += r3, r3 = this.h[o2] >>> 13, this.h[o2] &= 8191;
              for (this.h[0] += 5 * r3, r3 = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += r3, r3 = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += r3, s2[0] = this.h[0] + 5, r3 = s2[0] >>> 13, s2[0] &= 8191, o2 = 1; o2 < 10; o2++)
                s2[o2] = this.h[o2] + r3, r3 = s2[o2] >>> 13, s2[o2] &= 8191;
              for (s2[9] -= 8192, n3 = (1 ^ r3) - 1, o2 = 0; o2 < 10; o2++)
                s2[o2] &= n3;
              for (n3 = ~n3, o2 = 0; o2 < 10; o2++)
                this.h[o2] = this.h[o2] & n3 | s2[o2];
              for (this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5), i2 = this.h[0] + this.pad[0], this.h[0] = 65535 & i2, o2 = 1; o2 < 8; o2++)
                i2 = (this.h[o2] + this.pad[o2] | 0) + (i2 >>> 16) | 0, this.h[o2] = 65535 & i2;
              t4[e4 + 0] = this.h[0] >>> 0 & 255, t4[e4 + 1] = this.h[0] >>> 8 & 255, t4[e4 + 2] = this.h[1] >>> 0 & 255, t4[e4 + 3] = this.h[1] >>> 8 & 255, t4[e4 + 4] = this.h[2] >>> 0 & 255, t4[e4 + 5] = this.h[2] >>> 8 & 255, t4[e4 + 6] = this.h[3] >>> 0 & 255, t4[e4 + 7] = this.h[3] >>> 8 & 255, t4[e4 + 8] = this.h[4] >>> 0 & 255, t4[e4 + 9] = this.h[4] >>> 8 & 255, t4[e4 + 10] = this.h[5] >>> 0 & 255, t4[e4 + 11] = this.h[5] >>> 8 & 255, t4[e4 + 12] = this.h[6] >>> 0 & 255, t4[e4 + 13] = this.h[6] >>> 8 & 255, t4[e4 + 14] = this.h[7] >>> 0 & 255, t4[e4 + 15] = this.h[7] >>> 8 & 255;
            }, x.prototype.update = function(t4, e4, r3) {
              var n3, i2;
              if (this.leftover) {
                for ((i2 = 16 - this.leftover) > r3 && (i2 = r3), n3 = 0; n3 < i2; n3++)
                  this.buffer[this.leftover + n3] = t4[e4 + n3];
                if (r3 -= i2, e4 += i2, this.leftover += i2, this.leftover < 16)
                  return;
                this.blocks(this.buffer, 0, 16), this.leftover = 0;
              }
              if (r3 >= 16 && (i2 = r3 - r3 % 16, this.blocks(t4, e4, i2), e4 += i2, r3 -= i2), r3) {
                for (n3 = 0; n3 < r3; n3++)
                  this.buffer[this.leftover + n3] = t4[e4 + n3];
                this.leftover += r3;
              }
            };
            var W = B, G = I;
            function Y(t4, e4, r3) {
              var i2, o2 = new Uint8Array(r3);
              for (i2 = 0; i2 < r3; ++i2)
                o2[i2] = e4[i2];
              var s2 = n2.blake2b(o2);
              for (i2 = 0; i2 < ut; ++i2)
                t4[i2] = s2[i2];
              return 0;
            }
            function J(t4, r3) {
              var n3 = e3(), i2 = e3(), o2 = e3(), s2 = e3(), a2 = e3(), h2 = e3(), f2 = e3(), u2 = e3(), d2 = e3();
              L(n3, t4[1], t4[0]), L(d2, r3[1], r3[0]), F(n3, n3, d2), D(i2, t4[0], t4[1]), D(d2, r3[0], r3[1]), F(i2, i2, d2), F(o2, t4[3], r3[3]), F(o2, o2, c), F(s2, t4[2], r3[2]), D(s2, s2, s2), L(a2, i2, n3), L(h2, s2, o2), D(f2, s2, o2), D(u2, i2, n3), F(t4[0], a2, h2), F(t4[1], u2, f2), F(t4[2], f2, h2), F(t4[3], a2, u2);
            }
            function X(t4, e4, r3) {
              var n3;
              for (n3 = 0; n3 < 4; n3++)
                R(t4[n3], e4[n3], r3);
            }
            function Z(t4, r3) {
              var n3 = e3(), i2 = e3(), o2 = e3();
              U(o2, r3[2]), F(n3, r3[0], o2), F(i2, r3[1], o2), O(t4, i2), t4[31] ^= j(n3) << 7;
            }
            function $(t4, e4, r3) {
              var n3, i2;
              for (P(t4[0], a), P(t4[1], h), P(t4[2], h), P(t4[3], a), i2 = 255; i2 >= 0; --i2)
                X(t4, e4, n3 = r3[i2 / 8 | 0] >> (7 & i2) & 1), J(e4, t4), J(t4, t4), X(t4, e4, n3);
            }
            function Q(t4, r3) {
              var n3 = [e3(), e3(), e3(), e3()];
              P(n3[0], d), P(n3[1], l), P(n3[2], h), F(n3[3], d, l), $(t4, n3, r3);
            }
            function tt(t4, r3, n3) {
              var o2, s2 = new Uint8Array(64), a2 = [e3(), e3(), e3(), e3()];
              for (n3 || i(r3, 32), Y(s2, r3, 32), s2[0] &= 248, s2[31] &= 127, s2[31] |= 64, Q(a2, s2), Z(t4, a2), o2 = 0; o2 < 32; o2++)
                r3[o2 + 32] = t4[o2];
              return 0;
            }
            var et = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
            function rt(t4, e4) {
              var r3, n3, i2, o2;
              for (n3 = 63; n3 >= 32; --n3) {
                for (r3 = 0, i2 = n3 - 32, o2 = n3 - 12; i2 < o2; ++i2)
                  e4[i2] += r3 - 16 * e4[n3] * et[i2 - (n3 - 32)], r3 = e4[i2] + 128 >> 8, e4[i2] -= 256 * r3;
                e4[i2] += r3, e4[n3] = 0;
              }
              for (r3 = 0, i2 = 0; i2 < 32; i2++)
                e4[i2] += r3 - (e4[31] >> 4) * et[i2], r3 = e4[i2] >> 8, e4[i2] &= 255;
              for (i2 = 0; i2 < 32; i2++)
                e4[i2] -= r3 * et[i2];
              for (n3 = 0; n3 < 32; n3++)
                e4[n3 + 1] += e4[n3] >> 8, t4[n3] = 255 & e4[n3];
            }
            function nt(t4) {
              var e4, r3 = new Float64Array(64);
              for (e4 = 0; e4 < 64; e4++)
                r3[e4] = t4[e4];
              for (e4 = 0; e4 < 64; e4++)
                t4[e4] = 0;
              rt(t4, r3);
            }
            function it(t4, r3, n3, i2) {
              var o2, s2, a2 = new Uint8Array(64), h2 = new Uint8Array(64), f2 = new Uint8Array(64), u2 = new Float64Array(64), c2 = [e3(), e3(), e3(), e3()];
              Y(a2, i2, 32), a2[0] &= 248, a2[31] &= 127, a2[31] |= 64;
              var d2 = n3 + 64;
              for (o2 = 0; o2 < n3; o2++)
                t4[64 + o2] = r3[o2];
              for (o2 = 0; o2 < 32; o2++)
                t4[32 + o2] = a2[32 + o2];
              for (Y(f2, t4.subarray(32), n3 + 32), nt(f2), Q(c2, f2), Z(t4, c2), o2 = 32; o2 < 64; o2++)
                t4[o2] = i2[o2];
              for (Y(h2, t4, n3 + 64), nt(h2), o2 = 0; o2 < 64; o2++)
                u2[o2] = 0;
              for (o2 = 0; o2 < 32; o2++)
                u2[o2] = f2[o2];
              for (o2 = 0; o2 < 32; o2++)
                for (s2 = 0; s2 < 32; s2++)
                  u2[o2 + s2] += h2[o2] * a2[s2];
              return rt(t4.subarray(32), u2), d2;
            }
            function ot(t4, r3, n3, i2) {
              var o2, s2 = new Uint8Array(32), f2 = new Uint8Array(64), c2 = [e3(), e3(), e3(), e3()], d2 = [e3(), e3(), e3(), e3()];
              if (n3 < 64)
                return -1;
              if (function(t5, r4) {
                var n4 = e3(), i3 = e3(), o3 = e3(), s3 = e3(), f3 = e3(), c3 = e3(), d3 = e3();
                return P(t5[2], h), N(t5[1], r4), q(o3, t5[1]), F(s3, o3, u), L(o3, o3, t5[2]), D(s3, t5[2], s3), q(f3, s3), q(c3, f3), F(d3, c3, f3), F(n4, d3, o3), F(n4, n4, s3), function(t6, r5) {
                  var n5, i4 = e3();
                  for (n5 = 0; n5 < 16; n5++)
                    i4[n5] = r5[n5];
                  for (n5 = 250; n5 >= 0; n5--)
                    q(i4, i4), 1 !== n5 && F(i4, i4, r5);
                  for (n5 = 0; n5 < 16; n5++)
                    t6[n5] = i4[n5];
                }(n4, n4), F(n4, n4, o3), F(n4, n4, s3), F(n4, n4, s3), F(t5[0], n4, s3), q(i3, t5[0]), F(i3, i3, s3), C(i3, o3) && F(t5[0], t5[0], p), q(i3, t5[0]), F(i3, i3, s3), C(i3, o3) ? -1 : (j(t5[0]) === r4[31] >> 7 && L(t5[0], a, t5[0]), F(t5[3], t5[0], t5[1]), 0);
              }(d2, i2))
                return -1;
              for (o2 = 0; o2 < n3; o2++)
                t4[o2] = r3[o2];
              for (o2 = 0; o2 < 32; o2++)
                t4[o2 + 32] = i2[o2];
              if (Y(f2, t4, n3), nt(f2), $(c2, d2, f2), Q(d2, r3.subarray(32)), J(c2, d2), Z(s2, c2), n3 -= 64, m(r3, 0, s2, 0)) {
                for (o2 = 0; o2 < n3; o2++)
                  t4[o2] = 0;
                return -1;
              }
              for (o2 = 0; o2 < n3; o2++)
                t4[o2] = r3[o2 + 64];
              return n3;
            }
            var st, at = 64, ht = 32, ft = 64, ut = 64;
            function ct(t4, e4) {
              if (32 !== t4.length)
                throw new Error("bad key size");
              if (24 !== e4.length)
                throw new Error("bad nonce size");
            }
            function dt() {
              for (var t4 = 0; t4 < arguments.length; t4++)
                if (!(arguments[t4] instanceof Uint8Array))
                  throw new TypeError("unexpected type, use Uint8Array");
            }
            function lt(t4) {
              for (var e4 = 0; e4 < t4.length; e4++)
                t4[e4] = 0;
            }
            t3.lowlevel = { crypto_core_hsalsa20: b, crypto_stream_xor: A, crypto_stream: S, crypto_stream_salsa20_xor: _, crypto_stream_salsa20: k, crypto_onetimeauth: M, crypto_onetimeauth_verify: E, crypto_verify_16: y, crypto_verify_32: m, crypto_secretbox: B, crypto_secretbox_open: I, crypto_scalarmult: V, crypto_scalarmult_base: z, crypto_box_beforenm: K, crypto_box_afternm: W, crypto_box: function(t4, e4, r3, n3, i2, o2) {
              var s2 = new Uint8Array(32);
              return K(s2, i2, o2), W(t4, e4, r3, n3, s2);
            }, crypto_box_open: function(t4, e4, r3, n3, i2, o2) {
              var s2 = new Uint8Array(32);
              return K(s2, i2, o2), G(t4, e4, r3, n3, s2);
            }, crypto_box_keypair: H, crypto_hash: Y, crypto_sign: it, crypto_sign_keypair: tt, crypto_sign_open: ot, crypto_secretbox_KEYBYTES: 32, crypto_secretbox_NONCEBYTES: 24, crypto_secretbox_ZEROBYTES: 32, crypto_secretbox_BOXZEROBYTES: 16, crypto_scalarmult_BYTES: 32, crypto_scalarmult_SCALARBYTES: 32, crypto_box_PUBLICKEYBYTES: 32, crypto_box_SECRETKEYBYTES: 32, crypto_box_BEFORENMBYTES: 32, crypto_box_NONCEBYTES: 24, crypto_box_ZEROBYTES: 32, crypto_box_BOXZEROBYTES: 16, crypto_sign_BYTES: at, crypto_sign_PUBLICKEYBYTES: ht, crypto_sign_SECRETKEYBYTES: ft, crypto_sign_SEEDBYTES: 32, crypto_hash_BYTES: ut }, t3.randomBytes = function(t4) {
              var e4 = new Uint8Array(t4);
              return i(e4, t4), e4;
            }, t3.secretbox = function(t4, e4, r3) {
              dt(t4, e4, r3), ct(r3, e4);
              for (var n3 = new Uint8Array(32 + t4.length), i2 = new Uint8Array(n3.length), o2 = 0; o2 < t4.length; o2++)
                n3[o2 + 32] = t4[o2];
              return B(i2, n3, n3.length, e4, r3), i2.subarray(16);
            }, t3.secretbox.open = function(t4, e4, r3) {
              dt(t4, e4, r3), ct(r3, e4);
              for (var n3 = new Uint8Array(16 + t4.length), i2 = new Uint8Array(n3.length), o2 = 0; o2 < t4.length; o2++)
                n3[o2 + 16] = t4[o2];
              return n3.length < 32 || 0 !== I(i2, n3, n3.length, e4, r3) ? null : i2.subarray(32);
            }, t3.secretbox.keyLength = 32, t3.secretbox.nonceLength = 24, t3.secretbox.overheadLength = 16, t3.scalarMult = function(t4, e4) {
              if (dt(t4, e4), 32 !== t4.length)
                throw new Error("bad n size");
              if (32 !== e4.length)
                throw new Error("bad p size");
              var r3 = new Uint8Array(32);
              return V(r3, t4, e4), r3;
            }, t3.scalarMult.base = function(t4) {
              if (dt(t4), 32 !== t4.length)
                throw new Error("bad n size");
              var e4 = new Uint8Array(32);
              return z(e4, t4), e4;
            }, t3.scalarMult.scalarLength = 32, t3.scalarMult.groupElementLength = 32, t3.box = function(e4, r3, n3, i2) {
              var o2 = t3.box.before(n3, i2);
              return t3.secretbox(e4, r3, o2);
            }, t3.box.before = function(t4, e4) {
              dt(t4, e4), function(t5, e5) {
                if (32 !== t5.length)
                  throw new Error("bad public key size");
                if (32 !== e5.length)
                  throw new Error("bad secret key size");
              }(t4, e4);
              var r3 = new Uint8Array(32);
              return K(r3, t4, e4), r3;
            }, t3.box.after = t3.secretbox, t3.box.open = function(e4, r3, n3, i2) {
              var o2 = t3.box.before(n3, i2);
              return t3.secretbox.open(e4, r3, o2);
            }, t3.box.open.after = t3.secretbox.open, t3.box.keyPair = function() {
              var t4 = new Uint8Array(32), e4 = new Uint8Array(32);
              return H(t4, e4), { publicKey: t4, secretKey: e4 };
            }, t3.box.keyPair.fromSecretKey = function(t4) {
              if (dt(t4), 32 !== t4.length)
                throw new Error("bad secret key size");
              var e4 = new Uint8Array(32);
              return z(e4, t4), { publicKey: e4, secretKey: new Uint8Array(t4) };
            }, t3.box.publicKeyLength = 32, t3.box.secretKeyLength = 32, t3.box.sharedKeyLength = 32, t3.box.nonceLength = 24, t3.box.overheadLength = t3.secretbox.overheadLength, t3.sign = function(t4, e4) {
              if (dt(t4, e4), e4.length !== ft)
                throw new Error("bad secret key size");
              var r3 = new Uint8Array(at + t4.length);
              return it(r3, t4, t4.length, e4), r3;
            }, t3.sign.open = function(t4, e4) {
              if (dt(t4, e4), e4.length !== ht)
                throw new Error("bad public key size");
              var r3 = new Uint8Array(t4.length), n3 = ot(r3, t4, t4.length, e4);
              if (n3 < 0)
                return null;
              for (var i2 = new Uint8Array(n3), o2 = 0; o2 < i2.length; o2++)
                i2[o2] = r3[o2];
              return i2;
            }, t3.sign.detached = function(e4, r3) {
              for (var n3 = t3.sign(e4, r3), i2 = new Uint8Array(at), o2 = 0; o2 < i2.length; o2++)
                i2[o2] = n3[o2];
              return i2;
            }, t3.sign.detached.verify = function(t4, e4, r3) {
              if (dt(t4, e4, r3), e4.length !== at)
                throw new Error("bad signature size");
              if (r3.length !== ht)
                throw new Error("bad public key size");
              var n3, i2 = new Uint8Array(at + t4.length), o2 = new Uint8Array(at + t4.length);
              for (n3 = 0; n3 < at; n3++)
                i2[n3] = e4[n3];
              for (n3 = 0; n3 < t4.length; n3++)
                i2[n3 + at] = t4[n3];
              return ot(o2, i2, i2.length, r3) >= 0;
            }, t3.sign.keyPair = function() {
              var t4 = new Uint8Array(ht), e4 = new Uint8Array(ft);
              return tt(t4, e4), { publicKey: t4, secretKey: e4 };
            }, t3.sign.keyPair.fromSecretKey = function(t4) {
              if (dt(t4), t4.length !== ft)
                throw new Error("bad secret key size");
              for (var e4 = new Uint8Array(ht), r3 = 0; r3 < e4.length; r3++)
                e4[r3] = t4[32 + r3];
              return { publicKey: e4, secretKey: new Uint8Array(t4) };
            }, t3.sign.keyPair.fromSeed = function(t4) {
              if (dt(t4), 32 !== t4.length)
                throw new Error("bad seed size");
              for (var e4 = new Uint8Array(ht), r3 = new Uint8Array(ft), n3 = 0; n3 < 32; n3++)
                r3[n3] = t4[n3];
              return tt(e4, r3, true), { publicKey: e4, secretKey: r3 };
            }, t3.sign.publicKeyLength = ht, t3.sign.secretKeyLength = ft, t3.sign.seedLength = 32, t3.sign.signatureLength = at, t3.hash = function(t4) {
              dt(t4);
              var e4 = new Uint8Array(ut);
              return Y(e4, t4, t4.length), e4;
            }, t3.hash.hashLength = ut, t3.verify = function(t4, e4) {
              return dt(t4, e4), 0 !== t4.length && 0 !== e4.length && t4.length === e4.length && 0 === g(t4, 0, e4, 0, t4.length);
            }, t3.setPRNG = function(t4) {
              i = t4;
            }, (st = "undefined" != typeof self ? self.crypto || self.msCrypto : null) && st.getRandomValues ? t3.setPRNG(function(t4, e4) {
              var r3, n3 = new Uint8Array(e4);
              for (r3 = 0; r3 < e4; r3 += 65536)
                st.getRandomValues(n3.subarray(r3, r3 + Math.min(e4 - r3, 65536)));
              for (r3 = 0; r3 < e4; r3++)
                t4[r3] = n3[r3];
              lt(n3);
            }) : (st = r2(64903)) && st.randomBytes && t3.setPRNG(function(t4, e4) {
              var r3, n3 = st.randomBytes(e4);
              for (r3 = 0; r3 < e4; r3++)
                t4[r3] = n3[r3];
              lt(n3);
            });
          }(t2.exports ? t2.exports : self.nacl = self.nacl || {});
        }, 63535: (t2, e2, r2) => {
          var n2 = r2(8941);
          function i(t3, e3, r3) {
            var n3 = t3[e3] + t3[r3], i2 = t3[e3 + 1] + t3[r3 + 1];
            n3 >= 4294967296 && i2++, t3[e3] = n3, t3[e3 + 1] = i2;
          }
          function o(t3, e3, r3, n3) {
            var i2 = t3[e3] + r3;
            r3 < 0 && (i2 += 4294967296);
            var o2 = t3[e3 + 1] + n3;
            i2 >= 4294967296 && o2++, t3[e3] = i2, t3[e3 + 1] = o2;
          }
          function s(t3, e3) {
            return t3[e3] ^ t3[e3 + 1] << 8 ^ t3[e3 + 2] << 16 ^ t3[e3 + 3] << 24;
          }
          function a(t3, e3, r3, n3, s2, a2) {
            var h2 = c[s2], f2 = c[s2 + 1], d2 = c[a2], l2 = c[a2 + 1];
            i(u, t3, e3), o(u, t3, h2, f2);
            var p2 = u[n3] ^ u[t3], g2 = u[n3 + 1] ^ u[t3 + 1];
            u[n3] = g2, u[n3 + 1] = p2, i(u, r3, n3), p2 = u[e3] ^ u[r3], g2 = u[e3 + 1] ^ u[r3 + 1], u[e3] = p2 >>> 24 ^ g2 << 8, u[e3 + 1] = g2 >>> 24 ^ p2 << 8, i(u, t3, e3), o(u, t3, d2, l2), p2 = u[n3] ^ u[t3], g2 = u[n3 + 1] ^ u[t3 + 1], u[n3] = p2 >>> 16 ^ g2 << 16, u[n3 + 1] = g2 >>> 16 ^ p2 << 16, i(u, r3, n3), p2 = u[e3] ^ u[r3], g2 = u[e3 + 1] ^ u[r3 + 1], u[e3] = g2 >>> 31 ^ p2 << 1, u[e3 + 1] = p2 >>> 31 ^ g2 << 1;
          }
          var h = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]), f = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3].map(function(t3) {
            return 2 * t3;
          })), u = new Uint32Array(32), c = new Uint32Array(32);
          function d(t3, e3) {
            var r3 = 0;
            for (r3 = 0; r3 < 16; r3++)
              u[r3] = t3.h[r3], u[r3 + 16] = h[r3];
            for (u[24] = u[24] ^ t3.t, u[25] = u[25] ^ t3.t / 4294967296, e3 && (u[28] = ~u[28], u[29] = ~u[29]), r3 = 0; r3 < 32; r3++)
              c[r3] = s(t3.b, 4 * r3);
            for (r3 = 0; r3 < 12; r3++)
              a(0, 8, 16, 24, f[16 * r3 + 0], f[16 * r3 + 1]), a(2, 10, 18, 26, f[16 * r3 + 2], f[16 * r3 + 3]), a(4, 12, 20, 28, f[16 * r3 + 4], f[16 * r3 + 5]), a(6, 14, 22, 30, f[16 * r3 + 6], f[16 * r3 + 7]), a(0, 10, 20, 30, f[16 * r3 + 8], f[16 * r3 + 9]), a(2, 12, 22, 24, f[16 * r3 + 10], f[16 * r3 + 11]), a(4, 14, 16, 26, f[16 * r3 + 12], f[16 * r3 + 13]), a(6, 8, 18, 28, f[16 * r3 + 14], f[16 * r3 + 15]);
            for (r3 = 0; r3 < 16; r3++)
              t3.h[r3] = t3.h[r3] ^ u[r3] ^ u[r3 + 16];
          }
          function l(t3, e3) {
            if (0 === t3 || t3 > 64)
              throw new Error("Illegal output length, expected 0 < length <= 64");
            if (e3 && e3.length > 64)
              throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
            for (var r3 = { b: new Uint8Array(128), h: new Uint32Array(16), t: 0, c: 0, outlen: t3 }, n3 = 0; n3 < 16; n3++)
              r3.h[n3] = h[n3];
            var i2 = e3 ? e3.length : 0;
            return r3.h[0] ^= 16842752 ^ i2 << 8 ^ t3, e3 && (p(r3, e3), r3.c = 128), r3;
          }
          function p(t3, e3) {
            for (var r3 = 0; r3 < e3.length; r3++)
              128 === t3.c && (t3.t += t3.c, d(t3, false), t3.c = 0), t3.b[t3.c++] = e3[r3];
          }
          function g(t3) {
            for (t3.t += t3.c; t3.c < 128; )
              t3.b[t3.c++] = 0;
            d(t3, true);
            for (var e3 = new Uint8Array(t3.outlen), r3 = 0; r3 < t3.outlen; r3++)
              e3[r3] = t3.h[r3 >> 2] >> 8 * (3 & r3);
            return e3;
          }
          function y(t3, e3, r3) {
            r3 = r3 || 64, t3 = n2.normalizeInput(t3);
            var i2 = l(r3, e3);
            return p(i2, t3), g(i2);
          }
          t2.exports = { blake2b: y, blake2bHex: function(t3, e3, r3) {
            var i2 = y(t3, e3, r3);
            return n2.toHex(i2);
          }, blake2bInit: l, blake2bUpdate: p, blake2bFinal: g };
        }, 8941: (t2) => {
          function e2(t3) {
            return (4294967296 + t3).toString(16).substring(1);
          }
          t2.exports = { normalizeInput: function(t3) {
            var e3;
            if (t3 instanceof Uint8Array)
              e3 = t3;
            else if (t3 instanceof Buffer)
              e3 = new Uint8Array(t3);
            else {
              if ("string" != typeof t3)
                throw new Error("Input must be an string, Buffer or Uint8Array");
              e3 = new Uint8Array(Buffer.from(t3, "utf8"));
            }
            return e3;
          }, toHex: function(t3) {
            return Array.prototype.map.call(t3, function(t4) {
              return (t4 < 16 ? "0" : "") + t4.toString(16);
            }).join("");
          }, debugPrint: function(t3, r2, n2) {
            for (var i = "\n" + t3 + " = ", o = 0; o < r2.length; o += 2) {
              if (32 === n2)
                i += e2(r2[o]).toUpperCase(), i += " ", i += e2(r2[o + 1]).toUpperCase();
              else {
                if (64 !== n2)
                  throw new Error("Invalid size " + n2);
                i += e2(r2[o + 1]).toUpperCase(), i += e2(r2[o]).toUpperCase();
              }
              o % 6 == 4 ? i += "\n" + new Array(t3.length + 4).join(" ") : o < r2.length - 2 && (i += " ");
            }
            console.log(i);
          }, testSpeed: function(t3, e3, r2) {
            for (var n2 = new Date().getTime(), i = new Uint8Array(e3), o = 0; o < e3; o++)
              i[o] = o % 256;
            var s = new Date().getTime();
            for (console.log("Generated random input in " + (s - n2) + "ms"), n2 = s, o = 0; o < r2; o++) {
              var a = t3(i), h = new Date().getTime(), f = h - n2;
              n2 = h, console.log("Hashed in " + f + "ms: " + a.substring(0, 20) + "..."), console.log(Math.round(e3 / (1 << 20) / (f / 1e3) * 100) / 100 + " MB PER SECOND");
            }
          } };
        }, 39809: (t2, e2, r2) => {
          var n2 = e2;
          n2.bignum = r2(4590), n2.define = r2(22500).define, n2.base = r2(71979), n2.constants = r2(36826), n2.decoders = r2(78307), n2.encoders = r2(56579);
        }, 22500: (t2, e2, r2) => {
          var n2 = r2(39809), i = r2(35717);
          function o(t3, e3) {
            this.name = t3, this.body = e3, this.decoders = {}, this.encoders = {};
          }
          e2.define = function(t3, e3) {
            return new o(t3, e3);
          }, o.prototype._createNamed = function(t3) {
            var e3;
            try {
              e3 = r2(75818).runInThisContext("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})");
            } catch (t4) {
              e3 = function(t5) {
                this._initNamed(t5);
              };
            }
            return i(e3, t3), e3.prototype._initNamed = function(e4) {
              t3.call(this, e4);
            }, new e3(this);
          }, o.prototype._getDecoder = function(t3) {
            return this.decoders.hasOwnProperty(t3) || (this.decoders[t3] = this._createNamed(n2.decoders[t3])), this.decoders[t3];
          }, o.prototype.decode = function(t3, e3, r3) {
            return this._getDecoder(e3).decode(t3, r3);
          }, o.prototype._getEncoder = function(t3) {
            return this.encoders.hasOwnProperty(t3) || (this.encoders[t3] = this._createNamed(n2.encoders[t3])), this.encoders[t3];
          }, o.prototype.encode = function(t3, e3, r3) {
            return this._getEncoder(e3).encode(t3, r3);
          };
        }, 36625: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(71979).Reporter, o = r2(48764).Buffer;
          function s(t3, e3) {
            i.call(this, e3), o.isBuffer(t3) ? (this.base = t3, this.offset = 0, this.length = t3.length) : this.error("Input not Buffer");
          }
          function a(t3, e3) {
            if (Array.isArray(t3))
              this.length = 0, this.value = t3.map(function(t4) {
                return t4 instanceof a || (t4 = new a(t4, e3)), this.length += t4.length, t4;
              }, this);
            else if ("number" == typeof t3) {
              if (!(0 <= t3 && t3 <= 255))
                return e3.error("non-byte EncoderBuffer value");
              this.value = t3, this.length = 1;
            } else if ("string" == typeof t3)
              this.value = t3, this.length = o.byteLength(t3);
            else {
              if (!o.isBuffer(t3))
                return e3.error("Unsupported type: " + typeof t3);
              this.value = t3, this.length = t3.length;
            }
          }
          n2(s, i), e2.C = s, s.prototype.save = function() {
            return { offset: this.offset, reporter: i.prototype.save.call(this) };
          }, s.prototype.restore = function(t3) {
            var e3 = new s(this.base);
            return e3.offset = t3.offset, e3.length = this.offset, this.offset = t3.offset, i.prototype.restore.call(this, t3.reporter), e3;
          }, s.prototype.isEmpty = function() {
            return this.offset === this.length;
          }, s.prototype.readUInt8 = function(t3) {
            return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(t3 || "DecoderBuffer overrun");
          }, s.prototype.skip = function(t3, e3) {
            if (!(this.offset + t3 <= this.length))
              return this.error(e3 || "DecoderBuffer overrun");
            var r3 = new s(this.base);
            return r3._reporterState = this._reporterState, r3.offset = this.offset, r3.length = this.offset + t3, this.offset += t3, r3;
          }, s.prototype.raw = function(t3) {
            return this.base.slice(t3 ? t3.offset : this.offset, this.length);
          }, e2.R = a, a.prototype.join = function(t3, e3) {
            return t3 || (t3 = new o(this.length)), e3 || (e3 = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function(r3) {
              r3.join(t3, e3), e3 += r3.length;
            }) : ("number" == typeof this.value ? t3[e3] = this.value : "string" == typeof this.value ? t3.write(this.value, e3) : o.isBuffer(this.value) && this.value.copy(t3, e3), e3 += this.length)), t3;
          };
        }, 71979: (t2, e2, r2) => {
          var n2 = e2;
          n2.Reporter = r2(98465).b, n2.DecoderBuffer = r2(36625).C, n2.EncoderBuffer = r2(36625).R, n2.Node = r2(41949);
        }, 41949: (t2, e2, r2) => {
          var n2 = r2(71979).Reporter, i = r2(71979).EncoderBuffer, o = r2(79746), s = ["seq", "seqof", "set", "setof", "octstr", "bitstr", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "ia5str", "utf8str"], a = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any"].concat(s);
          function h(t3, e3) {
            var r3 = {};
            this._baseState = r3, r3.enc = t3, r3.parent = e3 || null, r3.children = null, r3.tag = null, r3.args = null, r3.reverseArgs = null, r3.choice = null, r3.optional = false, r3.any = false, r3.obj = false, r3.use = null, r3.useDecoder = null, r3.key = null, r3.default = null, r3.explicit = null, r3.implicit = null, r3.parent || (r3.children = [], this._wrap());
          }
          t2.exports = h;
          var f = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit"];
          h.prototype.clone = function() {
            var t3 = this._baseState, e3 = {};
            f.forEach(function(r4) {
              e3[r4] = t3[r4];
            });
            var r3 = new this.constructor(e3.parent);
            return r3._baseState = e3, r3;
          }, h.prototype._wrap = function() {
            var t3 = this._baseState;
            a.forEach(function(e3) {
              this[e3] = function() {
                var r3 = new this.constructor(this);
                return t3.children.push(r3), r3[e3].apply(r3, arguments);
              };
            }, this);
          }, h.prototype._init = function(t3) {
            var e3 = this._baseState;
            o(null === e3.parent), t3.call(this), e3.children = e3.children.filter(function(t4) {
              return t4._baseState.parent === this;
            }, this), o.equal(e3.children.length, 1, "Root node can have only one child");
          }, h.prototype._useArgs = function(t3) {
            var e3 = this._baseState, r3 = t3.filter(function(t4) {
              return t4 instanceof this.constructor;
            }, this);
            t3 = t3.filter(function(t4) {
              return !(t4 instanceof this.constructor);
            }, this), 0 !== r3.length && (o(null === e3.children), e3.children = r3, r3.forEach(function(t4) {
              t4._baseState.parent = this;
            }, this)), 0 !== t3.length && (o(null === e3.args), e3.args = t3, e3.reverseArgs = t3.map(function(t4) {
              if ("object" != typeof t4 || t4.constructor !== Object)
                return t4;
              var e4 = {};
              return Object.keys(t4).forEach(function(r4) {
                r4 == (0 | r4) && (r4 |= 0);
                var n3 = t4[r4];
                e4[n3] = r4;
              }), e4;
            }));
          }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function(t3) {
            h.prototype[t3] = function() {
              var e3 = this._baseState;
              throw new Error(t3 + " not implemented for encoding: " + e3.enc);
            };
          }), s.forEach(function(t3) {
            h.prototype[t3] = function() {
              var e3 = this._baseState, r3 = Array.prototype.slice.call(arguments);
              return o(null === e3.tag), e3.tag = t3, this._useArgs(r3), this;
            };
          }), h.prototype.use = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.use), e3.use = t3, this;
          }, h.prototype.optional = function() {
            return this._baseState.optional = true, this;
          }, h.prototype.def = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.default), e3.default = t3, e3.optional = true, this;
          }, h.prototype.explicit = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.explicit && null === e3.implicit), e3.explicit = t3, this;
          }, h.prototype.implicit = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.explicit && null === e3.implicit), e3.implicit = t3, this;
          }, h.prototype.obj = function() {
            var t3 = this._baseState, e3 = Array.prototype.slice.call(arguments);
            return t3.obj = true, 0 !== e3.length && this._useArgs(e3), this;
          }, h.prototype.key = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.key), e3.key = t3, this;
          }, h.prototype.any = function() {
            return this._baseState.any = true, this;
          }, h.prototype.choice = function(t3) {
            var e3 = this._baseState;
            return o(null === e3.choice), e3.choice = t3, this._useArgs(Object.keys(t3).map(function(e4) {
              return t3[e4];
            })), this;
          }, h.prototype._decode = function(t3) {
            var e3 = this._baseState;
            if (null === e3.parent)
              return t3.wrapResult(e3.children[0]._decode(t3));
            var r3, n3, i2 = e3.default, o2 = true;
            if (null !== e3.key && (r3 = t3.enterKey(e3.key)), e3.optional) {
              var s2 = null;
              if (null !== e3.explicit ? s2 = e3.explicit : null !== e3.implicit ? s2 = e3.implicit : null !== e3.tag && (s2 = e3.tag), null !== s2 || e3.any) {
                if (o2 = this._peekTag(t3, s2, e3.any), t3.isError(o2))
                  return o2;
              } else {
                var a2 = t3.save();
                try {
                  null === e3.choice ? this._decodeGeneric(e3.tag, t3) : this._decodeChoice(t3), o2 = true;
                } catch (t4) {
                  o2 = false;
                }
                t3.restore(a2);
              }
            }
            if (e3.obj && o2 && (n3 = t3.enterObject()), o2) {
              if (null !== e3.explicit) {
                var h2 = this._decodeTag(t3, e3.explicit);
                if (t3.isError(h2))
                  return h2;
                t3 = h2;
              }
              if (null === e3.use && null === e3.choice) {
                e3.any && (a2 = t3.save());
                var f2 = this._decodeTag(t3, null !== e3.implicit ? e3.implicit : e3.tag, e3.any);
                if (t3.isError(f2))
                  return f2;
                e3.any ? i2 = t3.raw(a2) : t3 = f2;
              }
              if (i2 = e3.any ? i2 : null === e3.choice ? this._decodeGeneric(e3.tag, t3) : this._decodeChoice(t3), t3.isError(i2))
                return i2;
              if (!e3.any && null === e3.choice && null !== e3.children && e3.children.some(function(e4) {
                e4._decode(t3);
              }))
                return err;
            }
            return e3.obj && o2 && (i2 = t3.leaveObject(n3)), null === e3.key || null === i2 && true !== o2 || t3.leaveKey(r3, e3.key, i2), i2;
          }, h.prototype._decodeGeneric = function(t3, e3) {
            var r3 = this._baseState;
            return "seq" === t3 || "set" === t3 ? null : "seqof" === t3 || "setof" === t3 ? this._decodeList(e3, t3, r3.args[0]) : "octstr" === t3 || "bitstr" === t3 || "ia5str" === t3 || "utf8str" === t3 ? this._decodeStr(e3, t3) : "objid" === t3 && r3.args ? this._decodeObjid(e3, r3.args[0], r3.args[1]) : "objid" === t3 ? this._decodeObjid(e3, null, null) : "gentime" === t3 || "utctime" === t3 ? this._decodeTime(e3, t3) : "null_" === t3 ? this._decodeNull(e3) : "bool" === t3 ? this._decodeBool(e3) : "int" === t3 || "enum" === t3 ? this._decodeInt(e3, r3.args && r3.args[0]) : null !== r3.use ? this._getUse(r3.use, e3._reporterState.obj)._decode(e3) : e3.error("unknown tag: " + t3);
          }, h.prototype._getUse = function(t3, e3) {
            var r3 = this._baseState;
            return r3.useDecoder = this._use(t3, e3), o(null === r3.useDecoder._baseState.parent), r3.useDecoder = r3.useDecoder._baseState.children[0], r3.implicit !== r3.useDecoder._baseState.implicit && (r3.useDecoder = r3.useDecoder.clone(), r3.useDecoder._baseState.implicit = r3.implicit), r3.useDecoder;
          }, h.prototype._decodeChoice = function(t3) {
            var e3 = this._baseState, r3 = null, n3 = false;
            return Object.keys(e3.choice).some(function(i2) {
              var o2 = t3.save(), s2 = e3.choice[i2];
              try {
                var a2 = s2._decode(t3);
                if (t3.isError(a2))
                  return false;
                r3 = { type: i2, value: a2 }, n3 = true;
              } catch (e4) {
                return t3.restore(o2), false;
              }
              return true;
            }, this), n3 ? r3 : t3.error("Choice not matched");
          }, h.prototype._createEncoderBuffer = function(t3) {
            return new i(t3, this.reporter);
          }, h.prototype._encode = function(t3, e3, r3) {
            var n3 = this._baseState;
            if (null === n3.default || n3.default !== t3) {
              var i2 = this._encodeValue(t3, e3, r3);
              if (void 0 !== i2 && !this._skipDefault(i2, e3, r3))
                return i2;
            }
          }, h.prototype._encodeValue = function(t3, e3, r3) {
            var i2 = this._baseState;
            if (null === i2.parent)
              return i2.children[0]._encode(t3, e3 || new n2());
            var o2 = null;
            if (this.reporter = e3, i2.optional && void 0 === t3) {
              if (null === i2.default)
                return;
              t3 = i2.default;
            }
            var s2 = null, a2 = false;
            if (i2.any)
              o2 = this._createEncoderBuffer(t3);
            else if (i2.choice)
              o2 = this._encodeChoice(t3, e3);
            else if (i2.children)
              s2 = i2.children.map(function(r4) {
                if ("null_" === r4._baseState.tag)
                  return r4._encode(null, e3, t3);
                if (null === r4._baseState.key)
                  return e3.error("Child should have a key");
                var n3 = e3.enterKey(r4._baseState.key);
                if ("object" != typeof t3)
                  return e3.error("Child expected, but input is not object");
                var i3 = r4._encode(t3[r4._baseState.key], e3, t3);
                return e3.leaveKey(n3), i3;
              }, this).filter(function(t4) {
                return t4;
              }), s2 = this._createEncoderBuffer(s2);
            else if ("seqof" === i2.tag || "setof" === i2.tag) {
              if (!i2.args || 1 !== i2.args.length)
                return e3.error("Too many args for : " + i2.tag);
              if (!Array.isArray(t3))
                return e3.error("seqof/setof, but data is not Array");
              var h2 = this.clone();
              h2._baseState.implicit = null, s2 = this._createEncoderBuffer(t3.map(function(r4) {
                var n3 = this._baseState;
                return this._getUse(n3.args[0], t3)._encode(r4, e3);
              }, h2));
            } else
              null !== i2.use ? o2 = this._getUse(i2.use, r3)._encode(t3, e3) : (s2 = this._encodePrimitive(i2.tag, t3), a2 = true);
            if (!i2.any && null === i2.choice) {
              var f2 = null !== i2.implicit ? i2.implicit : i2.tag, u = null === i2.implicit ? "universal" : "context";
              null === f2 ? null === i2.use && e3.error("Tag could be ommited only for .use()") : null === i2.use && (o2 = this._encodeComposite(f2, a2, u, s2));
            }
            return null !== i2.explicit && (o2 = this._encodeComposite(i2.explicit, false, "context", o2)), o2;
          }, h.prototype._encodeChoice = function(t3, e3) {
            var r3 = this._baseState, n3 = r3.choice[t3.type];
            return n3 || o(false, t3.type + " not found in " + JSON.stringify(Object.keys(r3.choice))), n3._encode(t3.value, e3);
          }, h.prototype._encodePrimitive = function(t3, e3) {
            var r3 = this._baseState;
            if ("octstr" === t3 || "bitstr" === t3 || "ia5str" === t3)
              return this._encodeStr(e3, t3);
            if ("utf8str" === t3)
              return this._encodeStr(e3, t3);
            if ("objid" === t3 && r3.args)
              return this._encodeObjid(e3, r3.reverseArgs[0], r3.args[1]);
            if ("objid" === t3)
              return this._encodeObjid(e3, null, null);
            if ("gentime" === t3 || "utctime" === t3)
              return this._encodeTime(e3, t3);
            if ("null_" === t3)
              return this._encodeNull();
            if ("int" === t3 || "enum" === t3)
              return this._encodeInt(e3, r3.args && r3.reverseArgs[0]);
            if ("bool" === t3)
              return this._encodeBool(e3);
            throw new Error("Unsupported tag: " + t3);
          };
        }, 98465: (t2, e2, r2) => {
          var n2 = r2(35717);
          function i(t3) {
            this._reporterState = { obj: null, path: [], options: t3 || {}, errors: [] };
          }
          function o(t3, e3) {
            this.path = t3, this.rethrow(e3);
          }
          e2.b = i, i.prototype.isError = function(t3) {
            return t3 instanceof o;
          }, i.prototype.save = function() {
            var t3 = this._reporterState;
            return { obj: t3.obj, pathLen: t3.path.length };
          }, i.prototype.restore = function(t3) {
            var e3 = this._reporterState;
            e3.obj = t3.obj, e3.path = e3.path.slice(0, t3.pathLen);
          }, i.prototype.enterKey = function(t3) {
            return this._reporterState.path.push(t3);
          }, i.prototype.leaveKey = function(t3, e3, r3) {
            var n3 = this._reporterState;
            n3.path = n3.path.slice(0, t3 - 1), null !== n3.obj && (n3.obj[e3] = r3);
          }, i.prototype.enterObject = function() {
            var t3 = this._reporterState, e3 = t3.obj;
            return t3.obj = {}, e3;
          }, i.prototype.leaveObject = function(t3) {
            var e3 = this._reporterState, r3 = e3.obj;
            return e3.obj = t3, r3;
          }, i.prototype.error = function(t3) {
            var e3, r3 = this._reporterState, n3 = t3 instanceof o;
            if (e3 = n3 ? t3 : new o(r3.path.map(function(t4) {
              return "[" + JSON.stringify(t4) + "]";
            }).join(""), t3.message || t3, t3.stack), !r3.options.partial)
              throw e3;
            return n3 || r3.errors.push(e3), e3;
          }, i.prototype.wrapResult = function(t3) {
            var e3 = this._reporterState;
            return e3.options.partial ? { result: this.isError(t3) ? null : t3, errors: e3.errors } : t3;
          }, n2(o, Error), o.prototype.rethrow = function(t3) {
            return this.message = t3 + " at: " + (this.path || "(shallow)"), Error.captureStackTrace(this, o), this;
          };
        }, 70160: (t2, e2, r2) => {
          var n2 = r2(36826);
          e2.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" }, e2.tagClassByName = n2._reverse(e2.tagClass), e2.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" }, e2.tagByName = n2._reverse(e2.tag);
        }, 36826: (t2, e2, r2) => {
          var n2 = e2;
          n2._reverse = function(t3) {
            var e3 = {};
            return Object.keys(t3).forEach(function(r3) {
              (0 | r3) == r3 && (r3 |= 0);
              var n3 = t3[r3];
              e3[n3] = r3;
            }), e3;
          }, n2.der = r2(70160);
        }, 41671: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(39809), o = i.base, s = i.bignum, a = i.constants.der;
          function h(t3) {
            this.enc = "der", this.name = t3.name, this.entity = t3, this.tree = new f(), this.tree._init(t3.body);
          }
          function f(t3) {
            o.Node.call(this, "der", t3);
          }
          function u(t3, e3) {
            var r3 = t3.readUInt8(e3);
            if (t3.isError(r3))
              return r3;
            var n3 = a.tagClass[r3 >> 6], i2 = 0 == (32 & r3);
            if (31 == (31 & r3)) {
              var o2 = r3;
              for (r3 = 0; 128 == (128 & o2); ) {
                if (o2 = t3.readUInt8(e3), t3.isError(o2))
                  return o2;
                r3 <<= 7, r3 |= 127 & o2;
              }
            } else
              r3 &= 31;
            return { cls: n3, primitive: i2, tag: r3, tagStr: a.tag[r3] };
          }
          function c(t3, e3, r3) {
            var n3 = t3.readUInt8(r3);
            if (t3.isError(n3))
              return n3;
            if (!e3 && 128 === n3)
              return null;
            if (0 == (128 & n3))
              return n3;
            var i2 = 127 & n3;
            if (i2 >= 4)
              return t3.error("length octect is too long");
            n3 = 0;
            for (var o2 = 0; o2 < i2; o2++) {
              n3 <<= 8;
              var s2 = t3.readUInt8(r3);
              if (t3.isError(s2))
                return s2;
              n3 |= s2;
            }
            return n3;
          }
          t2.exports = h, h.prototype.decode = function(t3, e3) {
            return t3 instanceof o.DecoderBuffer || (t3 = new o.DecoderBuffer(t3, e3)), this.tree._decode(t3, e3);
          }, n2(f, o.Node), f.prototype._peekTag = function(t3, e3, r3) {
            if (t3.isEmpty())
              return false;
            var n3 = t3.save(), i2 = u(t3, 'Failed to peek tag: "' + e3 + '"');
            return t3.isError(i2) ? i2 : (t3.restore(n3), i2.tag === e3 || i2.tagStr === e3 || r3);
          }, f.prototype._decodeTag = function(t3, e3, r3) {
            var n3 = u(t3, 'Failed to decode tag of "' + e3 + '"');
            if (t3.isError(n3))
              return n3;
            var i2 = c(t3, n3.primitive, 'Failed to get length of "' + e3 + '"');
            if (t3.isError(i2))
              return i2;
            if (!r3 && n3.tag !== e3 && n3.tagStr !== e3 && n3.tagStr + "of" !== e3)
              return t3.error('Failed to match tag: "' + e3 + '"');
            if (n3.primitive || null !== i2)
              return t3.skip(i2, 'Failed to match body of: "' + e3 + '"');
            var o2 = t3.save(), s2 = this._skipUntilEnd(t3, 'Failed to skip indefinite length body: "' + this.tag + '"');
            return t3.isError(s2) ? s2 : (i2 = t3.offset - o2.offset, t3.restore(o2), t3.skip(i2, 'Failed to match body of: "' + e3 + '"'));
          }, f.prototype._skipUntilEnd = function(t3, e3) {
            for (; ; ) {
              var r3 = u(t3, e3);
              if (t3.isError(r3))
                return r3;
              var n3, i2 = c(t3, r3.primitive, e3);
              if (t3.isError(i2))
                return i2;
              if (n3 = r3.primitive || null !== i2 ? t3.skip(i2) : this._skipUntilEnd(t3, e3), t3.isError(n3))
                return n3;
              if ("end" === r3.tagStr)
                break;
            }
          }, f.prototype._decodeList = function(t3, e3, r3) {
            for (var n3 = []; !t3.isEmpty(); ) {
              var i2 = this._peekTag(t3, "end");
              if (t3.isError(i2))
                return i2;
              var o2 = r3.decode(t3, "der");
              if (t3.isError(o2) && i2)
                break;
              n3.push(o2);
            }
            return n3;
          }, f.prototype._decodeStr = function(t3, e3) {
            if ("octstr" === e3)
              return t3.raw();
            if ("bitstr" === e3) {
              var r3 = t3.readUInt8();
              return t3.isError(r3) ? r3 : { unused: r3, data: t3.raw() };
            }
            return "ia5str" === e3 || "utf8str" === e3 ? t3.raw().toString() : this.error("Decoding of string type: " + e3 + " unsupported");
          }, f.prototype._decodeObjid = function(t3, e3, r3) {
            for (var n3 = [], i2 = 0; !t3.isEmpty(); ) {
              var o2 = t3.readUInt8();
              i2 <<= 7, i2 |= 127 & o2, 0 == (128 & o2) && (n3.push(i2), i2 = 0);
            }
            128 & o2 && n3.push(i2);
            var s2 = n3[0] / 40 | 0, a2 = n3[0] % 40;
            return result = r3 ? n3 : [s2, a2].concat(n3.slice(1)), e3 && (result = e3[result.join(" ")]), result;
          }, f.prototype._decodeTime = function(t3, e3) {
            var r3 = t3.raw().toString();
            if ("gentime" === e3)
              var n3 = 0 | r3.slice(0, 4), i2 = 0 | r3.slice(4, 6), o2 = 0 | r3.slice(6, 8), s2 = 0 | r3.slice(8, 10), a2 = 0 | r3.slice(10, 12), h2 = 0 | r3.slice(12, 14);
            else {
              if ("utctime" !== e3)
                return this.error("Decoding " + e3 + " time is not supported yet");
              n3 = 0 | r3.slice(0, 2), i2 = 0 | r3.slice(2, 4), o2 = 0 | r3.slice(4, 6), s2 = 0 | r3.slice(6, 8), a2 = 0 | r3.slice(8, 10), h2 = 0 | r3.slice(10, 12), n3 = n3 < 70 ? 2e3 + n3 : 1900 + n3;
            }
            return Date.UTC(n3, i2 - 1, o2, s2, a2, h2, 0);
          }, f.prototype._decodeNull = function(t3) {
            return null;
          }, f.prototype._decodeBool = function(t3) {
            var e3 = t3.readUInt8();
            return t3.isError(e3) ? e3 : 0 !== e3;
          }, f.prototype._decodeInt = function(t3, e3) {
            var r3 = t3.raw(), n3 = new s(r3);
            return e3 && (n3 = e3[n3.toString(10)] || n3), n3;
          }, f.prototype._use = function(t3, e3) {
            return "function" == typeof t3 && (t3 = t3(e3)), t3._getDecoder("der").tree;
          };
        }, 78307: (t2, e2, r2) => {
          var n2 = e2;
          n2.der = r2(41671), n2.pem = r2(59631);
        }, 59631: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(48764).Buffer, o = (r2(39809), r2(41671));
          function s(t3) {
            o.call(this, t3), this.enc = "pem";
          }
          n2(s, o), t2.exports = s, s.prototype.decode = function(t3, e3) {
            for (var r3 = t3.toString().split(/[\r\n]+/g), n3 = e3.label.toUpperCase(), s2 = /^-----(BEGIN|END) ([^-]+)-----$/, a = -1, h = -1, f = 0; f < r3.length; f++) {
              var u = r3[f].match(s2);
              if (null !== u && u[2] === n3) {
                if (-1 !== a) {
                  if ("END" !== u[1])
                    break;
                  h = f;
                  break;
                }
                if ("BEGIN" !== u[1])
                  break;
                a = f;
              }
            }
            if (-1 === a || -1 === h)
              throw new Error("PEM section not found for: " + n3);
            var c = r3.slice(a + 1, h).join("");
            c.replace(/[^a-z0-9\+\/=]+/gi, "");
            var d = new i(c, "base64");
            return o.prototype.decode.call(this, d, e3);
          };
        }, 66984: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(48764).Buffer, o = r2(39809), s = o.base, a = (o.bignum, o.constants.der);
          function h(t3) {
            this.enc = "der", this.name = t3.name, this.entity = t3, this.tree = new f(), this.tree._init(t3.body);
          }
          function f(t3) {
            s.Node.call(this, "der", t3);
          }
          function u(t3) {
            return t3 < 10 ? "0" + t3 : t3;
          }
          t2.exports = h, h.prototype.encode = function(t3, e3) {
            return this.tree._encode(t3, e3).join();
          }, n2(f, s.Node), f.prototype._encodeComposite = function(t3, e3, r3, n3) {
            var o2, s2 = function(t4, e4, r4, n4) {
              var i2;
              if ("seqof" === t4 ? t4 = "seq" : "setof" === t4 && (t4 = "set"), a.tagByName.hasOwnProperty(t4))
                i2 = a.tagByName[t4];
              else {
                if ("number" != typeof t4 || (0 | t4) !== t4)
                  return n4.error("Unknown tag: " + t4);
                i2 = t4;
              }
              return i2 >= 31 ? n4.error("Multi-octet tag encoding unsupported") : (e4 || (i2 |= 32), i2 | a.tagClassByName[r4 || "universal"] << 6);
            }(t3, e3, r3, this.reporter);
            if (n3.length < 128)
              return (o2 = new i(2))[0] = s2, o2[1] = n3.length, this._createEncoderBuffer([o2, n3]);
            for (var h2 = 1, f2 = n3.length; f2 >= 256; f2 >>= 8)
              h2++;
            (o2 = new i(2 + h2))[0] = s2, o2[1] = 128 | h2, f2 = 1 + h2;
            for (var u2 = n3.length; u2 > 0; f2--, u2 >>= 8)
              o2[f2] = 255 & u2;
            return this._createEncoderBuffer([o2, n3]);
          }, f.prototype._encodeStr = function(t3, e3) {
            return "octstr" === e3 ? this._createEncoderBuffer(t3) : "bitstr" === e3 ? this._createEncoderBuffer([0 | t3.unused, t3.data]) : "ia5str" === e3 || "utf8str" === e3 ? this._createEncoderBuffer(t3) : this.reporter.error("Encoding of string type: " + e3 + " unsupported");
          }, f.prototype._encodeObjid = function(t3, e3, r3) {
            if ("string" == typeof t3) {
              if (!e3)
                return this.reporter.error("string objid given, but no values map found");
              if (!e3.hasOwnProperty(t3))
                return this.reporter.error("objid not found in values map");
              t3 = e3[t3].split(/[\s\.]+/g);
              for (var n3 = 0; n3 < t3.length; n3++)
                t3[n3] |= 0;
            } else if (Array.isArray(t3))
              for (t3 = t3.slice(), n3 = 0; n3 < t3.length; n3++)
                t3[n3] |= 0;
            if (!Array.isArray(t3))
              return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t3));
            if (!r3) {
              if (t3[1] >= 40)
                return this.reporter.error("Second objid identifier OOB");
              t3.splice(0, 2, 40 * t3[0] + t3[1]);
            }
            var o2 = 0;
            for (n3 = 0; n3 < t3.length; n3++) {
              var s2 = t3[n3];
              for (o2++; s2 >= 128; s2 >>= 7)
                o2++;
            }
            var a2 = new i(o2), h2 = a2.length - 1;
            for (n3 = t3.length - 1; n3 >= 0; n3--)
              for (s2 = t3[n3], a2[h2--] = 127 & s2; (s2 >>= 7) > 0; )
                a2[h2--] = 128 | 127 & s2;
            return this._createEncoderBuffer(a2);
          }, f.prototype._encodeTime = function(t3, e3) {
            var r3, n3 = new Date(t3);
            return "gentime" === e3 ? r3 = [u(n3.getFullYear()), u(n3.getUTCMonth() + 1), u(n3.getUTCDate()), u(n3.getUTCHours()), u(n3.getUTCMinutes()), u(n3.getUTCSeconds()), "Z"].join("") : "utctime" === e3 ? r3 = [u(n3.getFullYear() % 100), u(n3.getUTCMonth() + 1), u(n3.getUTCDate()), u(n3.getUTCHours()), u(n3.getUTCMinutes()), u(n3.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + e3 + " time is not supported yet"), this._encodeStr(r3, "octstr");
          }, f.prototype._encodeNull = function() {
            return this._createEncoderBuffer("");
          }, f.prototype._encodeInt = function(t3, e3) {
            if ("string" == typeof t3) {
              if (!e3)
                return this.reporter.error("String int or enum given, but no values map");
              if (!e3.hasOwnProperty(t3))
                return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t3));
              t3 = e3[t3];
            }
            if ("number" != typeof t3 && !i.isBuffer(t3)) {
              var r3 = t3.toArray();
              false === t3.sign && 128 & r3[0] && r3.unshift(0), t3 = new i(r3);
            }
            if (i.isBuffer(t3)) {
              var n3 = t3.length;
              0 === t3.length && n3++;
              var o2 = new i(n3);
              return t3.copy(o2), 0 === t3.length && (o2[0] = 0), this._createEncoderBuffer(o2);
            }
            if (t3 < 128)
              return this._createEncoderBuffer(t3);
            if (t3 < 256)
              return this._createEncoderBuffer([0, t3]);
            n3 = 1;
            for (var s2 = t3; s2 >= 256; s2 >>= 8)
              n3++;
            for (s2 = (o2 = new Array(n3)).length - 1; s2 >= 0; s2--)
              o2[s2] = 255 & t3, t3 >>= 8;
            return 128 & o2[0] && o2.unshift(0), this._createEncoderBuffer(new i(o2));
          }, f.prototype._encodeBool = function(t3) {
            return this._createEncoderBuffer(t3 ? 255 : 0);
          }, f.prototype._use = function(t3, e3) {
            return "function" == typeof t3 && (t3 = t3(e3)), t3._getEncoder("der").tree;
          }, f.prototype._skipDefault = function(t3, e3, r3) {
            var n3, i2 = this._baseState;
            if (null === i2.default)
              return false;
            var o2 = t3.join();
            if (void 0 === i2.defaultBuffer && (i2.defaultBuffer = this._encodeValue(i2.default, e3, r3).join()), o2.length !== i2.defaultBuffer.length)
              return false;
            for (n3 = 0; n3 < o2.length; n3++)
              if (o2[n3] !== i2.defaultBuffer[n3])
                return false;
            return true;
          };
        }, 56579: (t2, e2, r2) => {
          var n2 = e2;
          n2.der = r2(66984), n2.pem = r2(2883);
        }, 2883: (t2, e2, r2) => {
          var n2 = r2(35717), i = (r2(48764).Buffer, r2(39809), r2(66984));
          function o(t3) {
            i.call(this, t3), this.enc = "pem";
          }
          n2(o, i), t2.exports = o, o.prototype.encode = function(t3, e3) {
            for (var r3 = i.prototype.encode.call(this, t3).toString("base64"), n3 = ["-----BEGIN " + e3.label + "-----"], o2 = 0; o2 < r3.length; o2 += 64)
              n3.push(r3.slice(o2, o2 + 64));
            return n3.push("-----END " + e3.label + "-----"), n3.join("\n");
          };
        }, 4590: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 78246: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2, i = {};
          e2.wordlists = i, e2._default = n2;
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/czech.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.czech = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/chinese_simplified.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.chinese_simplified = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/chinese_traditional.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.chinese_traditional = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/korean.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.korean = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/french.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.french = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/italian.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.italian = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/spanish.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.spanish = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/japanese.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.japanese = n2, i.JA = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(Object(function() {
              var t3 = new Error("Cannot find module './wordlists/portuguese.json'");
              throw t3.code = "MODULE_NOT_FOUND", t3;
            }())), i.portuguese = n2;
          } catch (t3) {
          }
          try {
            e2._default = n2 = r2(24573), i.english = n2, i.EN = n2;
          } catch (t3) {
          }
        }, 64624: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2 = r2(23482), i = r2(25632), o = r2(61798), s = r2(78246), a = s._default, h = "Invalid mnemonic", f = "Invalid entropy", u = "A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";
          function c(t3) {
            return (t3 || "").normalize("NFKD");
          }
          function d(t3, e3, r3) {
            for (; t3.length < r3; )
              t3 = e3 + t3;
            return t3;
          }
          function l(t3) {
            return parseInt(t3, 2);
          }
          function p(t3) {
            return t3.map(function(t4) {
              return d(t4.toString(2), "0", 8);
            }).join("");
          }
          function g(t3) {
            var e3 = 8 * t3.length / 32, r3 = n2("sha256").update(t3).digest();
            return p(Array.from(r3)).slice(0, e3);
          }
          function y(t3) {
            return "mnemonic" + (t3 || "");
          }
          function m(t3, e3) {
            if (!(e3 = e3 || a))
              throw new Error(u);
            var r3 = c(t3).split(" ");
            if (r3.length % 3 != 0)
              throw new Error(h);
            var n3 = r3.map(function(t4) {
              var r4 = e3.indexOf(t4);
              if (-1 === r4)
                throw new Error(h);
              return d(r4.toString(2), "0", 11);
            }).join(""), i2 = 32 * Math.floor(n3.length / 33), o2 = n3.slice(0, i2), s2 = n3.slice(i2), p2 = o2.match(/(.{1,8})/g).map(l);
            if (p2.length < 16)
              throw new Error(f);
            if (p2.length > 32)
              throw new Error(f);
            if (p2.length % 4 != 0)
              throw new Error(f);
            var y2 = Buffer.from(p2);
            if (g(y2) !== s2)
              throw new Error("Invalid mnemonic checksum");
            return y2.toString("hex");
          }
          function v(t3, e3) {
            if (Buffer.isBuffer(t3) || (t3 = Buffer.from(t3, "hex")), !(e3 = e3 || a))
              throw new Error(u);
            if (t3.length < 16)
              throw new TypeError(f);
            if (t3.length > 32)
              throw new TypeError(f);
            if (t3.length % 4 != 0)
              throw new TypeError(f);
            var r3 = (p(Array.from(t3)) + g(t3)).match(/(.{1,11})/g).map(function(t4) {
              var r4 = l(t4);
              return e3[r4];
            });
            return "\u3042\u3044\u3053\u304F\u3057\u3093" === e3[0] ? r3.join("\u3000") : r3.join(" ");
          }
          e2.mnemonicToSeedSync = function(t3, e3) {
            var r3 = Buffer.from(c(t3), "utf8"), n3 = Buffer.from(y(c(e3)), "utf8");
            return i.pbkdf2Sync(r3, n3, 2048, 64, "sha512");
          }, e2.mnemonicToSeed = function(t3, e3) {
            return Promise.resolve().then(function() {
              return function(t4, e4, r3, n3, o2) {
                return Promise.resolve().then(function() {
                  return new Promise(function(r4, n4) {
                    i.pbkdf2(t4, e4, 2048, 64, "sha512", function(t5, e5) {
                      return t5 ? n4(t5) : r4(e5);
                    });
                  });
                });
              }(Buffer.from(c(t3), "utf8"), Buffer.from(y(c(e3)), "utf8"));
            });
          }, e2.mnemonicToEntropy = m, e2.entropyToMnemonic = v, e2.generateMnemonic = function(t3, e3, r3) {
            if ((t3 = t3 || 128) % 32 != 0)
              throw new TypeError(f);
            return v((e3 = e3 || o)(t3 / 8), r3);
          }, e2.validateMnemonic = function(t3, e3) {
            try {
              m(t3, e3);
            } catch (t4) {
              return false;
            }
            return true;
          }, e2.setDefaultWordlist = function(t3) {
            var e3 = s.wordlists[t3];
            if (!e3)
              throw new Error('Could not find wordlist for language "' + t3 + '"');
            a = e3;
          }, e2.getDefaultWordlist = function() {
            if (!a)
              throw new Error("No Default Wordlist set");
            return Object.keys(s.wordlists).filter(function(t3) {
              return "JA" !== t3 && "EN" !== t3 && s.wordlists[t3].every(function(t4, e3) {
                return t4 === a[e3];
              });
            })[0];
          };
          var b = r2(78246);
          e2.wordlists = b.wordlists;
        }, 94385: (t2, e2, r2) => {
          var n2 = r2(58222);
          n2.async = r2(97840), t2.exports = n2;
        }, 97840: (t2, e2, r2) => {
          function n2(t3, e3, r3, n3, i2, o2, s2) {
            try {
              var a2 = t3[o2](s2), h2 = a2.value;
            } catch (t4) {
              return void r3(t4);
            }
            a2.done ? e3(h2) : Promise.resolve(h2).then(n3, i2);
          }
          function i(t3) {
            return function() {
              var e3 = this, r3 = arguments;
              return new Promise(function(i2, o2) {
                var s2 = t3.apply(e3, r3);
                function a2(t4) {
                  n2(s2, i2, o2, a2, h2, "next", t4);
                }
                function h2(t4) {
                  n2(s2, i2, o2, a2, h2, "throw", t4);
                }
                a2(void 0);
              });
            };
          }
          var o = r2(55835), s = r2(24310), a = s.checkAndInit, h = s.smix;
          function f() {
            return (f = i(regeneratorRuntime.mark(function t3(e3, r3, n3, i2, s2, f2, u, c) {
              var d, l, p, g, y, m, v, b, w;
              return regeneratorRuntime.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      d = a(e3, r3, n3, i2, s2, f2, u), l = d.XY, p = d.V, g = d.B32, y = d.x, m = d._X, v = d.B, b = d.tickCallback, w = 0;
                    case 2:
                      if (!(w < s2)) {
                        t4.next = 8;
                        break;
                      }
                      return t4.next = 5, h(v, 128 * w * i2, i2, n3, p, l, m, g, y, b, c);
                    case 5:
                      w++, t4.next = 2;
                      break;
                    case 8:
                      return t4.abrupt("return", o.pbkdf2Sync(e3, v, 1, f2, "sha256"));
                    case 9:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            }))).apply(this, arguments);
          }
          t2.exports = function(t3, e3, r3, n3, i2, o2, s2, a2) {
            return f.apply(this, arguments);
          };
        }, 58222: (t2, e2, r2) => {
          var n2 = r2(55835), i = r2(24310), o = i.checkAndInit, s = i.smixSync;
          t2.exports = function(t3, e3, r3, i2, a, h, f) {
            for (var u = o(t3, e3, r3, i2, a, h, f), c = u.XY, d = u.V, l = u.B32, p = u.x, g = u._X, y = u.B, m = u.tickCallback, v = 0; v < a; v++)
              s(y, 128 * v * i2, i2, r3, d, c, g, l, p, m);
            return n2.pbkdf2Sync(t3, y, 1, h, "sha256");
          };
        }, 24310: (t2, e2, r2) => {
          function n2(t3, e3, r3, n3, i2, o2, s2) {
            try {
              var a2 = t3[o2](s2), h2 = a2.value;
            } catch (t4) {
              return void r3(t4);
            }
            a2.done ? e3(h2) : Promise.resolve(h2).then(n3, i2);
          }
          function i(t3) {
            return function() {
              var e3 = this, r3 = arguments;
              return new Promise(function(i2, o2) {
                var s2 = t3.apply(e3, r3);
                function a2(t4) {
                  n2(s2, i2, o2, a2, h2, "next", t4);
                }
                function h2(t4) {
                  n2(s2, i2, o2, a2, h2, "throw", t4);
                }
                a2(void 0);
              });
            };
          }
          var o = r2(55835), s = 2147483647;
          function a() {
            return (a = i(regeneratorRuntime.mark(function t3(e3, r3, n3, i2, o2, s2, a2, f2, u2, d2, l) {
              var p, g, y, m, v;
              return regeneratorRuntime.wrap(function(t4) {
                for (; ; )
                  switch (t4.prev = t4.next) {
                    case 0:
                      l = l || 5e3, p = 0, g = 128 * n3, e3.copy(s2, p, r3, r3 + g), y = 0;
                    case 5:
                      if (!(y < i2)) {
                        t4.next = 15;
                        break;
                      }
                      if (s2.copy(o2, y * g, p, p + g), y % l != 0) {
                        t4.next = 10;
                        break;
                      }
                      return t4.next = 10, new Promise(function(t5) {
                        return setImmediate(t5);
                      });
                    case 10:
                      h(s2, p, g, n3, a2, f2, u2), d2 && d2();
                    case 12:
                      y++, t4.next = 5;
                      break;
                    case 15:
                      y = 0;
                    case 16:
                      if (!(y < i2)) {
                        t4.next = 28;
                        break;
                      }
                      if (m = p + 64 * (2 * n3 - 1), v = s2.readUInt32LE(m) & i2 - 1, c(o2, v * g, s2, p, g), y % l != 0) {
                        t4.next = 23;
                        break;
                      }
                      return t4.next = 23, new Promise(function(t5) {
                        return setImmediate(t5);
                      });
                    case 23:
                      h(s2, p, g, n3, a2, f2, u2), d2 && d2();
                    case 25:
                      y++, t4.next = 16;
                      break;
                    case 28:
                      s2.copy(e3, r3, p, p + g);
                    case 29:
                    case "end":
                      return t4.stop();
                  }
              }, t3);
            }))).apply(this, arguments);
          }
          function h(t3, e3, r3, n3, i2, o2, s2) {
            var a2;
            for (d(t3, e3 + 64 * (2 * n3 - 1), i2, 0, 64), a2 = 0; a2 < 2 * n3; a2++)
              c(t3, 64 * a2, i2, 0, 64), u(i2, o2, s2), d(i2, 0, t3, r3 + 64 * a2, 64);
            for (a2 = 0; a2 < n3; a2++)
              d(t3, r3 + 2 * a2 * 64, t3, e3 + 64 * a2, 64);
            for (a2 = 0; a2 < n3; a2++)
              d(t3, r3 + 64 * (2 * a2 + 1), t3, e3 + 64 * (a2 + n3), 64);
          }
          function f(t3, e3) {
            return t3 << e3 | t3 >>> 32 - e3;
          }
          function u(t3, e3, r3) {
            var n3;
            for (n3 = 0; n3 < 16; n3++)
              e3[n3] = (255 & t3[4 * n3 + 0]) << 0, e3[n3] |= (255 & t3[4 * n3 + 1]) << 8, e3[n3] |= (255 & t3[4 * n3 + 2]) << 16, e3[n3] |= (255 & t3[4 * n3 + 3]) << 24;
            for (d(e3, 0, r3, 0, 16), n3 = 8; n3 > 0; n3 -= 2)
              r3[4] ^= f(r3[0] + r3[12], 7), r3[8] ^= f(r3[4] + r3[0], 9), r3[12] ^= f(r3[8] + r3[4], 13), r3[0] ^= f(r3[12] + r3[8], 18), r3[9] ^= f(r3[5] + r3[1], 7), r3[13] ^= f(r3[9] + r3[5], 9), r3[1] ^= f(r3[13] + r3[9], 13), r3[5] ^= f(r3[1] + r3[13], 18), r3[14] ^= f(r3[10] + r3[6], 7), r3[2] ^= f(r3[14] + r3[10], 9), r3[6] ^= f(r3[2] + r3[14], 13), r3[10] ^= f(r3[6] + r3[2], 18), r3[3] ^= f(r3[15] + r3[11], 7), r3[7] ^= f(r3[3] + r3[15], 9), r3[11] ^= f(r3[7] + r3[3], 13), r3[15] ^= f(r3[11] + r3[7], 18), r3[1] ^= f(r3[0] + r3[3], 7), r3[2] ^= f(r3[1] + r3[0], 9), r3[3] ^= f(r3[2] + r3[1], 13), r3[0] ^= f(r3[3] + r3[2], 18), r3[6] ^= f(r3[5] + r3[4], 7), r3[7] ^= f(r3[6] + r3[5], 9), r3[4] ^= f(r3[7] + r3[6], 13), r3[5] ^= f(r3[4] + r3[7], 18), r3[11] ^= f(r3[10] + r3[9], 7), r3[8] ^= f(r3[11] + r3[10], 9), r3[9] ^= f(r3[8] + r3[11], 13), r3[10] ^= f(r3[9] + r3[8], 18), r3[12] ^= f(r3[15] + r3[14], 7), r3[13] ^= f(r3[12] + r3[15], 9), r3[14] ^= f(r3[13] + r3[12], 13), r3[15] ^= f(r3[14] + r3[13], 18);
            for (n3 = 0; n3 < 16; ++n3)
              e3[n3] = r3[n3] + e3[n3];
            for (n3 = 0; n3 < 16; n3++) {
              var i2 = 4 * n3;
              t3[i2 + 0] = e3[n3] >> 0 & 255, t3[i2 + 1] = e3[n3] >> 8 & 255, t3[i2 + 2] = e3[n3] >> 16 & 255, t3[i2 + 3] = e3[n3] >> 24 & 255;
            }
          }
          function c(t3, e3, r3, n3, i2) {
            for (var o2 = 0; o2 < i2; o2++)
              r3[n3 + o2] ^= t3[e3 + o2];
          }
          function d(t3, e3, r3, n3, i2) {
            if (Buffer.isBuffer(t3) && Buffer.isBuffer(r3))
              t3.copy(r3, n3, e3, e3 + i2);
            else
              for (; i2--; )
                r3[n3++] = t3[e3++];
          }
          t2.exports = { checkAndInit: function(t3, e3, r3, n3, i2, a2, h2) {
            if (0 === r3 || 0 != (r3 & r3 - 1))
              throw Error("N must be > 0 and a power of 2");
            if (r3 > s / 128 / n3)
              throw Error("Parameter N is too large");
            if (n3 > s / 128 / i2)
              throw Error("Parameter r is too large");
            var f2, u2 = Buffer.alloc(256 * n3), c2 = Buffer.alloc(128 * n3 * r3), d2 = new Int32Array(16), l = new Int32Array(16), p = Buffer.alloc(64), g = o.pbkdf2Sync(t3, e3, 1, 128 * i2 * n3, "sha256");
            if (h2) {
              var y = i2 * r3 * 2, m = 0;
              f2 = function() {
                ++m % 1e3 == 0 && h2({ current: m, total: y, percent: m / y * 100 });
              };
            }
            return { XY: u2, V: c2, B32: d2, x: l, _X: p, B: g, tickCallback: f2 };
          }, smix: function(t3, e3, r3, n3, i2, o2, s2, h2, f2, u2, c2) {
            return a.apply(this, arguments);
          }, smixSync: function(t3, e3, r3, n3, i2, o2, s2, a2, f2, u2) {
            var d2, l = 128 * r3;
            for (t3.copy(o2, 0, e3, e3 + l), d2 = 0; d2 < n3; d2++)
              o2.copy(i2, d2 * l, 0, 0 + l), h(o2, 0, l, r3, s2, a2, f2), u2 && u2();
            for (d2 = 0; d2 < n3; d2++) {
              var p = 0 + 64 * (2 * r3 - 1);
              c(i2, (o2.readUInt32LE(p) & n3 - 1) * l, o2, 0, l), h(o2, 0, l, r3, s2, a2, f2), u2 && u2();
            }
            o2.copy(t3, e3, 0, 0 + l);
          } };
        }, 8442: (t2, e2, r2) => {
          const n2 = r2(99488);
          function i(t3, e3, r3) {
            const n3 = t3[e3] + t3[r3];
            let i2 = t3[e3 + 1] + t3[r3 + 1];
            n3 >= 4294967296 && i2++, t3[e3] = n3, t3[e3 + 1] = i2;
          }
          function o(t3, e3, r3, n3) {
            let i2 = t3[e3] + r3;
            r3 < 0 && (i2 += 4294967296);
            let o2 = t3[e3 + 1] + n3;
            i2 >= 4294967296 && o2++, t3[e3] = i2, t3[e3 + 1] = o2;
          }
          function s(t3, e3) {
            return t3[e3] ^ t3[e3 + 1] << 8 ^ t3[e3 + 2] << 16 ^ t3[e3 + 3] << 24;
          }
          function a(t3, e3, r3, n3, s2, a2) {
            const h2 = c[s2], f2 = c[s2 + 1], d2 = c[a2], l2 = c[a2 + 1];
            i(u, t3, e3), o(u, t3, h2, f2);
            let p2 = u[n3] ^ u[t3], g2 = u[n3 + 1] ^ u[t3 + 1];
            u[n3] = g2, u[n3 + 1] = p2, i(u, r3, n3), p2 = u[e3] ^ u[r3], g2 = u[e3 + 1] ^ u[r3 + 1], u[e3] = p2 >>> 24 ^ g2 << 8, u[e3 + 1] = g2 >>> 24 ^ p2 << 8, i(u, t3, e3), o(u, t3, d2, l2), p2 = u[n3] ^ u[t3], g2 = u[n3 + 1] ^ u[t3 + 1], u[n3] = p2 >>> 16 ^ g2 << 16, u[n3 + 1] = g2 >>> 16 ^ p2 << 16, i(u, r3, n3), p2 = u[e3] ^ u[r3], g2 = u[e3 + 1] ^ u[r3 + 1], u[e3] = g2 >>> 31 ^ p2 << 1, u[e3 + 1] = p2 >>> 31 ^ g2 << 1;
          }
          const h = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225]), f = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3].map(function(t3) {
            return 2 * t3;
          })), u = new Uint32Array(32), c = new Uint32Array(32);
          function d(t3, e3) {
            let r3 = 0;
            for (r3 = 0; r3 < 16; r3++)
              u[r3] = t3.h[r3], u[r3 + 16] = h[r3];
            for (u[24] = u[24] ^ t3.t, u[25] = u[25] ^ t3.t / 4294967296, e3 && (u[28] = ~u[28], u[29] = ~u[29]), r3 = 0; r3 < 32; r3++)
              c[r3] = s(t3.b, 4 * r3);
            for (r3 = 0; r3 < 12; r3++)
              a(0, 8, 16, 24, f[16 * r3 + 0], f[16 * r3 + 1]), a(2, 10, 18, 26, f[16 * r3 + 2], f[16 * r3 + 3]), a(4, 12, 20, 28, f[16 * r3 + 4], f[16 * r3 + 5]), a(6, 14, 22, 30, f[16 * r3 + 6], f[16 * r3 + 7]), a(0, 10, 20, 30, f[16 * r3 + 8], f[16 * r3 + 9]), a(2, 12, 22, 24, f[16 * r3 + 10], f[16 * r3 + 11]), a(4, 14, 16, 26, f[16 * r3 + 12], f[16 * r3 + 13]), a(6, 8, 18, 28, f[16 * r3 + 14], f[16 * r3 + 15]);
            for (r3 = 0; r3 < 16; r3++)
              t3.h[r3] = t3.h[r3] ^ u[r3] ^ u[r3 + 16];
          }
          function l(t3, e3) {
            if (0 === t3 || t3 > 64)
              throw new Error("Illegal output length, expected 0 < length <= 64");
            if (e3 && e3.length > 64)
              throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
            const r3 = { b: new Uint8Array(128), h: new Uint32Array(16), t: 0, c: 0, outlen: t3 };
            for (let t4 = 0; t4 < 16; t4++)
              r3.h[t4] = h[t4];
            const n3 = e3 ? e3.length : 0;
            return r3.h[0] ^= 16842752 ^ n3 << 8 ^ t3, e3 && (p(r3, e3), r3.c = 128), r3;
          }
          function p(t3, e3) {
            for (let r3 = 0; r3 < e3.length; r3++)
              128 === t3.c && (t3.t += t3.c, d(t3, false), t3.c = 0), t3.b[t3.c++] = e3[r3];
          }
          function g(t3) {
            for (t3.t += t3.c; t3.c < 128; )
              t3.b[t3.c++] = 0;
            d(t3, true);
            const e3 = new Uint8Array(t3.outlen);
            for (let r3 = 0; r3 < t3.outlen; r3++)
              e3[r3] = t3.h[r3 >> 2] >> 8 * (3 & r3);
            return e3;
          }
          function y(t3, e3, r3) {
            r3 = r3 || 64, t3 = n2.normalizeInput(t3);
            const i2 = l(r3, e3);
            return p(i2, t3), g(i2);
          }
          t2.exports = { blake2b: y, blake2bHex: function(t3, e3, r3) {
            const i2 = y(t3, e3, r3);
            return n2.toHex(i2);
          }, blake2bInit: l, blake2bUpdate: p, blake2bFinal: g };
        }, 99488: (t2) => {
          function e2(t3) {
            return (4294967296 + t3).toString(16).substring(1);
          }
          t2.exports = { normalizeInput: function(t3) {
            let e3;
            if (t3 instanceof Uint8Array)
              e3 = t3;
            else if (t3 instanceof Buffer)
              e3 = new Uint8Array(t3);
            else {
              if ("string" != typeof t3)
                throw new Error("Input must be an string, Buffer or Uint8Array");
              e3 = new Uint8Array(Buffer.from(t3, "utf8"));
            }
            return e3;
          }, toHex: function(t3) {
            return Array.prototype.map.call(t3, function(t4) {
              return (t4 < 16 ? "0" : "") + t4.toString(16);
            }).join("");
          }, debugPrint: function(t3, r2, n2) {
            let i = "\n" + t3 + " = ";
            for (let o = 0; o < r2.length; o += 2) {
              if (32 === n2)
                i += e2(r2[o]).toUpperCase(), i += " ", i += e2(r2[o + 1]).toUpperCase();
              else {
                if (64 !== n2)
                  throw new Error("Invalid size " + n2);
                i += e2(r2[o + 1]).toUpperCase(), i += e2(r2[o]).toUpperCase();
              }
              o % 6 == 4 ? i += "\n" + new Array(t3.length + 4).join(" ") : o < r2.length - 2 && (i += " ");
            }
            console.log(i);
          }, testSpeed: function(t3, e3, r2) {
            let n2 = new Date().getTime();
            const i = new Uint8Array(e3);
            for (let t4 = 0; t4 < e3; t4++)
              i[t4] = t4 % 256;
            const o = new Date().getTime();
            console.log("Generated random input in " + (o - n2) + "ms"), n2 = o;
            for (let o2 = 0; o2 < r2; o2++) {
              const r3 = t3(i), o3 = new Date().getTime(), s = o3 - n2;
              n2 = o3, console.log("Hashed in " + s + "ms: " + r3.substring(0, 20) + "..."), console.log(Math.round(e3 / (1 << 20) / (s / 1e3) * 100) / 100 + " MB PER SECOND");
            }
          } };
        }, 13550: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function n2(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function i(t4, e4) {
              t4.super_ = e4;
              var r3 = function() {
              };
              r3.prototype = e4.prototype, t4.prototype = new r3(), t4.prototype.constructor = t4;
            }
            function o(t4, e4, r3) {
              if (o.isBN(t4))
                return t4;
              this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t4 && ("le" !== e4 && "be" !== e4 || (r3 = e4, e4 = 10), this._init(t4 || 0, e4 || 10, r3 || "be"));
            }
            var s;
            "object" == typeof t3 ? t3.exports = o : e3.BN = o, o.BN = o, o.wordSize = 26;
            try {
              s = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r2(46601).Buffer;
            } catch (t4) {
            }
            function a(t4, e4) {
              var r3 = t4.charCodeAt(e4);
              return r3 >= 48 && r3 <= 57 ? r3 - 48 : r3 >= 65 && r3 <= 70 ? r3 - 55 : r3 >= 97 && r3 <= 102 ? r3 - 87 : void n2(false, "Invalid character in " + t4);
            }
            function h(t4, e4, r3) {
              var n3 = a(t4, r3);
              return r3 - 1 >= e4 && (n3 |= a(t4, r3 - 1) << 4), n3;
            }
            function f(t4, e4, r3, i2) {
              for (var o2 = 0, s2 = 0, a2 = Math.min(t4.length, r3), h2 = e4; h2 < a2; h2++) {
                var f2 = t4.charCodeAt(h2) - 48;
                o2 *= i2, s2 = f2 >= 49 ? f2 - 49 + 10 : f2 >= 17 ? f2 - 17 + 10 : f2, n2(f2 >= 0 && s2 < i2, "Invalid character"), o2 += s2;
              }
              return o2;
            }
            function u(t4, e4) {
              t4.words = e4.words, t4.length = e4.length, t4.negative = e4.negative, t4.red = e4.red;
            }
            if (o.isBN = function(t4) {
              return t4 instanceof o || null !== t4 && "object" == typeof t4 && t4.constructor.wordSize === o.wordSize && Array.isArray(t4.words);
            }, o.max = function(t4, e4) {
              return t4.cmp(e4) > 0 ? t4 : e4;
            }, o.min = function(t4, e4) {
              return t4.cmp(e4) < 0 ? t4 : e4;
            }, o.prototype._init = function(t4, e4, r3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, r3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, r3);
              "hex" === e4 && (e4 = 16), n2(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && (i2++, this.negative = 1), i2 < t4.length && (16 === e4 ? this._parseHex(t4, i2, r3) : (this._parseBase(t4, e4, i2), "le" === r3 && this._initArray(this.toArray(), e4, r3)));
            }, o.prototype._initNumber = function(t4, e4, r3) {
              t4 < 0 && (this.negative = 1, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (n2(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === r3 && this._initArray(this.toArray(), e4, r3);
            }, o.prototype._initArray = function(t4, e4, r3) {
              if (n2("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2, s2, a2 = 0;
              if ("be" === r3)
                for (i2 = t4.length - 1, o2 = 0; i2 >= 0; i2 -= 3)
                  s2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16, this.words[o2] |= s2 << a2 & 67108863, this.words[o2 + 1] = s2 >>> 26 - a2 & 67108863, (a2 += 24) >= 26 && (a2 -= 26, o2++);
              else if ("le" === r3)
                for (i2 = 0, o2 = 0; i2 < t4.length; i2 += 3)
                  s2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[o2] |= s2 << a2 & 67108863, this.words[o2 + 1] = s2 >>> 26 - a2 & 67108863, (a2 += 24) >= 26 && (a2 -= 26, o2++);
              return this._strip();
            }, o.prototype._parseHex = function(t4, e4, r3) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var n3 = 0; n3 < this.length; n3++)
                this.words[n3] = 0;
              var i2, o2 = 0, s2 = 0;
              if ("be" === r3)
                for (n3 = t4.length - 1; n3 >= e4; n3 -= 2)
                  i2 = h(t4, e4, n3) << o2, this.words[s2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, s2 += 1, this.words[s2] |= i2 >>> 26) : o2 += 8;
              else
                for (n3 = (t4.length - e4) % 2 == 0 ? e4 + 1 : e4; n3 < t4.length; n3 += 2)
                  i2 = h(t4, e4, n3) << o2, this.words[s2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, s2 += 1, this.words[s2] |= i2 >>> 26) : o2 += 8;
              this._strip();
            }, o.prototype._parseBase = function(t4, e4, r3) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r3, s2 = o2 % n3, a2 = Math.min(o2, o2 - s2) + r3, h2 = 0, u2 = r3; u2 < a2; u2 += n3)
                h2 = f(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + h2 < 67108864 ? this.words[0] += h2 : this._iaddn(h2);
              if (0 !== s2) {
                var c2 = 1;
                for (h2 = f(t4, u2, t4.length, e4), u2 = 0; u2 < s2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + h2 < 67108864 ? this.words[0] += h2 : this._iaddn(h2);
              }
              this._strip();
            }, o.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.negative = this.negative, t4.red = this.red;
            }, o.prototype._move = function(t4) {
              u(t4, this);
            }, o.prototype.clone = function() {
              var t4 = new o(null);
              return this.copy(t4), t4;
            }, o.prototype._expand = function(t4) {
              for (; this.length < t4; )
                this.words[this.length++] = 0;
              return this;
            }, o.prototype._strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, o.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
            }, "undefined" != typeof Symbol && "function" == typeof Symbol.for)
              try {
                o.prototype[Symbol.for("nodejs.util.inspect.custom")] = c;
              } catch (t4) {
                o.prototype.inspect = c;
              }
            else
              o.prototype.inspect = c;
            function c() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            }
            var d = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], l = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            function g(t4, e4, r3) {
              r3.negative = e4.negative ^ t4.negative;
              var n3 = t4.length + e4.length | 0;
              r3.length = n3, n3 = n3 - 1 | 0;
              var i2 = 0 | t4.words[0], o2 = 0 | e4.words[0], s2 = i2 * o2, a2 = 67108863 & s2, h2 = s2 / 67108864 | 0;
              r3.words[0] = a2;
              for (var f2 = 1; f2 < n3; f2++) {
                for (var u2 = h2 >>> 26, c2 = 67108863 & h2, d2 = Math.min(f2, e4.length - 1), l2 = Math.max(0, f2 - t4.length + 1); l2 <= d2; l2++) {
                  var p2 = f2 - l2 | 0;
                  u2 += (s2 = (i2 = 0 | t4.words[p2]) * (o2 = 0 | e4.words[l2]) + c2) / 67108864 | 0, c2 = 67108863 & s2;
                }
                r3.words[f2] = 0 | c2, h2 = 0 | u2;
              }
              return 0 !== h2 ? r3.words[f2] = 0 | h2 : r3.length--, r3._strip();
            }
            o.prototype.toString = function(t4, e4) {
              var r3;
              if (e4 = 0 | e4 || 1, 16 === (t4 = t4 || 10) || "hex" === t4) {
                r3 = "";
                for (var i2 = 0, o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2], h2 = (16777215 & (a2 << i2 | o2)).toString(16);
                  r3 = 0 != (o2 = a2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? d[6 - h2.length] + h2 + r3 : h2 + r3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (r3 = o2.toString(16) + r3); r3.length % e4 != 0; )
                  r3 = "0" + r3;
                return 0 !== this.negative && (r3 = "-" + r3), r3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var f2 = l[t4], u2 = p[t4];
                r3 = "";
                var c2 = this.clone();
                for (c2.negative = 0; !c2.isZero(); ) {
                  var g2 = c2.modrn(u2).toString(t4);
                  r3 = (c2 = c2.idivn(u2)).isZero() ? g2 + r3 : d[f2 - g2.length] + g2 + r3;
                }
                for (this.isZero() && (r3 = "0" + r3); r3.length % e4 != 0; )
                  r3 = "0" + r3;
                return 0 !== this.negative && (r3 = "-" + r3), r3;
              }
              n2(false, "Base should be between 2 and 36");
            }, o.prototype.toNumber = function() {
              var t4 = this.words[0];
              return 2 === this.length ? t4 += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t4 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n2(false, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t4 : t4;
            }, o.prototype.toJSON = function() {
              return this.toString(16, 2);
            }, s && (o.prototype.toBuffer = function(t4, e4) {
              return this.toArrayLike(s, t4, e4);
            }), o.prototype.toArray = function(t4, e4) {
              return this.toArrayLike(Array, t4, e4);
            }, o.prototype.toArrayLike = function(t4, e4, r3) {
              this._strip();
              var i2 = this.byteLength(), o2 = r3 || Math.max(1, i2);
              n2(i2 <= o2, "byte array longer than desired length"), n2(o2 > 0, "Requested array length <= 0");
              var s2 = function(t5, e5) {
                return t5.allocUnsafe ? t5.allocUnsafe(e5) : new t5(e5);
              }(t4, o2);
              return this["_toArrayLike" + ("le" === e4 ? "LE" : "BE")](s2, i2), s2;
            }, o.prototype._toArrayLikeLE = function(t4, e4) {
              for (var r3 = 0, n3 = 0, i2 = 0, o2 = 0; i2 < this.length; i2++) {
                var s2 = this.words[i2] << o2 | n3;
                t4[r3++] = 255 & s2, r3 < t4.length && (t4[r3++] = s2 >> 8 & 255), r3 < t4.length && (t4[r3++] = s2 >> 16 & 255), 6 === o2 ? (r3 < t4.length && (t4[r3++] = s2 >> 24 & 255), n3 = 0, o2 = 0) : (n3 = s2 >>> 24, o2 += 2);
              }
              if (r3 < t4.length)
                for (t4[r3++] = n3; r3 < t4.length; )
                  t4[r3++] = 0;
            }, o.prototype._toArrayLikeBE = function(t4, e4) {
              for (var r3 = t4.length - 1, n3 = 0, i2 = 0, o2 = 0; i2 < this.length; i2++) {
                var s2 = this.words[i2] << o2 | n3;
                t4[r3--] = 255 & s2, r3 >= 0 && (t4[r3--] = s2 >> 8 & 255), r3 >= 0 && (t4[r3--] = s2 >> 16 & 255), 6 === o2 ? (r3 >= 0 && (t4[r3--] = s2 >> 24 & 255), n3 = 0, o2 = 0) : (n3 = s2 >>> 24, o2 += 2);
              }
              if (r3 >= 0)
                for (t4[r3--] = n3; r3 >= 0; )
                  t4[r3--] = 0;
            }, Math.clz32 ? o.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : o.prototype._countBits = function(t4) {
              var e4 = t4, r3 = 0;
              return e4 >= 4096 && (r3 += 13, e4 >>>= 13), e4 >= 64 && (r3 += 7, e4 >>>= 7), e4 >= 8 && (r3 += 4, e4 >>>= 4), e4 >= 2 && (r3 += 2, e4 >>>= 2), r3 + e4;
            }, o.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r3 = 0;
              return 0 == (8191 & e4) && (r3 += 13, e4 >>>= 13), 0 == (127 & e4) && (r3 += 7, e4 >>>= 7), 0 == (15 & e4) && (r3 += 4, e4 >>>= 4), 0 == (3 & e4) && (r3 += 2, e4 >>>= 2), 0 == (1 & e4) && r3++, r3;
            }, o.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, o.prototype.zeroBits = function() {
              if (this.isZero())
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r3 = this._zeroBits(this.words[e4]);
                if (t4 += r3, 26 !== r3)
                  break;
              }
              return t4;
            }, o.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, o.prototype.toTwos = function(t4) {
              return 0 !== this.negative ? this.abs().inotn(t4).iaddn(1) : this.clone();
            }, o.prototype.fromTwos = function(t4) {
              return this.testn(t4 - 1) ? this.notn(t4).iaddn(1).ineg() : this.clone();
            }, o.prototype.isNeg = function() {
              return 0 !== this.negative;
            }, o.prototype.neg = function() {
              return this.clone().ineg();
            }, o.prototype.ineg = function() {
              return this.isZero() || (this.negative ^= 1), this;
            }, o.prototype.iuor = function(t4) {
              for (; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this._strip();
            }, o.prototype.ior = function(t4) {
              return n2(0 == (this.negative | t4.negative)), this.iuor(t4);
            }, o.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, o.prototype.uor = function(t4) {
              return this.length > t4.length ? this.clone().iuor(t4) : t4.clone().iuor(this);
            }, o.prototype.iuand = function(t4) {
              var e4;
              e4 = this.length > t4.length ? t4 : this;
              for (var r3 = 0; r3 < e4.length; r3++)
                this.words[r3] = this.words[r3] & t4.words[r3];
              return this.length = e4.length, this._strip();
            }, o.prototype.iand = function(t4) {
              return n2(0 == (this.negative | t4.negative)), this.iuand(t4);
            }, o.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, o.prototype.uand = function(t4) {
              return this.length > t4.length ? this.clone().iuand(t4) : t4.clone().iuand(this);
            }, o.prototype.iuxor = function(t4) {
              var e4, r3;
              this.length > t4.length ? (e4 = this, r3 = t4) : (e4 = t4, r3 = this);
              for (var n3 = 0; n3 < r3.length; n3++)
                this.words[n3] = e4.words[n3] ^ r3.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this._strip();
            }, o.prototype.ixor = function(t4) {
              return n2(0 == (this.negative | t4.negative)), this.iuxor(t4);
            }, o.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, o.prototype.uxor = function(t4) {
              return this.length > t4.length ? this.clone().iuxor(t4) : t4.clone().iuxor(this);
            }, o.prototype.inotn = function(t4) {
              n2("number" == typeof t4 && t4 >= 0);
              var e4 = 0 | Math.ceil(t4 / 26), r3 = t4 % 26;
              this._expand(e4), r3 > 0 && e4--;
              for (var i2 = 0; i2 < e4; i2++)
                this.words[i2] = 67108863 & ~this.words[i2];
              return r3 > 0 && (this.words[i2] = ~this.words[i2] & 67108863 >> 26 - r3), this._strip();
            }, o.prototype.notn = function(t4) {
              return this.clone().inotn(t4);
            }, o.prototype.setn = function(t4, e4) {
              n2("number" == typeof t4 && t4 >= 0);
              var r3 = t4 / 26 | 0, i2 = t4 % 26;
              return this._expand(r3 + 1), this.words[r3] = e4 ? this.words[r3] | 1 << i2 : this.words[r3] & ~(1 << i2), this._strip();
            }, o.prototype.iadd = function(t4) {
              var e4, r3, n3;
              if (0 !== this.negative && 0 === t4.negative)
                return this.negative = 0, e4 = this.isub(t4), this.negative ^= 1, this._normSign();
              if (0 === this.negative && 0 !== t4.negative)
                return t4.negative = 0, e4 = this.isub(t4), t4.negative = 1, e4._normSign();
              this.length > t4.length ? (r3 = this, n3 = t4) : (r3 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = (0 | r3.words[o2]) + (0 | n3.words[o2]) + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r3.length; o2++)
                e4 = (0 | r3.words[o2]) + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r3.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r3 !== this)
                for (; o2 < r3.length; o2++)
                  this.words[o2] = r3.words[o2];
              return this;
            }, o.prototype.add = function(t4) {
              var e4;
              return 0 !== t4.negative && 0 === this.negative ? (t4.negative = 0, e4 = this.sub(t4), t4.negative ^= 1, e4) : 0 === t4.negative && 0 !== this.negative ? (this.negative = 0, e4 = t4.sub(this), this.negative = 1, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, o.prototype.isub = function(t4) {
              if (0 !== t4.negative) {
                t4.negative = 0;
                var e4 = this.iadd(t4);
                return t4.negative = 1, e4._normSign();
              }
              if (0 !== this.negative)
                return this.negative = 0, this.iadd(t4), this.negative = 1, this._normSign();
              var r3, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.negative = 0, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r3 = this, n3 = t4) : (r3 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = (0 | r3.words[s2]) - (0 | n3.words[s2]) + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r3.length; s2++)
                o2 = (e4 = (0 | r3.words[s2]) + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r3.length && r3 !== this)
                for (; s2 < r3.length; s2++)
                  this.words[s2] = r3.words[s2];
              return this.length = Math.max(this.length, s2), r3 !== this && (this.negative = 1), this._strip();
            }, o.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            };
            var y = function(t4, e4, r3) {
              var n3, i2, o2, s2 = t4.words, a2 = e4.words, h2 = r3.words, f2 = 0, u2 = 0 | s2[0], c2 = 8191 & u2, d2 = u2 >>> 13, l2 = 0 | s2[1], p2 = 8191 & l2, g2 = l2 >>> 13, y2 = 0 | s2[2], m2 = 8191 & y2, v2 = y2 >>> 13, b2 = 0 | s2[3], w2 = 8191 & b2, _2 = b2 >>> 13, k2 = 0 | s2[4], S2 = 8191 & k2, A2 = k2 >>> 13, x2 = 0 | s2[5], M2 = 8191 & x2, E2 = x2 >>> 13, B = 0 | s2[6], I = 8191 & B, P = B >>> 13, T = 0 | s2[7], R = 8191 & T, O = T >>> 13, C = 0 | s2[8], j = 8191 & C, N = C >>> 13, D = 0 | s2[9], L = 8191 & D, F = D >>> 13, q = 0 | a2[0], U = 8191 & q, V = q >>> 13, z = 0 | a2[1], H = 8191 & z, K = z >>> 13, W = 0 | a2[2], G = 8191 & W, Y = W >>> 13, J = 0 | a2[3], X = 8191 & J, Z = J >>> 13, $ = 0 | a2[4], Q = 8191 & $, tt = $ >>> 13, et = 0 | a2[5], rt = 8191 & et, nt = et >>> 13, it = 0 | a2[6], ot = 8191 & it, st = it >>> 13, at = 0 | a2[7], ht = 8191 & at, ft = at >>> 13, ut = 0 | a2[8], ct = 8191 & ut, dt = ut >>> 13, lt = 0 | a2[9], pt = 8191 & lt, gt = lt >>> 13;
              r3.negative = t4.negative ^ e4.negative, r3.length = 19;
              var yt = (f2 + (n3 = Math.imul(c2, U)) | 0) + ((8191 & (i2 = (i2 = Math.imul(c2, V)) + Math.imul(d2, U) | 0)) << 13) | 0;
              f2 = ((o2 = Math.imul(d2, V)) + (i2 >>> 13) | 0) + (yt >>> 26) | 0, yt &= 67108863, n3 = Math.imul(p2, U), i2 = (i2 = Math.imul(p2, V)) + Math.imul(g2, U) | 0, o2 = Math.imul(g2, V);
              var mt = (f2 + (n3 = n3 + Math.imul(c2, H) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, K) | 0) + Math.imul(d2, H) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, K) | 0) + (i2 >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n3 = Math.imul(m2, U), i2 = (i2 = Math.imul(m2, V)) + Math.imul(v2, U) | 0, o2 = Math.imul(v2, V), n3 = n3 + Math.imul(p2, H) | 0, i2 = (i2 = i2 + Math.imul(p2, K) | 0) + Math.imul(g2, H) | 0, o2 = o2 + Math.imul(g2, K) | 0;
              var vt = (f2 + (n3 = n3 + Math.imul(c2, G) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, Y) | 0) + Math.imul(d2, G) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, Y) | 0) + (i2 >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n3 = Math.imul(w2, U), i2 = (i2 = Math.imul(w2, V)) + Math.imul(_2, U) | 0, o2 = Math.imul(_2, V), n3 = n3 + Math.imul(m2, H) | 0, i2 = (i2 = i2 + Math.imul(m2, K) | 0) + Math.imul(v2, H) | 0, o2 = o2 + Math.imul(v2, K) | 0, n3 = n3 + Math.imul(p2, G) | 0, i2 = (i2 = i2 + Math.imul(p2, Y) | 0) + Math.imul(g2, G) | 0, o2 = o2 + Math.imul(g2, Y) | 0;
              var bt = (f2 + (n3 = n3 + Math.imul(c2, X) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, Z) | 0) + Math.imul(d2, X) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, Z) | 0) + (i2 >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n3 = Math.imul(S2, U), i2 = (i2 = Math.imul(S2, V)) + Math.imul(A2, U) | 0, o2 = Math.imul(A2, V), n3 = n3 + Math.imul(w2, H) | 0, i2 = (i2 = i2 + Math.imul(w2, K) | 0) + Math.imul(_2, H) | 0, o2 = o2 + Math.imul(_2, K) | 0, n3 = n3 + Math.imul(m2, G) | 0, i2 = (i2 = i2 + Math.imul(m2, Y) | 0) + Math.imul(v2, G) | 0, o2 = o2 + Math.imul(v2, Y) | 0, n3 = n3 + Math.imul(p2, X) | 0, i2 = (i2 = i2 + Math.imul(p2, Z) | 0) + Math.imul(g2, X) | 0, o2 = o2 + Math.imul(g2, Z) | 0;
              var wt = (f2 + (n3 = n3 + Math.imul(c2, Q) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, tt) | 0) + Math.imul(d2, Q) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, tt) | 0) + (i2 >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n3 = Math.imul(M2, U), i2 = (i2 = Math.imul(M2, V)) + Math.imul(E2, U) | 0, o2 = Math.imul(E2, V), n3 = n3 + Math.imul(S2, H) | 0, i2 = (i2 = i2 + Math.imul(S2, K) | 0) + Math.imul(A2, H) | 0, o2 = o2 + Math.imul(A2, K) | 0, n3 = n3 + Math.imul(w2, G) | 0, i2 = (i2 = i2 + Math.imul(w2, Y) | 0) + Math.imul(_2, G) | 0, o2 = o2 + Math.imul(_2, Y) | 0, n3 = n3 + Math.imul(m2, X) | 0, i2 = (i2 = i2 + Math.imul(m2, Z) | 0) + Math.imul(v2, X) | 0, o2 = o2 + Math.imul(v2, Z) | 0, n3 = n3 + Math.imul(p2, Q) | 0, i2 = (i2 = i2 + Math.imul(p2, tt) | 0) + Math.imul(g2, Q) | 0, o2 = o2 + Math.imul(g2, tt) | 0;
              var _t = (f2 + (n3 = n3 + Math.imul(c2, rt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, nt) | 0) + Math.imul(d2, rt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, nt) | 0) + (i2 >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n3 = Math.imul(I, U), i2 = (i2 = Math.imul(I, V)) + Math.imul(P, U) | 0, o2 = Math.imul(P, V), n3 = n3 + Math.imul(M2, H) | 0, i2 = (i2 = i2 + Math.imul(M2, K) | 0) + Math.imul(E2, H) | 0, o2 = o2 + Math.imul(E2, K) | 0, n3 = n3 + Math.imul(S2, G) | 0, i2 = (i2 = i2 + Math.imul(S2, Y) | 0) + Math.imul(A2, G) | 0, o2 = o2 + Math.imul(A2, Y) | 0, n3 = n3 + Math.imul(w2, X) | 0, i2 = (i2 = i2 + Math.imul(w2, Z) | 0) + Math.imul(_2, X) | 0, o2 = o2 + Math.imul(_2, Z) | 0, n3 = n3 + Math.imul(m2, Q) | 0, i2 = (i2 = i2 + Math.imul(m2, tt) | 0) + Math.imul(v2, Q) | 0, o2 = o2 + Math.imul(v2, tt) | 0, n3 = n3 + Math.imul(p2, rt) | 0, i2 = (i2 = i2 + Math.imul(p2, nt) | 0) + Math.imul(g2, rt) | 0, o2 = o2 + Math.imul(g2, nt) | 0;
              var kt = (f2 + (n3 = n3 + Math.imul(c2, ot) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, st) | 0) + Math.imul(d2, ot) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, st) | 0) + (i2 >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n3 = Math.imul(R, U), i2 = (i2 = Math.imul(R, V)) + Math.imul(O, U) | 0, o2 = Math.imul(O, V), n3 = n3 + Math.imul(I, H) | 0, i2 = (i2 = i2 + Math.imul(I, K) | 0) + Math.imul(P, H) | 0, o2 = o2 + Math.imul(P, K) | 0, n3 = n3 + Math.imul(M2, G) | 0, i2 = (i2 = i2 + Math.imul(M2, Y) | 0) + Math.imul(E2, G) | 0, o2 = o2 + Math.imul(E2, Y) | 0, n3 = n3 + Math.imul(S2, X) | 0, i2 = (i2 = i2 + Math.imul(S2, Z) | 0) + Math.imul(A2, X) | 0, o2 = o2 + Math.imul(A2, Z) | 0, n3 = n3 + Math.imul(w2, Q) | 0, i2 = (i2 = i2 + Math.imul(w2, tt) | 0) + Math.imul(_2, Q) | 0, o2 = o2 + Math.imul(_2, tt) | 0, n3 = n3 + Math.imul(m2, rt) | 0, i2 = (i2 = i2 + Math.imul(m2, nt) | 0) + Math.imul(v2, rt) | 0, o2 = o2 + Math.imul(v2, nt) | 0, n3 = n3 + Math.imul(p2, ot) | 0, i2 = (i2 = i2 + Math.imul(p2, st) | 0) + Math.imul(g2, ot) | 0, o2 = o2 + Math.imul(g2, st) | 0;
              var St = (f2 + (n3 = n3 + Math.imul(c2, ht) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, ft) | 0) + Math.imul(d2, ht) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, ft) | 0) + (i2 >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n3 = Math.imul(j, U), i2 = (i2 = Math.imul(j, V)) + Math.imul(N, U) | 0, o2 = Math.imul(N, V), n3 = n3 + Math.imul(R, H) | 0, i2 = (i2 = i2 + Math.imul(R, K) | 0) + Math.imul(O, H) | 0, o2 = o2 + Math.imul(O, K) | 0, n3 = n3 + Math.imul(I, G) | 0, i2 = (i2 = i2 + Math.imul(I, Y) | 0) + Math.imul(P, G) | 0, o2 = o2 + Math.imul(P, Y) | 0, n3 = n3 + Math.imul(M2, X) | 0, i2 = (i2 = i2 + Math.imul(M2, Z) | 0) + Math.imul(E2, X) | 0, o2 = o2 + Math.imul(E2, Z) | 0, n3 = n3 + Math.imul(S2, Q) | 0, i2 = (i2 = i2 + Math.imul(S2, tt) | 0) + Math.imul(A2, Q) | 0, o2 = o2 + Math.imul(A2, tt) | 0, n3 = n3 + Math.imul(w2, rt) | 0, i2 = (i2 = i2 + Math.imul(w2, nt) | 0) + Math.imul(_2, rt) | 0, o2 = o2 + Math.imul(_2, nt) | 0, n3 = n3 + Math.imul(m2, ot) | 0, i2 = (i2 = i2 + Math.imul(m2, st) | 0) + Math.imul(v2, ot) | 0, o2 = o2 + Math.imul(v2, st) | 0, n3 = n3 + Math.imul(p2, ht) | 0, i2 = (i2 = i2 + Math.imul(p2, ft) | 0) + Math.imul(g2, ht) | 0, o2 = o2 + Math.imul(g2, ft) | 0;
              var At = (f2 + (n3 = n3 + Math.imul(c2, ct) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, dt) | 0) + Math.imul(d2, ct) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, dt) | 0) + (i2 >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n3 = Math.imul(L, U), i2 = (i2 = Math.imul(L, V)) + Math.imul(F, U) | 0, o2 = Math.imul(F, V), n3 = n3 + Math.imul(j, H) | 0, i2 = (i2 = i2 + Math.imul(j, K) | 0) + Math.imul(N, H) | 0, o2 = o2 + Math.imul(N, K) | 0, n3 = n3 + Math.imul(R, G) | 0, i2 = (i2 = i2 + Math.imul(R, Y) | 0) + Math.imul(O, G) | 0, o2 = o2 + Math.imul(O, Y) | 0, n3 = n3 + Math.imul(I, X) | 0, i2 = (i2 = i2 + Math.imul(I, Z) | 0) + Math.imul(P, X) | 0, o2 = o2 + Math.imul(P, Z) | 0, n3 = n3 + Math.imul(M2, Q) | 0, i2 = (i2 = i2 + Math.imul(M2, tt) | 0) + Math.imul(E2, Q) | 0, o2 = o2 + Math.imul(E2, tt) | 0, n3 = n3 + Math.imul(S2, rt) | 0, i2 = (i2 = i2 + Math.imul(S2, nt) | 0) + Math.imul(A2, rt) | 0, o2 = o2 + Math.imul(A2, nt) | 0, n3 = n3 + Math.imul(w2, ot) | 0, i2 = (i2 = i2 + Math.imul(w2, st) | 0) + Math.imul(_2, ot) | 0, o2 = o2 + Math.imul(_2, st) | 0, n3 = n3 + Math.imul(m2, ht) | 0, i2 = (i2 = i2 + Math.imul(m2, ft) | 0) + Math.imul(v2, ht) | 0, o2 = o2 + Math.imul(v2, ft) | 0, n3 = n3 + Math.imul(p2, ct) | 0, i2 = (i2 = i2 + Math.imul(p2, dt) | 0) + Math.imul(g2, ct) | 0, o2 = o2 + Math.imul(g2, dt) | 0;
              var xt = (f2 + (n3 = n3 + Math.imul(c2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(c2, gt) | 0) + Math.imul(d2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(d2, gt) | 0) + (i2 >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n3 = Math.imul(L, H), i2 = (i2 = Math.imul(L, K)) + Math.imul(F, H) | 0, o2 = Math.imul(F, K), n3 = n3 + Math.imul(j, G) | 0, i2 = (i2 = i2 + Math.imul(j, Y) | 0) + Math.imul(N, G) | 0, o2 = o2 + Math.imul(N, Y) | 0, n3 = n3 + Math.imul(R, X) | 0, i2 = (i2 = i2 + Math.imul(R, Z) | 0) + Math.imul(O, X) | 0, o2 = o2 + Math.imul(O, Z) | 0, n3 = n3 + Math.imul(I, Q) | 0, i2 = (i2 = i2 + Math.imul(I, tt) | 0) + Math.imul(P, Q) | 0, o2 = o2 + Math.imul(P, tt) | 0, n3 = n3 + Math.imul(M2, rt) | 0, i2 = (i2 = i2 + Math.imul(M2, nt) | 0) + Math.imul(E2, rt) | 0, o2 = o2 + Math.imul(E2, nt) | 0, n3 = n3 + Math.imul(S2, ot) | 0, i2 = (i2 = i2 + Math.imul(S2, st) | 0) + Math.imul(A2, ot) | 0, o2 = o2 + Math.imul(A2, st) | 0, n3 = n3 + Math.imul(w2, ht) | 0, i2 = (i2 = i2 + Math.imul(w2, ft) | 0) + Math.imul(_2, ht) | 0, o2 = o2 + Math.imul(_2, ft) | 0, n3 = n3 + Math.imul(m2, ct) | 0, i2 = (i2 = i2 + Math.imul(m2, dt) | 0) + Math.imul(v2, ct) | 0, o2 = o2 + Math.imul(v2, dt) | 0;
              var Mt = (f2 + (n3 = n3 + Math.imul(p2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(p2, gt) | 0) + Math.imul(g2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(g2, gt) | 0) + (i2 >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n3 = Math.imul(L, G), i2 = (i2 = Math.imul(L, Y)) + Math.imul(F, G) | 0, o2 = Math.imul(F, Y), n3 = n3 + Math.imul(j, X) | 0, i2 = (i2 = i2 + Math.imul(j, Z) | 0) + Math.imul(N, X) | 0, o2 = o2 + Math.imul(N, Z) | 0, n3 = n3 + Math.imul(R, Q) | 0, i2 = (i2 = i2 + Math.imul(R, tt) | 0) + Math.imul(O, Q) | 0, o2 = o2 + Math.imul(O, tt) | 0, n3 = n3 + Math.imul(I, rt) | 0, i2 = (i2 = i2 + Math.imul(I, nt) | 0) + Math.imul(P, rt) | 0, o2 = o2 + Math.imul(P, nt) | 0, n3 = n3 + Math.imul(M2, ot) | 0, i2 = (i2 = i2 + Math.imul(M2, st) | 0) + Math.imul(E2, ot) | 0, o2 = o2 + Math.imul(E2, st) | 0, n3 = n3 + Math.imul(S2, ht) | 0, i2 = (i2 = i2 + Math.imul(S2, ft) | 0) + Math.imul(A2, ht) | 0, o2 = o2 + Math.imul(A2, ft) | 0, n3 = n3 + Math.imul(w2, ct) | 0, i2 = (i2 = i2 + Math.imul(w2, dt) | 0) + Math.imul(_2, ct) | 0, o2 = o2 + Math.imul(_2, dt) | 0;
              var Et = (f2 + (n3 = n3 + Math.imul(m2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(m2, gt) | 0) + Math.imul(v2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(v2, gt) | 0) + (i2 >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n3 = Math.imul(L, X), i2 = (i2 = Math.imul(L, Z)) + Math.imul(F, X) | 0, o2 = Math.imul(F, Z), n3 = n3 + Math.imul(j, Q) | 0, i2 = (i2 = i2 + Math.imul(j, tt) | 0) + Math.imul(N, Q) | 0, o2 = o2 + Math.imul(N, tt) | 0, n3 = n3 + Math.imul(R, rt) | 0, i2 = (i2 = i2 + Math.imul(R, nt) | 0) + Math.imul(O, rt) | 0, o2 = o2 + Math.imul(O, nt) | 0, n3 = n3 + Math.imul(I, ot) | 0, i2 = (i2 = i2 + Math.imul(I, st) | 0) + Math.imul(P, ot) | 0, o2 = o2 + Math.imul(P, st) | 0, n3 = n3 + Math.imul(M2, ht) | 0, i2 = (i2 = i2 + Math.imul(M2, ft) | 0) + Math.imul(E2, ht) | 0, o2 = o2 + Math.imul(E2, ft) | 0, n3 = n3 + Math.imul(S2, ct) | 0, i2 = (i2 = i2 + Math.imul(S2, dt) | 0) + Math.imul(A2, ct) | 0, o2 = o2 + Math.imul(A2, dt) | 0;
              var Bt = (f2 + (n3 = n3 + Math.imul(w2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(w2, gt) | 0) + Math.imul(_2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(_2, gt) | 0) + (i2 >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863, n3 = Math.imul(L, Q), i2 = (i2 = Math.imul(L, tt)) + Math.imul(F, Q) | 0, o2 = Math.imul(F, tt), n3 = n3 + Math.imul(j, rt) | 0, i2 = (i2 = i2 + Math.imul(j, nt) | 0) + Math.imul(N, rt) | 0, o2 = o2 + Math.imul(N, nt) | 0, n3 = n3 + Math.imul(R, ot) | 0, i2 = (i2 = i2 + Math.imul(R, st) | 0) + Math.imul(O, ot) | 0, o2 = o2 + Math.imul(O, st) | 0, n3 = n3 + Math.imul(I, ht) | 0, i2 = (i2 = i2 + Math.imul(I, ft) | 0) + Math.imul(P, ht) | 0, o2 = o2 + Math.imul(P, ft) | 0, n3 = n3 + Math.imul(M2, ct) | 0, i2 = (i2 = i2 + Math.imul(M2, dt) | 0) + Math.imul(E2, ct) | 0, o2 = o2 + Math.imul(E2, dt) | 0;
              var It = (f2 + (n3 = n3 + Math.imul(S2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(S2, gt) | 0) + Math.imul(A2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(A2, gt) | 0) + (i2 >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n3 = Math.imul(L, rt), i2 = (i2 = Math.imul(L, nt)) + Math.imul(F, rt) | 0, o2 = Math.imul(F, nt), n3 = n3 + Math.imul(j, ot) | 0, i2 = (i2 = i2 + Math.imul(j, st) | 0) + Math.imul(N, ot) | 0, o2 = o2 + Math.imul(N, st) | 0, n3 = n3 + Math.imul(R, ht) | 0, i2 = (i2 = i2 + Math.imul(R, ft) | 0) + Math.imul(O, ht) | 0, o2 = o2 + Math.imul(O, ft) | 0, n3 = n3 + Math.imul(I, ct) | 0, i2 = (i2 = i2 + Math.imul(I, dt) | 0) + Math.imul(P, ct) | 0, o2 = o2 + Math.imul(P, dt) | 0;
              var Pt = (f2 + (n3 = n3 + Math.imul(M2, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(M2, gt) | 0) + Math.imul(E2, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(E2, gt) | 0) + (i2 >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n3 = Math.imul(L, ot), i2 = (i2 = Math.imul(L, st)) + Math.imul(F, ot) | 0, o2 = Math.imul(F, st), n3 = n3 + Math.imul(j, ht) | 0, i2 = (i2 = i2 + Math.imul(j, ft) | 0) + Math.imul(N, ht) | 0, o2 = o2 + Math.imul(N, ft) | 0, n3 = n3 + Math.imul(R, ct) | 0, i2 = (i2 = i2 + Math.imul(R, dt) | 0) + Math.imul(O, ct) | 0, o2 = o2 + Math.imul(O, dt) | 0;
              var Tt = (f2 + (n3 = n3 + Math.imul(I, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(I, gt) | 0) + Math.imul(P, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(P, gt) | 0) + (i2 >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n3 = Math.imul(L, ht), i2 = (i2 = Math.imul(L, ft)) + Math.imul(F, ht) | 0, o2 = Math.imul(F, ft), n3 = n3 + Math.imul(j, ct) | 0, i2 = (i2 = i2 + Math.imul(j, dt) | 0) + Math.imul(N, ct) | 0, o2 = o2 + Math.imul(N, dt) | 0;
              var Rt = (f2 + (n3 = n3 + Math.imul(R, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(R, gt) | 0) + Math.imul(O, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(O, gt) | 0) + (i2 >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n3 = Math.imul(L, ct), i2 = (i2 = Math.imul(L, dt)) + Math.imul(F, ct) | 0, o2 = Math.imul(F, dt);
              var Ot = (f2 + (n3 = n3 + Math.imul(j, pt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(j, gt) | 0) + Math.imul(N, pt) | 0)) << 13) | 0;
              f2 = ((o2 = o2 + Math.imul(N, gt) | 0) + (i2 >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863;
              var Ct = (f2 + (n3 = Math.imul(L, pt)) | 0) + ((8191 & (i2 = (i2 = Math.imul(L, gt)) + Math.imul(F, pt) | 0)) << 13) | 0;
              return f2 = ((o2 = Math.imul(F, gt)) + (i2 >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, h2[0] = yt, h2[1] = mt, h2[2] = vt, h2[3] = bt, h2[4] = wt, h2[5] = _t, h2[6] = kt, h2[7] = St, h2[8] = At, h2[9] = xt, h2[10] = Mt, h2[11] = Et, h2[12] = Bt, h2[13] = It, h2[14] = Pt, h2[15] = Tt, h2[16] = Rt, h2[17] = Ot, h2[18] = Ct, 0 !== f2 && (h2[19] = f2, r3.length++), r3;
            };
            function m(t4, e4, r3) {
              r3.negative = e4.negative ^ t4.negative, r3.length = t4.length + e4.length;
              for (var n3 = 0, i2 = 0, o2 = 0; o2 < r3.length - 1; o2++) {
                var s2 = i2;
                i2 = 0;
                for (var a2 = 67108863 & n3, h2 = Math.min(o2, e4.length - 1), f2 = Math.max(0, o2 - t4.length + 1); f2 <= h2; f2++) {
                  var u2 = o2 - f2, c2 = (0 | t4.words[u2]) * (0 | e4.words[f2]), d2 = 67108863 & c2;
                  a2 = 67108863 & (d2 = d2 + a2 | 0), i2 += (s2 = (s2 = s2 + (c2 / 67108864 | 0) | 0) + (d2 >>> 26) | 0) >>> 26, s2 &= 67108863;
                }
                r3.words[o2] = a2, n3 = s2, s2 = i2;
              }
              return 0 !== n3 ? r3.words[o2] = n3 : r3.length--, r3._strip();
            }
            function v(t4, e4, r3) {
              return m(t4, e4, r3);
            }
            function b(t4, e4) {
              this.x = t4, this.y = e4;
            }
            Math.imul || (y = g), o.prototype.mulTo = function(t4, e4) {
              var r3 = this.length + t4.length;
              return 10 === this.length && 10 === t4.length ? y(this, t4, e4) : r3 < 63 ? g(this, t4, e4) : r3 < 1024 ? m(this, t4, e4) : v(this, t4, e4);
            }, b.prototype.makeRBT = function(t4) {
              for (var e4 = new Array(t4), r3 = o.prototype._countBits(t4) - 1, n3 = 0; n3 < t4; n3++)
                e4[n3] = this.revBin(n3, r3, t4);
              return e4;
            }, b.prototype.revBin = function(t4, e4, r3) {
              if (0 === t4 || t4 === r3 - 1)
                return t4;
              for (var n3 = 0, i2 = 0; i2 < e4; i2++)
                n3 |= (1 & t4) << e4 - i2 - 1, t4 >>= 1;
              return n3;
            }, b.prototype.permute = function(t4, e4, r3, n3, i2, o2) {
              for (var s2 = 0; s2 < o2; s2++)
                n3[s2] = e4[t4[s2]], i2[s2] = r3[t4[s2]];
            }, b.prototype.transform = function(t4, e4, r3, n3, i2, o2) {
              this.permute(o2, t4, e4, r3, n3, i2);
              for (var s2 = 1; s2 < i2; s2 <<= 1)
                for (var a2 = s2 << 1, h2 = Math.cos(2 * Math.PI / a2), f2 = Math.sin(2 * Math.PI / a2), u2 = 0; u2 < i2; u2 += a2)
                  for (var c2 = h2, d2 = f2, l2 = 0; l2 < s2; l2++) {
                    var p2 = r3[u2 + l2], g2 = n3[u2 + l2], y2 = r3[u2 + l2 + s2], m2 = n3[u2 + l2 + s2], v2 = c2 * y2 - d2 * m2;
                    m2 = c2 * m2 + d2 * y2, y2 = v2, r3[u2 + l2] = p2 + y2, n3[u2 + l2] = g2 + m2, r3[u2 + l2 + s2] = p2 - y2, n3[u2 + l2 + s2] = g2 - m2, l2 !== a2 && (v2 = h2 * c2 - f2 * d2, d2 = h2 * d2 + f2 * c2, c2 = v2);
                  }
            }, b.prototype.guessLen13b = function(t4, e4) {
              var r3 = 1 | Math.max(e4, t4), n3 = 1 & r3, i2 = 0;
              for (r3 = r3 / 2 | 0; r3; r3 >>>= 1)
                i2++;
              return 1 << i2 + 1 + n3;
            }, b.prototype.conjugate = function(t4, e4, r3) {
              if (!(r3 <= 1))
                for (var n3 = 0; n3 < r3 / 2; n3++) {
                  var i2 = t4[n3];
                  t4[n3] = t4[r3 - n3 - 1], t4[r3 - n3 - 1] = i2, i2 = e4[n3], e4[n3] = -e4[r3 - n3 - 1], e4[r3 - n3 - 1] = -i2;
                }
            }, b.prototype.normalize13b = function(t4, e4) {
              for (var r3 = 0, n3 = 0; n3 < e4 / 2; n3++) {
                var i2 = 8192 * Math.round(t4[2 * n3 + 1] / e4) + Math.round(t4[2 * n3] / e4) + r3;
                t4[n3] = 67108863 & i2, r3 = i2 < 67108864 ? 0 : i2 / 67108864 | 0;
              }
              return t4;
            }, b.prototype.convert13b = function(t4, e4, r3, i2) {
              for (var o2 = 0, s2 = 0; s2 < e4; s2++)
                o2 += 0 | t4[s2], r3[2 * s2] = 8191 & o2, o2 >>>= 13, r3[2 * s2 + 1] = 8191 & o2, o2 >>>= 13;
              for (s2 = 2 * e4; s2 < i2; ++s2)
                r3[s2] = 0;
              n2(0 === o2), n2(0 == (-8192 & o2));
            }, b.prototype.stub = function(t4) {
              for (var e4 = new Array(t4), r3 = 0; r3 < t4; r3++)
                e4[r3] = 0;
              return e4;
            }, b.prototype.mulp = function(t4, e4, r3) {
              var n3 = 2 * this.guessLen13b(t4.length, e4.length), i2 = this.makeRBT(n3), o2 = this.stub(n3), s2 = new Array(n3), a2 = new Array(n3), h2 = new Array(n3), f2 = new Array(n3), u2 = new Array(n3), c2 = new Array(n3), d2 = r3.words;
              d2.length = n3, this.convert13b(t4.words, t4.length, s2, n3), this.convert13b(e4.words, e4.length, f2, n3), this.transform(s2, o2, a2, h2, n3, i2), this.transform(f2, o2, u2, c2, n3, i2);
              for (var l2 = 0; l2 < n3; l2++) {
                var p2 = a2[l2] * u2[l2] - h2[l2] * c2[l2];
                h2[l2] = a2[l2] * c2[l2] + h2[l2] * u2[l2], a2[l2] = p2;
              }
              return this.conjugate(a2, h2, n3), this.transform(a2, h2, d2, o2, n3, i2), this.conjugate(d2, o2, n3), this.normalize13b(d2, n3), r3.negative = t4.negative ^ e4.negative, r3.length = t4.length + e4.length, r3._strip();
            }, o.prototype.mul = function(t4) {
              var e4 = new o(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, o.prototype.mulf = function(t4) {
              var e4 = new o(null);
              return e4.words = new Array(this.length + t4.length), v(this, t4, e4);
            }, o.prototype.imul = function(t4) {
              return this.clone().mulTo(t4, this);
            }, o.prototype.imuln = function(t4) {
              var e4 = t4 < 0;
              e4 && (t4 = -t4), n2("number" == typeof t4), n2(t4 < 67108864);
              for (var r3 = 0, i2 = 0; i2 < this.length; i2++) {
                var o2 = (0 | this.words[i2]) * t4, s2 = (67108863 & o2) + (67108863 & r3);
                r3 >>= 26, r3 += o2 / 67108864 | 0, r3 += s2 >>> 26, this.words[i2] = 67108863 & s2;
              }
              return 0 !== r3 && (this.words[i2] = r3, this.length++), e4 ? this.ineg() : this;
            }, o.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, o.prototype.sqr = function() {
              return this.mul(this);
            }, o.prototype.isqr = function() {
              return this.imul(this.clone());
            }, o.prototype.pow = function(t4) {
              var e4 = function(t5) {
                for (var e5 = new Array(t5.bitLength()), r4 = 0; r4 < e5.length; r4++) {
                  var n4 = r4 / 26 | 0, i3 = r4 % 26;
                  e5[r4] = t5.words[n4] >>> i3 & 1;
                }
                return e5;
              }(t4);
              if (0 === e4.length)
                return new o(1);
              for (var r3 = this, n3 = 0; n3 < e4.length && 0 === e4[n3]; n3++, r3 = r3.sqr())
                ;
              if (++n3 < e4.length)
                for (var i2 = r3.sqr(); n3 < e4.length; n3++, i2 = i2.sqr())
                  0 !== e4[n3] && (r3 = r3.mul(i2));
              return r3;
            }, o.prototype.iushln = function(t4) {
              n2("number" == typeof t4 && t4 >= 0);
              var e4, r3 = t4 % 26, i2 = (t4 - r3) / 26, o2 = 67108863 >>> 26 - r3 << 26 - r3;
              if (0 !== r3) {
                var s2 = 0;
                for (e4 = 0; e4 < this.length; e4++) {
                  var a2 = this.words[e4] & o2, h2 = (0 | this.words[e4]) - a2 << r3;
                  this.words[e4] = h2 | s2, s2 = a2 >>> 26 - r3;
                }
                s2 && (this.words[e4] = s2, this.length++);
              }
              if (0 !== i2) {
                for (e4 = this.length - 1; e4 >= 0; e4--)
                  this.words[e4 + i2] = this.words[e4];
                for (e4 = 0; e4 < i2; e4++)
                  this.words[e4] = 0;
                this.length += i2;
              }
              return this._strip();
            }, o.prototype.ishln = function(t4) {
              return n2(0 === this.negative), this.iushln(t4);
            }, o.prototype.iushrn = function(t4, e4, r3) {
              var i2;
              n2("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = r3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = 0 | this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
            }, o.prototype.ishrn = function(t4, e4, r3) {
              return n2(0 === this.negative), this.iushrn(t4, e4, r3);
            }, o.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, o.prototype.ushln = function(t4) {
              return this.clone().iushln(t4);
            }, o.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, o.prototype.ushrn = function(t4) {
              return this.clone().iushrn(t4);
            }, o.prototype.testn = function(t4) {
              n2("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, r3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= r3 || !(this.words[r3] & i2));
            }, o.prototype.imaskn = function(t4) {
              n2("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, r3 = (t4 - e4) / 26;
              if (n2(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r3)
                return this;
              if (0 !== e4 && r3++, this.length = Math.min(r3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this._strip();
            }, o.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, o.prototype.iaddn = function(t4) {
              return n2("number" == typeof t4), n2(t4 < 67108864), t4 < 0 ? this.isubn(-t4) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t4 ? (this.words[0] = t4 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t4), this.negative = 1, this) : this._iaddn(t4);
            }, o.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, o.prototype.isubn = function(t4) {
              if (n2("number" == typeof t4), n2(t4 < 67108864), t4 < 0)
                return this.iaddn(-t4);
              if (0 !== this.negative)
                return this.negative = 0, this.iaddn(t4), this.negative = 1, this;
              if (this.words[0] -= t4, 1 === this.length && this.words[0] < 0)
                this.words[0] = -this.words[0], this.negative = 1;
              else
                for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                  this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this._strip();
            }, o.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, o.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, o.prototype.iabs = function() {
              return this.negative = 0, this;
            }, o.prototype.abs = function() {
              return this.clone().iabs();
            }, o.prototype._ishlnsubmul = function(t4, e4, r3) {
              var i2, o2, s2 = t4.length + r3;
              this._expand(s2);
              var a2 = 0;
              for (i2 = 0; i2 < t4.length; i2++) {
                o2 = (0 | this.words[i2 + r3]) + a2;
                var h2 = (0 | t4.words[i2]) * e4;
                a2 = ((o2 -= 67108863 & h2) >> 26) - (h2 / 67108864 | 0), this.words[i2 + r3] = 67108863 & o2;
              }
              for (; i2 < this.length - r3; i2++)
                a2 = (o2 = (0 | this.words[i2 + r3]) + a2) >> 26, this.words[i2 + r3] = 67108863 & o2;
              if (0 === a2)
                return this._strip();
              for (n2(-1 === a2), a2 = 0, i2 = 0; i2 < this.length; i2++)
                a2 = (o2 = -(0 | this.words[i2]) + a2) >> 26, this.words[i2] = 67108863 & o2;
              return this.negative = 1, this._strip();
            }, o.prototype._wordDiv = function(t4, e4) {
              var r3 = (this.length, t4.length), n3 = this.clone(), i2 = t4, s2 = 0 | i2.words[i2.length - 1];
              0 != (r3 = 26 - this._countBits(s2)) && (i2 = i2.ushln(r3), n3.iushln(r3), s2 = 0 | i2.words[i2.length - 1]);
              var a2, h2 = n3.length - i2.length;
              if ("mod" !== e4) {
                (a2 = new o(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(i2, 1, h2);
              0 === u2.negative && (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * (0 | n3.words[i2.length + c2]) + (0 | n3.words[i2.length + c2 - 1]);
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(i2, d2, c2); 0 !== n3.negative; )
                  d2--, n3.negative = 0, n3._ishlnsubmul(i2, 1, c2), n3.isZero() || (n3.negative ^= 1);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2._strip(), n3._strip(), "div" !== e4 && 0 !== r3 && n3.iushrn(r3), { div: a2 || null, mod: n3 };
            }, o.prototype.divmod = function(t4, e4, r3) {
              return n2(!t4.isZero()), this.isZero() ? { div: new o(0), mod: new o(0) } : 0 !== this.negative && 0 === t4.negative ? (a2 = this.neg().divmod(t4, e4), "mod" !== e4 && (i2 = a2.div.neg()), "div" !== e4 && (s2 = a2.mod.neg(), r3 && 0 !== s2.negative && s2.iadd(t4)), { div: i2, mod: s2 }) : 0 === this.negative && 0 !== t4.negative ? (a2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (i2 = a2.div.neg()), { div: i2, mod: a2.mod }) : 0 != (this.negative & t4.negative) ? (a2 = this.neg().divmod(t4.neg(), e4), "div" !== e4 && (s2 = a2.mod.neg(), r3 && 0 !== s2.negative && s2.isub(t4)), { div: a2.div, mod: s2 }) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new o(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new o(this.modrn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new o(this.modrn(t4.words[0])) } : this._wordDiv(t4, e4);
              var i2, s2, a2;
            }, o.prototype.div = function(t4) {
              return this.divmod(t4, "div", false).div;
            }, o.prototype.mod = function(t4) {
              return this.divmod(t4, "mod", false).mod;
            }, o.prototype.umod = function(t4) {
              return this.divmod(t4, "mod", true).mod;
            }, o.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (e4.mod.isZero())
                return e4.div;
              var r3 = 0 !== e4.div.negative ? e4.mod.isub(t4) : e4.mod, n3 = t4.ushrn(1), i2 = t4.andln(1), o2 = r3.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : 0 !== e4.div.negative ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, o.prototype.modrn = function(t4) {
              var e4 = t4 < 0;
              e4 && (t4 = -t4), n2(t4 <= 67108863);
              for (var r3 = (1 << 26) % t4, i2 = 0, o2 = this.length - 1; o2 >= 0; o2--)
                i2 = (r3 * i2 + (0 | this.words[o2])) % t4;
              return e4 ? -i2 : i2;
            }, o.prototype.modn = function(t4) {
              return this.modrn(t4);
            }, o.prototype.idivn = function(t4) {
              var e4 = t4 < 0;
              e4 && (t4 = -t4), n2(t4 <= 67108863);
              for (var r3 = 0, i2 = this.length - 1; i2 >= 0; i2--) {
                var o2 = (0 | this.words[i2]) + 67108864 * r3;
                this.words[i2] = o2 / t4 | 0, r3 = o2 % t4;
              }
              return this._strip(), e4 ? this.ineg() : this;
            }, o.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, o.prototype.egcd = function(t4) {
              n2(0 === t4.negative), n2(!t4.isZero());
              var e4 = this, r3 = t4.clone();
              e4 = 0 !== e4.negative ? e4.umod(t4) : e4.clone();
              for (var i2 = new o(1), s2 = new o(0), a2 = new o(0), h2 = new o(1), f2 = 0; e4.isEven() && r3.isEven(); )
                e4.iushrn(1), r3.iushrn(1), ++f2;
              for (var u2 = r3.clone(), c2 = e4.clone(); !e4.isZero(); ) {
                for (var d2 = 0, l2 = 1; 0 == (e4.words[0] & l2) && d2 < 26; ++d2, l2 <<= 1)
                  ;
                if (d2 > 0)
                  for (e4.iushrn(d2); d2-- > 0; )
                    (i2.isOdd() || s2.isOdd()) && (i2.iadd(u2), s2.isub(c2)), i2.iushrn(1), s2.iushrn(1);
                for (var p2 = 0, g2 = 1; 0 == (r3.words[0] & g2) && p2 < 26; ++p2, g2 <<= 1)
                  ;
                if (p2 > 0)
                  for (r3.iushrn(p2); p2-- > 0; )
                    (a2.isOdd() || h2.isOdd()) && (a2.iadd(u2), h2.isub(c2)), a2.iushrn(1), h2.iushrn(1);
                e4.cmp(r3) >= 0 ? (e4.isub(r3), i2.isub(a2), s2.isub(h2)) : (r3.isub(e4), a2.isub(i2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: r3.iushln(f2) };
            }, o.prototype._invmp = function(t4) {
              n2(0 === t4.negative), n2(!t4.isZero());
              var e4 = this, r3 = t4.clone();
              e4 = 0 !== e4.negative ? e4.umod(t4) : e4.clone();
              for (var i2, s2 = new o(1), a2 = new o(0), h2 = r3.clone(); e4.cmpn(1) > 0 && r3.cmpn(1) > 0; ) {
                for (var f2 = 0, u2 = 1; 0 == (e4.words[0] & u2) && f2 < 26; ++f2, u2 <<= 1)
                  ;
                if (f2 > 0)
                  for (e4.iushrn(f2); f2-- > 0; )
                    s2.isOdd() && s2.iadd(h2), s2.iushrn(1);
                for (var c2 = 0, d2 = 1; 0 == (r3.words[0] & d2) && c2 < 26; ++c2, d2 <<= 1)
                  ;
                if (c2 > 0)
                  for (r3.iushrn(c2); c2-- > 0; )
                    a2.isOdd() && a2.iadd(h2), a2.iushrn(1);
                e4.cmp(r3) >= 0 ? (e4.isub(r3), s2.isub(a2)) : (r3.isub(e4), a2.isub(s2));
              }
              return (i2 = 0 === e4.cmpn(1) ? s2 : a2).cmpn(0) < 0 && i2.iadd(t4), i2;
            }, o.prototype.gcd = function(t4) {
              if (this.isZero())
                return t4.abs();
              if (t4.isZero())
                return this.abs();
              var e4 = this.clone(), r3 = t4.clone();
              e4.negative = 0, r3.negative = 0;
              for (var n3 = 0; e4.isEven() && r3.isEven(); n3++)
                e4.iushrn(1), r3.iushrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.iushrn(1);
                for (; r3.isEven(); )
                  r3.iushrn(1);
                var i2 = e4.cmp(r3);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r3, r3 = o2;
                } else if (0 === i2 || 0 === r3.cmpn(1))
                  break;
                e4.isub(r3);
              }
              return r3.iushln(n3);
            }, o.prototype.invm = function(t4) {
              return this.egcd(t4).a.umod(t4);
            }, o.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, o.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, o.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, o.prototype.bincn = function(t4) {
              n2("number" == typeof t4);
              var e4 = t4 % 26, r3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= r3)
                return this._expand(r3 + 1), this.words[r3] |= i2, this;
              for (var o2 = i2, s2 = r3; 0 !== o2 && s2 < this.length; s2++) {
                var a2 = 0 | this.words[s2];
                o2 = (a2 += o2) >>> 26, a2 &= 67108863, this.words[s2] = a2;
              }
              return 0 !== o2 && (this.words[s2] = o2, this.length++), this;
            }, o.prototype.isZero = function() {
              return 1 === this.length && 0 === this.words[0];
            }, o.prototype.cmpn = function(t4) {
              var e4, r3 = t4 < 0;
              if (0 !== this.negative && !r3)
                return -1;
              if (0 === this.negative && r3)
                return 1;
              if (this._strip(), this.length > 1)
                e4 = 1;
              else {
                r3 && (t4 = -t4), n2(t4 <= 67108863, "Number is too big");
                var i2 = 0 | this.words[0];
                e4 = i2 === t4 ? 0 : i2 < t4 ? -1 : 1;
              }
              return 0 !== this.negative ? 0 | -e4 : e4;
            }, o.prototype.cmp = function(t4) {
              if (0 !== this.negative && 0 === t4.negative)
                return -1;
              if (0 === this.negative && 0 !== t4.negative)
                return 1;
              var e4 = this.ucmp(t4);
              return 0 !== this.negative ? 0 | -e4 : e4;
            }, o.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r3 = this.length - 1; r3 >= 0; r3--) {
                var n3 = 0 | this.words[r3], i2 = 0 | t4.words[r3];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, o.prototype.gtn = function(t4) {
              return 1 === this.cmpn(t4);
            }, o.prototype.gt = function(t4) {
              return 1 === this.cmp(t4);
            }, o.prototype.gten = function(t4) {
              return this.cmpn(t4) >= 0;
            }, o.prototype.gte = function(t4) {
              return this.cmp(t4) >= 0;
            }, o.prototype.ltn = function(t4) {
              return -1 === this.cmpn(t4);
            }, o.prototype.lt = function(t4) {
              return -1 === this.cmp(t4);
            }, o.prototype.lten = function(t4) {
              return this.cmpn(t4) <= 0;
            }, o.prototype.lte = function(t4) {
              return this.cmp(t4) <= 0;
            }, o.prototype.eqn = function(t4) {
              return 0 === this.cmpn(t4);
            }, o.prototype.eq = function(t4) {
              return 0 === this.cmp(t4);
            }, o.red = function(t4) {
              return new M(t4);
            }, o.prototype.toRed = function(t4) {
              return n2(!this.red, "Already a number in reduction context"), n2(0 === this.negative, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, o.prototype.fromRed = function() {
              return n2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, o.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, o.prototype.forceRed = function(t4) {
              return n2(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, o.prototype.redAdd = function(t4) {
              return n2(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, o.prototype.redIAdd = function(t4) {
              return n2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, o.prototype.redSub = function(t4) {
              return n2(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, o.prototype.redISub = function(t4) {
              return n2(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, o.prototype.redShl = function(t4) {
              return n2(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, o.prototype.redMul = function(t4) {
              return n2(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, o.prototype.redIMul = function(t4) {
              return n2(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, o.prototype.redSqr = function() {
              return n2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, o.prototype.redISqr = function() {
              return n2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, o.prototype.redSqrt = function() {
              return n2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, o.prototype.redInvm = function() {
              return n2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, o.prototype.redNeg = function() {
              return n2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, o.prototype.redPow = function(t4) {
              return n2(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var w = { k256: null, p224: null, p192: null, p25519: null };
            function _(t4, e4) {
              this.name = t4, this.p = new o(e4, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function k() {
              _.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function S() {
              _.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function A() {
              _.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function x() {
              _.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function M(t4) {
              if ("string" == typeof t4) {
                var e4 = o._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                n2(t4.gtn(1), "modulus must be greater than 1"), this.m = t4, this.prime = null;
            }
            function E(t4) {
              M.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
            }
            _.prototype._tmp = function() {
              var t4 = new o(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, _.prototype.ireduce = function(t4) {
              var e4, r3 = t4;
              do {
                this.split(r3, this.tmp), e4 = (r3 = (r3 = this.imulK(r3)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r3.ucmp(this.p);
              return 0 === n3 ? (r3.words[0] = 0, r3.length = 1) : n3 > 0 ? r3.isub(this.p) : void 0 !== r3.strip ? r3.strip() : r3._strip(), r3;
            }, _.prototype.split = function(t4, e4) {
              t4.iushrn(this.n, 0, e4);
            }, _.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, i(k, _), k.prototype.split = function(t4, e4) {
              for (var r3 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r3, i2 = 10; i2 < t4.length; i2++) {
                var s2 = 0 | t4.words[i2];
                t4.words[i2 - 10] = (s2 & r3) << 4 | o2 >>> 22, o2 = s2;
              }
              o2 >>>= 22, t4.words[i2 - 10] = o2, 0 === o2 && t4.length > 10 ? t4.length -= 10 : t4.length -= 9;
            }, k.prototype.imulK = function(t4) {
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var e4 = 0, r3 = 0; r3 < t4.length; r3++) {
                var n3 = 0 | t4.words[r3];
                e4 += 977 * n3, t4.words[r3] = 67108863 & e4, e4 = 64 * n3 + (e4 / 67108864 | 0);
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, i(S, _), i(A, _), i(x, _), x.prototype.imulK = function(t4) {
              for (var e4 = 0, r3 = 0; r3 < t4.length; r3++) {
                var n3 = 19 * (0 | t4.words[r3]) + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r3] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, o._prime = function(t4) {
              if (w[t4])
                return w[t4];
              var e4;
              if ("k256" === t4)
                e4 = new k();
              else if ("p224" === t4)
                e4 = new S();
              else if ("p192" === t4)
                e4 = new A();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new x();
              }
              return w[t4] = e4, e4;
            }, M.prototype._verify1 = function(t4) {
              n2(0 === t4.negative, "red works only with positives"), n2(t4.red, "red works only with red numbers");
            }, M.prototype._verify2 = function(t4, e4) {
              n2(0 == (t4.negative | e4.negative), "red works only with positives"), n2(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, M.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : (u(t4, t4.umod(this.m)._forceRed(this)), t4);
            }, M.prototype.neg = function(t4) {
              return t4.isZero() ? t4.clone() : this.m.sub(t4)._forceRed(this);
            }, M.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r3 = t4.add(e4);
              return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3._forceRed(this);
            }, M.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r3 = t4.iadd(e4);
              return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3;
            }, M.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r3 = t4.sub(e4);
              return r3.cmpn(0) < 0 && r3.iadd(this.m), r3._forceRed(this);
            }, M.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r3 = t4.isub(e4);
              return r3.cmpn(0) < 0 && r3.iadd(this.m), r3;
            }, M.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.ushln(e4));
            }, M.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, M.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, M.prototype.isqr = function(t4) {
              return this.imul(t4, t4.clone());
            }, M.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, M.prototype.sqrt = function(t4) {
              if (t4.isZero())
                return t4.clone();
              var e4 = this.m.andln(3);
              if (n2(e4 % 2 == 1), 3 === e4) {
                var r3 = this.m.add(new o(1)).iushrn(2);
                return this.pow(t4, r3);
              }
              for (var i2 = this.m.subn(1), s2 = 0; !i2.isZero() && 0 === i2.andln(1); )
                s2++, i2.iushrn(1);
              n2(!i2.isZero());
              var a2 = new o(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).iushrn(1), u2 = this.m.bitLength();
              for (u2 = new o(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, i2), d2 = this.pow(t4, i2.addn(1).iushrn(1)), l2 = this.pow(t4, i2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                n2(y2 < p2);
                var m2 = this.pow(c2, new o(1).iushln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, M.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return 0 !== e4.negative ? (e4.negative = 0, this.imod(e4).redNeg()) : this.imod(e4);
            }, M.prototype.pow = function(t4, e4) {
              if (e4.isZero())
                return new o(1).toRed(this);
              if (0 === e4.cmpn(1))
                return t4.clone();
              var r3 = new Array(16);
              r3[0] = new o(1).toRed(this), r3[1] = t4;
              for (var n3 = 2; n3 < r3.length; n3++)
                r3[n3] = this.mul(r3[n3 - 1], t4);
              var i2 = r3[0], s2 = 0, a2 = 0, h2 = e4.bitLength() % 26;
              for (0 === h2 && (h2 = 26), n3 = e4.length - 1; n3 >= 0; n3--) {
                for (var f2 = e4.words[n3], u2 = h2 - 1; u2 >= 0; u2--) {
                  var c2 = f2 >> u2 & 1;
                  i2 !== r3[0] && (i2 = this.sqr(i2)), 0 !== c2 || 0 !== s2 ? (s2 <<= 1, s2 |= c2, (4 == ++a2 || 0 === n3 && 0 === u2) && (i2 = this.mul(i2, r3[s2]), a2 = 0, s2 = 0)) : a2 = 0;
                }
                h2 = 26;
              }
              return i2;
            }, M.prototype.convertTo = function(t4) {
              var e4 = t4.umod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, M.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, o.mont = function(t4) {
              return new E(t4);
            }, i(E, M), E.prototype.convertTo = function(t4) {
              return this.imod(t4.ushln(this.shift));
            }, E.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, E.prototype.imul = function(t4, e4) {
              if (t4.isZero() || e4.isZero())
                return t4.words[0] = 0, t4.length = 1, t4;
              var r3 = t4.imul(e4), n3 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n3).iushrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, E.prototype.mul = function(t4, e4) {
              if (t4.isZero() || e4.isZero())
                return new o(0)._forceRed(this);
              var r3 = t4.mul(e4), n3 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n3).iushrn(this.shift), s2 = i2;
              return i2.cmp(this.m) >= 0 ? s2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (s2 = i2.iadd(this.m)), s2._forceRed(this);
            }, E.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 29931: (t2, e2, r2) => {
          var n2;
          function i(t3) {
            this.rand = t3;
          }
          if (t2.exports = function(t3) {
            return n2 || (n2 = new i(null)), n2.generate(t3);
          }, t2.exports.Rand = i, i.prototype.generate = function(t3) {
            return this._rand(t3);
          }, i.prototype._rand = function(t3) {
            if (this.rand.getBytes)
              return this.rand.getBytes(t3);
            for (var e3 = new Uint8Array(t3), r3 = 0; r3 < e3.length; r3++)
              e3[r3] = this.rand.getByte();
            return e3;
          }, "object" == typeof self)
            self.crypto && self.crypto.getRandomValues ? i.prototype._rand = function(t3) {
              var e3 = new Uint8Array(t3);
              return self.crypto.getRandomValues(e3), e3;
            } : self.msCrypto && self.msCrypto.getRandomValues ? i.prototype._rand = function(t3) {
              var e3 = new Uint8Array(t3);
              return self.msCrypto.getRandomValues(e3), e3;
            } : "object" == typeof window && (i.prototype._rand = function() {
              throw new Error("Not implemented yet");
            });
          else
            try {
              var o = r2(89214);
              if ("function" != typeof o.randomBytes)
                throw new Error("Not supported");
              i.prototype._rand = function(t3) {
                return o.randomBytes(t3);
              };
            } catch (t3) {
            }
        }, 74497: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer;
          function i(t3) {
            n2.isBuffer(t3) || (t3 = n2.from(t3));
            for (var e3 = t3.length / 4 | 0, r3 = new Array(e3), i2 = 0; i2 < e3; i2++)
              r3[i2] = t3.readUInt32BE(4 * i2);
            return r3;
          }
          function o(t3) {
            for (; 0 < t3.length; t3++)
              t3[0] = 0;
          }
          function s(t3, e3, r3, n3, i2) {
            for (var o2, s2, a2, h2, f2 = r3[0], u = r3[1], c = r3[2], d = r3[3], l = t3[0] ^ e3[0], p = t3[1] ^ e3[1], g = t3[2] ^ e3[2], y = t3[3] ^ e3[3], m = 4, v = 1; v < i2; v++)
              o2 = f2[l >>> 24] ^ u[p >>> 16 & 255] ^ c[g >>> 8 & 255] ^ d[255 & y] ^ e3[m++], s2 = f2[p >>> 24] ^ u[g >>> 16 & 255] ^ c[y >>> 8 & 255] ^ d[255 & l] ^ e3[m++], a2 = f2[g >>> 24] ^ u[y >>> 16 & 255] ^ c[l >>> 8 & 255] ^ d[255 & p] ^ e3[m++], h2 = f2[y >>> 24] ^ u[l >>> 16 & 255] ^ c[p >>> 8 & 255] ^ d[255 & g] ^ e3[m++], l = o2, p = s2, g = a2, y = h2;
            return o2 = (n3[l >>> 24] << 24 | n3[p >>> 16 & 255] << 16 | n3[g >>> 8 & 255] << 8 | n3[255 & y]) ^ e3[m++], s2 = (n3[p >>> 24] << 24 | n3[g >>> 16 & 255] << 16 | n3[y >>> 8 & 255] << 8 | n3[255 & l]) ^ e3[m++], a2 = (n3[g >>> 24] << 24 | n3[y >>> 16 & 255] << 16 | n3[l >>> 8 & 255] << 8 | n3[255 & p]) ^ e3[m++], h2 = (n3[y >>> 24] << 24 | n3[l >>> 16 & 255] << 16 | n3[p >>> 8 & 255] << 8 | n3[255 & g]) ^ e3[m++], [o2 >>>= 0, s2 >>>= 0, a2 >>>= 0, h2 >>>= 0];
          }
          var a = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], h = function() {
            for (var t3 = new Array(256), e3 = 0; e3 < 256; e3++)
              t3[e3] = e3 < 128 ? e3 << 1 : e3 << 1 ^ 283;
            for (var r3 = [], n3 = [], i2 = [[], [], [], []], o2 = [[], [], [], []], s2 = 0, a2 = 0, h2 = 0; h2 < 256; ++h2) {
              var f2 = a2 ^ a2 << 1 ^ a2 << 2 ^ a2 << 3 ^ a2 << 4;
              f2 = f2 >>> 8 ^ 255 & f2 ^ 99, r3[s2] = f2, n3[f2] = s2;
              var u = t3[s2], c = t3[u], d = t3[c], l = 257 * t3[f2] ^ 16843008 * f2;
              i2[0][s2] = l << 24 | l >>> 8, i2[1][s2] = l << 16 | l >>> 16, i2[2][s2] = l << 8 | l >>> 24, i2[3][s2] = l, l = 16843009 * d ^ 65537 * c ^ 257 * u ^ 16843008 * s2, o2[0][f2] = l << 24 | l >>> 8, o2[1][f2] = l << 16 | l >>> 16, o2[2][f2] = l << 8 | l >>> 24, o2[3][f2] = l, 0 === s2 ? s2 = a2 = 1 : (s2 = u ^ t3[t3[t3[d ^ u]]], a2 ^= t3[t3[a2]]);
            }
            return { SBOX: r3, INV_SBOX: n3, SUB_MIX: i2, INV_SUB_MIX: o2 };
          }();
          function f(t3) {
            this._key = i(t3), this._reset();
          }
          f.blockSize = 16, f.keySize = 32, f.prototype.blockSize = f.blockSize, f.prototype.keySize = f.keySize, f.prototype._reset = function() {
            for (var t3 = this._key, e3 = t3.length, r3 = e3 + 6, n3 = 4 * (r3 + 1), i2 = [], o2 = 0; o2 < e3; o2++)
              i2[o2] = t3[o2];
            for (o2 = e3; o2 < n3; o2++) {
              var s2 = i2[o2 - 1];
              o2 % e3 == 0 ? (s2 = s2 << 8 | s2 >>> 24, s2 = h.SBOX[s2 >>> 24] << 24 | h.SBOX[s2 >>> 16 & 255] << 16 | h.SBOX[s2 >>> 8 & 255] << 8 | h.SBOX[255 & s2], s2 ^= a[o2 / e3 | 0] << 24) : e3 > 6 && o2 % e3 == 4 && (s2 = h.SBOX[s2 >>> 24] << 24 | h.SBOX[s2 >>> 16 & 255] << 16 | h.SBOX[s2 >>> 8 & 255] << 8 | h.SBOX[255 & s2]), i2[o2] = i2[o2 - e3] ^ s2;
            }
            for (var f2 = [], u = 0; u < n3; u++) {
              var c = n3 - u, d = i2[c - (u % 4 ? 0 : 4)];
              f2[u] = u < 4 || c <= 4 ? d : h.INV_SUB_MIX[0][h.SBOX[d >>> 24]] ^ h.INV_SUB_MIX[1][h.SBOX[d >>> 16 & 255]] ^ h.INV_SUB_MIX[2][h.SBOX[d >>> 8 & 255]] ^ h.INV_SUB_MIX[3][h.SBOX[255 & d]];
            }
            this._nRounds = r3, this._keySchedule = i2, this._invKeySchedule = f2;
          }, f.prototype.encryptBlockRaw = function(t3) {
            return s(t3 = i(t3), this._keySchedule, h.SUB_MIX, h.SBOX, this._nRounds);
          }, f.prototype.encryptBlock = function(t3) {
            var e3 = this.encryptBlockRaw(t3), r3 = n2.allocUnsafe(16);
            return r3.writeUInt32BE(e3[0], 0), r3.writeUInt32BE(e3[1], 4), r3.writeUInt32BE(e3[2], 8), r3.writeUInt32BE(e3[3], 12), r3;
          }, f.prototype.decryptBlock = function(t3) {
            var e3 = (t3 = i(t3))[1];
            t3[1] = t3[3], t3[3] = e3;
            var r3 = s(t3, this._invKeySchedule, h.INV_SUB_MIX, h.INV_SBOX, this._nRounds), o2 = n2.allocUnsafe(16);
            return o2.writeUInt32BE(r3[0], 0), o2.writeUInt32BE(r3[3], 4), o2.writeUInt32BE(r3[2], 8), o2.writeUInt32BE(r3[1], 12), o2;
          }, f.prototype.scrub = function() {
            o(this._keySchedule), o(this._invKeySchedule), o(this._key);
          }, t2.exports.AES = f;
        }, 62422: (t2, e2, r2) => {
          var n2 = r2(74497), i = r2(89509).Buffer, o = r2(71027), s = r2(35717), a = r2(83288), h = r2(67295), f = r2(20685);
          function u(t3, e3, r3, s2) {
            o.call(this);
            var h2 = i.alloc(4, 0);
            this._cipher = new n2.AES(e3);
            var u2 = this._cipher.encryptBlock(h2);
            this._ghash = new a(u2), r3 = function(t4, e4, r4) {
              if (12 === e4.length)
                return t4._finID = i.concat([e4, i.from([0, 0, 0, 1])]), i.concat([e4, i.from([0, 0, 0, 2])]);
              var n3 = new a(r4), o2 = e4.length, s3 = o2 % 16;
              n3.update(e4), s3 && (s3 = 16 - s3, n3.update(i.alloc(s3, 0))), n3.update(i.alloc(8, 0));
              var h3 = 8 * o2, u3 = i.alloc(8);
              u3.writeUIntBE(h3, 0, 8), n3.update(u3), t4._finID = n3.state;
              var c = i.from(t4._finID);
              return f(c), c;
            }(this, r3, u2), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = s2, this._alen = 0, this._len = 0, this._mode = t3, this._authTag = null, this._called = false;
          }
          s(u, o), u.prototype._update = function(t3) {
            if (!this._called && this._alen) {
              var e3 = 16 - this._alen % 16;
              e3 < 16 && (e3 = i.alloc(e3, 0), this._ghash.update(e3));
            }
            this._called = true;
            var r3 = this._mode.encrypt(this, t3);
            return this._decrypt ? this._ghash.update(t3) : this._ghash.update(r3), this._len += t3.length, r3;
          }, u.prototype._final = function() {
            if (this._decrypt && !this._authTag)
              throw new Error("Unsupported state or unable to authenticate data");
            var t3 = h(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
            if (this._decrypt && function(t4, e3) {
              var r3 = 0;
              t4.length !== e3.length && r3++;
              for (var n3 = Math.min(t4.length, e3.length), i2 = 0; i2 < n3; ++i2)
                r3 += t4[i2] ^ e3[i2];
              return r3;
            }(t3, this._authTag))
              throw new Error("Unsupported state or unable to authenticate data");
            this._authTag = t3, this._cipher.scrub();
          }, u.prototype.getAuthTag = function() {
            if (this._decrypt || !i.isBuffer(this._authTag))
              throw new Error("Attempting to get auth tag in unsupported state");
            return this._authTag;
          }, u.prototype.setAuthTag = function(t3) {
            if (!this._decrypt)
              throw new Error("Attempting to set auth tag in unsupported state");
            this._authTag = t3;
          }, u.prototype.setAAD = function(t3) {
            if (this._called)
              throw new Error("Attempting to set AAD in unsupported state");
            this._ghash.update(t3), this._alen += t3.length;
          }, t2.exports = u;
        }, 44696: (t2, e2, r2) => {
          var n2 = r2(71494), i = r2(66193), o = r2(44946);
          e2.createCipher = e2.Cipher = n2.createCipher, e2.createCipheriv = e2.Cipheriv = n2.createCipheriv, e2.createDecipher = e2.Decipher = i.createDecipher, e2.createDecipheriv = e2.Decipheriv = i.createDecipheriv, e2.listCiphers = e2.getCiphers = function() {
            return Object.keys(o);
          };
        }, 66193: (t2, e2, r2) => {
          var n2 = r2(62422), i = r2(89509).Buffer, o = r2(45), s = r2(25969), a = r2(71027), h = r2(74497), f = r2(13048);
          function u(t3, e3, r3) {
            a.call(this), this._cache = new c(), this._last = void 0, this._cipher = new h.AES(e3), this._prev = i.from(r3), this._mode = t3, this._autopadding = true;
          }
          function c() {
            this.cache = i.allocUnsafe(0);
          }
          function d(t3, e3, r3) {
            var a2 = o[t3.toLowerCase()];
            if (!a2)
              throw new TypeError("invalid suite type");
            if ("string" == typeof r3 && (r3 = i.from(r3)), "GCM" !== a2.mode && r3.length !== a2.iv)
              throw new TypeError("invalid iv length " + r3.length);
            if ("string" == typeof e3 && (e3 = i.from(e3)), e3.length !== a2.key / 8)
              throw new TypeError("invalid key length " + e3.length);
            return "stream" === a2.type ? new s(a2.module, e3, r3, true) : "auth" === a2.type ? new n2(a2.module, e3, r3, true) : new u(a2.module, e3, r3);
          }
          r2(35717)(u, a), u.prototype._update = function(t3) {
            var e3, r3;
            this._cache.add(t3);
            for (var n3 = []; e3 = this._cache.get(this._autopadding); )
              r3 = this._mode.decrypt(this, e3), n3.push(r3);
            return i.concat(n3);
          }, u.prototype._final = function() {
            var t3 = this._cache.flush();
            if (this._autopadding)
              return function(t4) {
                var e3 = t4[15];
                if (e3 < 1 || e3 > 16)
                  throw new Error("unable to decrypt data");
                for (var r3 = -1; ++r3 < e3; )
                  if (t4[r3 + (16 - e3)] !== e3)
                    throw new Error("unable to decrypt data");
                if (16 !== e3)
                  return t4.slice(0, 16 - e3);
              }(this._mode.decrypt(this, t3));
            if (t3)
              throw new Error("data not multiple of block length");
          }, u.prototype.setAutoPadding = function(t3) {
            return this._autopadding = !!t3, this;
          }, c.prototype.add = function(t3) {
            this.cache = i.concat([this.cache, t3]);
          }, c.prototype.get = function(t3) {
            var e3;
            if (t3) {
              if (this.cache.length > 16)
                return e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e3;
            } else if (this.cache.length >= 16)
              return e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e3;
            return null;
          }, c.prototype.flush = function() {
            if (this.cache.length)
              return this.cache;
          }, e2.createDecipher = function(t3, e3) {
            var r3 = o[t3.toLowerCase()];
            if (!r3)
              throw new TypeError("invalid suite type");
            var n3 = f(e3, false, r3.key, r3.iv);
            return d(t3, n3.key, n3.iv);
          }, e2.createDecipheriv = d;
        }, 71494: (t2, e2, r2) => {
          var n2 = r2(45), i = r2(62422), o = r2(89509).Buffer, s = r2(25969), a = r2(71027), h = r2(74497), f = r2(13048);
          function u(t3, e3, r3) {
            a.call(this), this._cache = new d(), this._cipher = new h.AES(e3), this._prev = o.from(r3), this._mode = t3, this._autopadding = true;
          }
          r2(35717)(u, a), u.prototype._update = function(t3) {
            var e3, r3;
            this._cache.add(t3);
            for (var n3 = []; e3 = this._cache.get(); )
              r3 = this._mode.encrypt(this, e3), n3.push(r3);
            return o.concat(n3);
          };
          var c = o.alloc(16, 16);
          function d() {
            this.cache = o.allocUnsafe(0);
          }
          function l(t3, e3, r3) {
            var a2 = n2[t3.toLowerCase()];
            if (!a2)
              throw new TypeError("invalid suite type");
            if ("string" == typeof e3 && (e3 = o.from(e3)), e3.length !== a2.key / 8)
              throw new TypeError("invalid key length " + e3.length);
            if ("string" == typeof r3 && (r3 = o.from(r3)), "GCM" !== a2.mode && r3.length !== a2.iv)
              throw new TypeError("invalid iv length " + r3.length);
            return "stream" === a2.type ? new s(a2.module, e3, r3) : "auth" === a2.type ? new i(a2.module, e3, r3) : new u(a2.module, e3, r3);
          }
          u.prototype._final = function() {
            var t3 = this._cache.flush();
            if (this._autopadding)
              return t3 = this._mode.encrypt(this, t3), this._cipher.scrub(), t3;
            if (!t3.equals(c))
              throw this._cipher.scrub(), new Error("data not multiple of block length");
          }, u.prototype.setAutoPadding = function(t3) {
            return this._autopadding = !!t3, this;
          }, d.prototype.add = function(t3) {
            this.cache = o.concat([this.cache, t3]);
          }, d.prototype.get = function() {
            if (this.cache.length > 15) {
              var t3 = this.cache.slice(0, 16);
              return this.cache = this.cache.slice(16), t3;
            }
            return null;
          }, d.prototype.flush = function() {
            for (var t3 = 16 - this.cache.length, e3 = o.allocUnsafe(t3), r3 = -1; ++r3 < t3; )
              e3.writeUInt8(t3, r3);
            return o.concat([this.cache, e3]);
          }, e2.createCipheriv = l, e2.createCipher = function(t3, e3) {
            var r3 = n2[t3.toLowerCase()];
            if (!r3)
              throw new TypeError("invalid suite type");
            var i2 = f(e3, false, r3.key, r3.iv);
            return l(t3, i2.key, i2.iv);
          };
        }, 83288: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer, i = n2.alloc(16, 0);
          function o(t3) {
            var e3 = n2.allocUnsafe(16);
            return e3.writeUInt32BE(t3[0] >>> 0, 0), e3.writeUInt32BE(t3[1] >>> 0, 4), e3.writeUInt32BE(t3[2] >>> 0, 8), e3.writeUInt32BE(t3[3] >>> 0, 12), e3;
          }
          function s(t3) {
            this.h = t3, this.state = n2.alloc(16, 0), this.cache = n2.allocUnsafe(0);
          }
          s.prototype.ghash = function(t3) {
            for (var e3 = -1; ++e3 < t3.length; )
              this.state[e3] ^= t3[e3];
            this._multiply();
          }, s.prototype._multiply = function() {
            for (var t3, e3, r3, n3 = [(t3 = this.h).readUInt32BE(0), t3.readUInt32BE(4), t3.readUInt32BE(8), t3.readUInt32BE(12)], i2 = [0, 0, 0, 0], s2 = -1; ++s2 < 128; ) {
              for (0 != (this.state[~~(s2 / 8)] & 1 << 7 - s2 % 8) && (i2[0] ^= n3[0], i2[1] ^= n3[1], i2[2] ^= n3[2], i2[3] ^= n3[3]), r3 = 0 != (1 & n3[3]), e3 = 3; e3 > 0; e3--)
                n3[e3] = n3[e3] >>> 1 | (1 & n3[e3 - 1]) << 31;
              n3[0] = n3[0] >>> 1, r3 && (n3[0] = n3[0] ^ 225 << 24);
            }
            this.state = o(i2);
          }, s.prototype.update = function(t3) {
            var e3;
            for (this.cache = n2.concat([this.cache, t3]); this.cache.length >= 16; )
              e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e3);
          }, s.prototype.final = function(t3, e3) {
            return this.cache.length && this.ghash(n2.concat([this.cache, i], 16)), this.ghash(o([0, t3, 0, e3])), this.state;
          }, t2.exports = s;
        }, 20685: (t2) => {
          t2.exports = function(t3) {
            for (var e2, r2 = t3.length; r2--; ) {
              if (255 !== (e2 = t3.readUInt8(r2))) {
                e2++, t3.writeUInt8(e2, r2);
                break;
              }
              t3.writeUInt8(0, r2);
            }
          };
        }, 25292: (t2, e2, r2) => {
          var n2 = r2(67295);
          e2.encrypt = function(t3, e3) {
            var r3 = n2(e3, t3._prev);
            return t3._prev = t3._cipher.encryptBlock(r3), t3._prev;
          }, e2.decrypt = function(t3, e3) {
            var r3 = t3._prev;
            t3._prev = e3;
            var i = t3._cipher.decryptBlock(e3);
            return n2(i, r3);
          };
        }, 86311: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer, i = r2(67295);
          function o(t3, e3, r3) {
            var o2 = e3.length, s = i(e3, t3._cache);
            return t3._cache = t3._cache.slice(o2), t3._prev = n2.concat([t3._prev, r3 ? e3 : s]), s;
          }
          e2.encrypt = function(t3, e3, r3) {
            for (var i2, s = n2.allocUnsafe(0); e3.length; ) {
              if (0 === t3._cache.length && (t3._cache = t3._cipher.encryptBlock(t3._prev), t3._prev = n2.allocUnsafe(0)), !(t3._cache.length <= e3.length)) {
                s = n2.concat([s, o(t3, e3, r3)]);
                break;
              }
              i2 = t3._cache.length, s = n2.concat([s, o(t3, e3.slice(0, i2), r3)]), e3 = e3.slice(i2);
            }
            return s;
          };
        }, 21510: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer;
          function i(t3, e3, r3) {
            for (var n3, i2, s = -1, a = 0; ++s < 8; )
              n3 = e3 & 1 << 7 - s ? 128 : 0, a += (128 & (i2 = t3._cipher.encryptBlock(t3._prev)[0] ^ n3)) >> s % 8, t3._prev = o(t3._prev, r3 ? n3 : i2);
            return a;
          }
          function o(t3, e3) {
            var r3 = t3.length, i2 = -1, o2 = n2.allocUnsafe(t3.length);
            for (t3 = n2.concat([t3, n2.from([e3])]); ++i2 < r3; )
              o2[i2] = t3[i2] << 1 | t3[i2 + 1] >> 7;
            return o2;
          }
          e2.encrypt = function(t3, e3, r3) {
            for (var o2 = e3.length, s = n2.allocUnsafe(o2), a = -1; ++a < o2; )
              s[a] = i(t3, e3[a], r3);
            return s;
          };
        }, 71964: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer;
          function i(t3, e3, r3) {
            var i2 = t3._cipher.encryptBlock(t3._prev)[0] ^ e3;
            return t3._prev = n2.concat([t3._prev.slice(1), n2.from([r3 ? e3 : i2])]), i2;
          }
          e2.encrypt = function(t3, e3, r3) {
            for (var o = e3.length, s = n2.allocUnsafe(o), a = -1; ++a < o; )
              s[a] = i(t3, e3[a], r3);
            return s;
          };
        }, 96009: (t2, e2, r2) => {
          var n2 = r2(67295), i = r2(89509).Buffer, o = r2(20685);
          function s(t3) {
            var e3 = t3._cipher.encryptBlockRaw(t3._prev);
            return o(t3._prev), e3;
          }
          e2.encrypt = function(t3, e3) {
            var r3 = Math.ceil(e3.length / 16), o2 = t3._cache.length;
            t3._cache = i.concat([t3._cache, i.allocUnsafe(16 * r3)]);
            for (var a = 0; a < r3; a++) {
              var h = s(t3), f = o2 + 16 * a;
              t3._cache.writeUInt32BE(h[0], f + 0), t3._cache.writeUInt32BE(h[1], f + 4), t3._cache.writeUInt32BE(h[2], f + 8), t3._cache.writeUInt32BE(h[3], f + 12);
            }
            var u = t3._cache.slice(0, e3.length);
            return t3._cache = t3._cache.slice(e3.length), n2(e3, u);
          };
        }, 11084: (t2, e2) => {
          e2.encrypt = function(t3, e3) {
            return t3._cipher.encryptBlock(e3);
          }, e2.decrypt = function(t3, e3) {
            return t3._cipher.decryptBlock(e3);
          };
        }, 45: (t2, e2, r2) => {
          var n2 = { ECB: r2(11084), CBC: r2(25292), CFB: r2(86311), CFB8: r2(71964), CFB1: r2(21510), OFB: r2(18861), CTR: r2(96009), GCM: r2(96009) }, i = r2(44946);
          for (var o in i)
            i[o].module = n2[i[o].mode];
          t2.exports = i;
        }, 18861: (t2, e2, r2) => {
          var n2 = r2(67295);
          function i(t3) {
            return t3._prev = t3._cipher.encryptBlock(t3._prev), t3._prev;
          }
          e2.encrypt = function(t3, e3) {
            for (; t3._cache.length < e3.length; )
              t3._cache = Buffer.concat([t3._cache, i(t3)]);
            var r3 = t3._cache.slice(0, e3.length);
            return t3._cache = t3._cache.slice(e3.length), n2(e3, r3);
          };
        }, 25969: (t2, e2, r2) => {
          var n2 = r2(74497), i = r2(89509).Buffer, o = r2(71027);
          function s(t3, e3, r3, s2) {
            o.call(this), this._cipher = new n2.AES(e3), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = s2, this._mode = t3;
          }
          r2(35717)(s, o), s.prototype._update = function(t3) {
            return this._mode.encrypt(this, t3, this._decrypt);
          }, s.prototype._final = function() {
            this._cipher.scrub();
          }, t2.exports = s;
        }, 23663: (t2, e2, r2) => {
          var n2 = r2(43982), i = r2(61798);
          function o(t3, e3) {
            var r3 = function(t4) {
              var e4 = s(t4);
              return { blinder: e4.toRed(n2.mont(t4.modulus)).redPow(new n2(t4.publicExponent)).fromRed(), unblinder: e4.invm(t4.modulus) };
            }(e3), i2 = e3.modulus.byteLength(), o2 = (n2.mont(e3.modulus), new n2(t3).mul(r3.blinder).mod(e3.modulus)), a = o2.toRed(n2.mont(e3.prime1)), h = o2.toRed(n2.mont(e3.prime2)), f = e3.coefficient, u = e3.prime1, c = e3.prime2, d = a.redPow(e3.exponent1), l = h.redPow(e3.exponent2);
            d = d.fromRed(), l = l.fromRed();
            var p = d.isub(l).imul(f).mod(u);
            p.imul(c), l.iadd(p);
            var g = new Buffer(l.imul(r3.unblinder).mod(e3.modulus).toArray());
            if (g.length < i2) {
              var y = new Buffer(i2 - g.length);
              y.fill(0), g = Buffer.concat([y, g], i2);
            }
            return g;
          }
          function s(t3) {
            for (var e3 = t3.modulus.byteLength(), r3 = new n2(i(e3)); r3.cmp(t3.modulus) >= 0 || !r3.mod(t3.prime1) || !r3.mod(t3.prime2); )
              r3 = new n2(i(e3));
            return r3;
          }
          t2.exports = o, o.getr = s;
        }, 43982: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 56042: (t2, e2) => {
          "use strict";
          e2["RSA-SHA224"] = e2.sha224WithRSAEncryption = { sign: "rsa", hash: "sha224", id: new Buffer("302d300d06096086480165030402040500041c", "hex") }, e2["RSA-SHA256"] = e2.sha256WithRSAEncryption = { sign: "rsa", hash: "sha256", id: new Buffer("3031300d060960864801650304020105000420", "hex") }, e2["RSA-SHA384"] = e2.sha384WithRSAEncryption = { sign: "rsa", hash: "sha384", id: new Buffer("3041300d060960864801650304020205000430", "hex") }, e2["RSA-SHA512"] = e2.sha512WithRSAEncryption = { sign: "rsa", hash: "sha512", id: new Buffer("3051300d060960864801650304020305000440", "hex") }, e2["RSA-SHA1"] = { sign: "rsa", hash: "sha1", id: new Buffer("3021300906052b0e03021a05000414", "hex") }, e2["ecdsa-with-SHA1"] = { sign: "ecdsa", hash: "sha1", id: new Buffer("", "hex") }, e2.DSA = e2["DSA-SHA1"] = e2["DSA-SHA"] = { sign: "dsa", hash: "sha1", id: new Buffer("", "hex") }, e2["DSA-SHA224"] = e2["DSA-WITH-SHA224"] = { sign: "dsa", hash: "sha224", id: new Buffer("", "hex") }, e2["DSA-SHA256"] = e2["DSA-WITH-SHA256"] = { sign: "dsa", hash: "sha256", id: new Buffer("", "hex") }, e2["DSA-SHA384"] = e2["DSA-WITH-SHA384"] = { sign: "dsa", hash: "sha384", id: new Buffer("", "hex") }, e2["DSA-SHA512"] = e2["DSA-WITH-SHA512"] = { sign: "dsa", hash: "sha512", id: new Buffer("", "hex") }, e2["DSA-RIPEMD160"] = { sign: "dsa", hash: "rmd160", id: new Buffer("", "hex") }, e2["RSA-RIPEMD160"] = e2.ripemd160WithRSA = { sign: "rsa", hash: "rmd160", id: new Buffer("3021300906052b2403020105000414", "hex") }, e2["RSA-MD5"] = e2.md5WithRSAEncryption = { sign: "rsa", hash: "md5", id: new Buffer("3020300c06082a864886f70d020505000410", "hex") };
        }, 27905: (t2, e2, r2) => {
          var n2 = r2(56042), i = r2(23482), o = r2(35717), s = r2(82950), a = r2(58966), h = r2(2322), f = {};
          function u(t3) {
            a.Writable.call(this);
            var e3 = f[t3];
            if (!e3)
              throw new Error("Unknown message digest");
            this._hashType = e3.hash, this._hash = i(e3.hash), this._tag = e3.id, this._signType = e3.sign;
          }
          function c(t3) {
            a.Writable.call(this);
            var e3 = f[t3];
            if (!e3)
              throw new Error("Unknown message digest");
            this._hash = i(e3.hash), this._tag = e3.id, this._signType = e3.sign;
          }
          function d(t3) {
            return new u(t3);
          }
          function l(t3) {
            return new c(t3);
          }
          Object.keys(n2).forEach(function(t3) {
            f[t3] = f[t3.toLowerCase()] = n2[t3];
          }), o(u, a.Writable), u.prototype._write = function(t3, e3, r3) {
            this._hash.update(t3), r3();
          }, u.prototype.update = function(t3, e3) {
            return "string" == typeof t3 && (t3 = new Buffer(t3, e3)), this._hash.update(t3), this;
          }, u.prototype.sign = function(t3, e3) {
            this.end();
            var r3 = this._hash.digest(), n3 = s(Buffer.concat([this._tag, r3]), t3, this._hashType, this._signType);
            return e3 ? n3.toString(e3) : n3;
          }, o(c, a.Writable), c.prototype._write = function(t3, e3, r3) {
            this._hash.update(t3), r3();
          }, c.prototype.update = function(t3, e3) {
            return "string" == typeof t3 && (t3 = new Buffer(t3, e3)), this._hash.update(t3), this;
          }, c.prototype.verify = function(t3, e3, r3) {
            "string" == typeof e3 && (e3 = new Buffer(e3, r3)), this.end();
            var n3 = this._hash.digest();
            return h(e3, Buffer.concat([this._tag, n3]), t3, this._signType);
          }, t2.exports = { Sign: d, Verify: l, createSign: d, createVerify: l };
        }, 93534: (t2, e2) => {
          "use strict";
          e2["1.3.132.0.10"] = "secp256k1", e2["1.3.132.0.33"] = "p224", e2["1.2.840.10045.3.1.1"] = "p192", e2["1.2.840.10045.3.1.7"] = "p256";
        }, 58815: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 82950: (t2, e2, r2) => {
          var n2 = r2(58355), i = r2(23663), o = r2(93534), s = r2(86266), a = r2(70980), h = r2(58815), f = s.ec;
          function u(t3, e3, r3, i2) {
            if ((t3 = new Buffer(t3.toArray())).length < e3.byteLength()) {
              var o2 = new Buffer(e3.byteLength() - t3.length);
              o2.fill(0), t3 = Buffer.concat([o2, t3]);
            }
            var s2 = r3.length, a2 = function(t4, e4) {
              t4 = (t4 = c(t4, e4)).mod(e4);
              var r4 = new Buffer(t4.toArray());
              if (r4.length < e4.byteLength()) {
                var n3 = new Buffer(e4.byteLength() - r4.length);
                n3.fill(0), r4 = Buffer.concat([n3, r4]);
              }
              return r4;
            }(r3, e3), h2 = new Buffer(s2);
            h2.fill(1);
            var f2 = new Buffer(s2);
            return f2.fill(0), f2 = n2(i2, f2).update(h2).update(new Buffer([0])).update(t3).update(a2).digest(), h2 = n2(i2, f2).update(h2).digest(), { k: f2 = n2(i2, f2).update(h2).update(new Buffer([1])).update(t3).update(a2).digest(), v: h2 = n2(i2, f2).update(h2).digest() };
          }
          function c(t3, e3) {
            var r3 = new h(t3), n3 = (t3.length << 3) - e3.bitLength();
            return n3 > 0 && r3.ishrn(n3), r3;
          }
          function d(t3, e3, r3) {
            var i2, o2;
            do {
              for (i2 = new Buffer(""); 8 * i2.length < t3.bitLength(); )
                e3.v = n2(r3, e3.k).update(e3.v).digest(), i2 = Buffer.concat([i2, e3.v]);
              o2 = c(i2, t3), e3.k = n2(r3, e3.k).update(e3.v).update(new Buffer([0])).digest(), e3.v = n2(r3, e3.k).update(e3.v).digest();
            } while (-1 !== o2.cmp(t3));
            return o2;
          }
          function l(t3, e3, r3, n3) {
            return t3.toRed(h.mont(r3)).redPow(e3).fromRed().mod(n3);
          }
          t2.exports = function(t3, e3, r3, n3) {
            var s2 = a(e3);
            if (s2.curve) {
              if ("ecdsa" !== n3)
                throw new Error("wrong private key type");
              return function(t4, e4) {
                var r4 = o[e4.curve.join(".")];
                if (!r4)
                  throw new Error("unknown curve " + e4.curve.join("."));
                var n4 = new f(r4).genKeyPair();
                n4._importPrivate(e4.privateKey);
                var i2 = n4.sign(t4);
                return new Buffer(i2.toDER());
              }(t3, s2);
            }
            if ("dsa" === s2.type) {
              if ("dsa" !== n3)
                throw new Error("wrong private key type");
              return function(t4, e4, r4) {
                for (var n4, i2 = e4.params.priv_key, o2 = e4.params.p, s3 = e4.params.q, a2 = e4.params.g, f2 = new h(0), p2 = c(t4, s3).mod(s3), g2 = false, y2 = u(i2, s3, t4, r4); false === g2; )
                  f2 = l(a2, n4 = d(s3, y2, r4), o2, s3), (g2 = n4.invm(s3).imul(p2.add(i2.mul(f2))).mod(s3)).cmpn(0) || (g2 = false, f2 = new h(0));
                return function(t5, e5) {
                  t5 = t5.toArray(), e5 = e5.toArray(), 128 & t5[0] && (t5 = [0].concat(t5)), 128 & e5[0] && (e5 = [0].concat(e5));
                  var r5 = [48, t5.length + e5.length + 4, 2, t5.length];
                  return r5 = r5.concat(t5, [2, e5.length], e5), new Buffer(r5);
                }(f2, g2);
              }(t3, s2, r3);
            }
            if ("rsa" !== n3)
              throw new Error("wrong private key type");
            for (var p = s2.modulus.byteLength(), g = [0, 1]; t3.length + g.length + 1 < p; )
              g.push(255);
            g.push(0);
            for (var y = -1; ++y < t3.length; )
              g.push(t3[y]);
            return i(g, s2);
          }, t2.exports.getKey = u, t2.exports.makeKey = d;
        }, 2322: (t2, e2, r2) => {
          var n2 = r2(93534), i = r2(86266), o = r2(70980), s = r2(58815), a = i.ec;
          function h(t3, e3) {
            if (t3.cmpn(0) <= 0)
              throw new Error("invalid sig");
            if (t3.cmp(e3) >= e3)
              throw new Error("invalid sig");
          }
          t2.exports = function(t3, e3, r3, i2) {
            var f = o(r3);
            if ("ec" === f.type) {
              if ("ecdsa" !== i2)
                throw new Error("wrong public key type");
              return function(t4, e4, r4) {
                var i3 = n2[r4.data.algorithm.curve.join(".")];
                if (!i3)
                  throw new Error("unknown curve " + r4.data.algorithm.curve.join("."));
                var o2 = new a(i3), s2 = r4.data.subjectPrivateKey.data;
                return o2.verify(e4, t4, s2);
              }(t3, e3, f);
            }
            if ("dsa" === f.type) {
              if ("dsa" !== i2)
                throw new Error("wrong public key type");
              return function(t4, e4, r4) {
                var n3 = r4.data.p, i3 = r4.data.q, a2 = r4.data.g, f2 = r4.data.pub_key, u2 = o.signature.decode(t4, "der"), c2 = u2.s, d2 = u2.r;
                h(c2, i3), h(d2, i3);
                var l2 = s.mont(n3), p2 = c2.invm(i3);
                return !a2.toRed(l2).redPow(new s(e4).mul(p2).mod(i3)).fromRed().mul(f2.toRed(l2).redPow(d2.mul(p2).mod(i3)).fromRed()).mod(n3).mod(i3).cmp(d2);
              }(t3, e3, f);
            }
            if ("rsa" !== i2)
              throw new Error("wrong public key type");
            for (var u = f.modulus.byteLength(), c = [1], d = 0; e3.length + c.length + 2 < u; )
              c.push(255), d++;
            c.push(0);
            for (var l = -1; ++l < e3.length; )
              c.push(e3[l]);
            c = new Buffer(c);
            var p = s.mont(f.modulus);
            t3 = (t3 = new s(t3).toRed(p)).redPow(new s(f.publicExponent)), t3 = new Buffer(t3.fromRed().toArray());
            var g = 0;
            for (d < 8 && (g = 1), u = Math.min(t3.length, c.length), t3.length !== c.length && (g = 1), l = -1; ++l < u; )
              g |= t3[l] ^ c[l];
            return 0 === g;
          };
        }, 67295: (t2) => {
          t2.exports = function(t3, e2) {
            for (var r2 = Math.min(t3.length, e2.length), n2 = new Buffer(r2), i = 0; i < r2; ++i)
              n2[i] = t3[i] ^ e2[i];
            return n2;
          };
        }, 48764: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(22191), i = r2(73703), o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
          e2.Buffer = h, e2.SlowBuffer = function(t3) {
            return +t3 != t3 && (t3 = 0), h.alloc(+t3);
          }, e2.INSPECT_MAX_BYTES = 50;
          var s = 2147483647;
          function a(t3) {
            if (t3 > s)
              throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
            var e3 = new Uint8Array(t3);
            return Object.setPrototypeOf(e3, h.prototype), e3;
          }
          function h(t3, e3, r3) {
            if ("number" == typeof t3) {
              if ("string" == typeof e3)
                throw new TypeError('The "string" argument must be of type string. Received type number');
              return c(t3);
            }
            return f(t3, e3, r3);
          }
          function f(t3, e3, r3) {
            if ("string" == typeof t3)
              return function(t4, e4) {
                if ("string" == typeof e4 && "" !== e4 || (e4 = "utf8"), !h.isEncoding(e4))
                  throw new TypeError("Unknown encoding: " + e4);
                var r4 = 0 | g(t4, e4), n4 = a(r4), i3 = n4.write(t4, e4);
                return i3 !== r4 && (n4 = n4.slice(0, i3)), n4;
              }(t3, e3);
            if (ArrayBuffer.isView(t3))
              return function(t4) {
                if (U(t4, Uint8Array)) {
                  var e4 = new Uint8Array(t4);
                  return l(e4.buffer, e4.byteOffset, e4.byteLength);
                }
                return d(t4);
              }(t3);
            if (null == t3)
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
            if (U(t3, ArrayBuffer) || t3 && U(t3.buffer, ArrayBuffer))
              return l(t3, e3, r3);
            if ("undefined" != typeof SharedArrayBuffer && (U(t3, SharedArrayBuffer) || t3 && U(t3.buffer, SharedArrayBuffer)))
              return l(t3, e3, r3);
            if ("number" == typeof t3)
              throw new TypeError('The "value" argument must not be of type number. Received type number');
            var n3 = t3.valueOf && t3.valueOf();
            if (null != n3 && n3 !== t3)
              return h.from(n3, e3, r3);
            var i2 = function(t4) {
              if (h.isBuffer(t4)) {
                var e4 = 0 | p(t4.length), r4 = a(e4);
                return 0 === r4.length || t4.copy(r4, 0, 0, e4), r4;
              }
              return void 0 !== t4.length ? "number" != typeof t4.length || V(t4.length) ? a(0) : d(t4) : "Buffer" === t4.type && Array.isArray(t4.data) ? d(t4.data) : void 0;
            }(t3);
            if (i2)
              return i2;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t3[Symbol.toPrimitive])
              return h.from(t3[Symbol.toPrimitive]("string"), e3, r3);
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
          }
          function u(t3) {
            if ("number" != typeof t3)
              throw new TypeError('"size" argument must be of type number');
            if (t3 < 0)
              throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
          }
          function c(t3) {
            return u(t3), a(t3 < 0 ? 0 : 0 | p(t3));
          }
          function d(t3) {
            for (var e3 = t3.length < 0 ? 0 : 0 | p(t3.length), r3 = a(e3), n3 = 0; n3 < e3; n3 += 1)
              r3[n3] = 255 & t3[n3];
            return r3;
          }
          function l(t3, e3, r3) {
            if (e3 < 0 || t3.byteLength < e3)
              throw new RangeError('"offset" is outside of buffer bounds');
            if (t3.byteLength < e3 + (r3 || 0))
              throw new RangeError('"length" is outside of buffer bounds');
            var n3;
            return n3 = void 0 === e3 && void 0 === r3 ? new Uint8Array(t3) : void 0 === r3 ? new Uint8Array(t3, e3) : new Uint8Array(t3, e3, r3), Object.setPrototypeOf(n3, h.prototype), n3;
          }
          function p(t3) {
            if (t3 >= s)
              throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
            return 0 | t3;
          }
          function g(t3, e3) {
            if (h.isBuffer(t3))
              return t3.length;
            if (ArrayBuffer.isView(t3) || U(t3, ArrayBuffer))
              return t3.byteLength;
            if ("string" != typeof t3)
              throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t3);
            var r3 = t3.length, n3 = arguments.length > 2 && true === arguments[2];
            if (!n3 && 0 === r3)
              return 0;
            for (var i2 = false; ; )
              switch (e3) {
                case "ascii":
                case "latin1":
                case "binary":
                  return r3;
                case "utf8":
                case "utf-8":
                  return L(t3).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * r3;
                case "hex":
                  return r3 >>> 1;
                case "base64":
                  return F(t3).length;
                default:
                  if (i2)
                    return n3 ? -1 : L(t3).length;
                  e3 = ("" + e3).toLowerCase(), i2 = true;
              }
          }
          function y(t3, e3, r3) {
            var n3 = false;
            if ((void 0 === e3 || e3 < 0) && (e3 = 0), e3 > this.length)
              return "";
            if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0)
              return "";
            if ((r3 >>>= 0) <= (e3 >>>= 0))
              return "";
            for (t3 || (t3 = "utf8"); ; )
              switch (t3) {
                case "hex":
                  return P(this, e3, r3);
                case "utf8":
                case "utf-8":
                  return M(this, e3, r3);
                case "ascii":
                  return B(this, e3, r3);
                case "latin1":
                case "binary":
                  return I(this, e3, r3);
                case "base64":
                  return x(this, e3, r3);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return T(this, e3, r3);
                default:
                  if (n3)
                    throw new TypeError("Unknown encoding: " + t3);
                  t3 = (t3 + "").toLowerCase(), n3 = true;
              }
          }
          function m(t3, e3, r3) {
            var n3 = t3[e3];
            t3[e3] = t3[r3], t3[r3] = n3;
          }
          function v(t3, e3, r3, n3, i2) {
            if (0 === t3.length)
              return -1;
            if ("string" == typeof r3 ? (n3 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), V(r3 = +r3) && (r3 = i2 ? 0 : t3.length - 1), r3 < 0 && (r3 = t3.length + r3), r3 >= t3.length) {
              if (i2)
                return -1;
              r3 = t3.length - 1;
            } else if (r3 < 0) {
              if (!i2)
                return -1;
              r3 = 0;
            }
            if ("string" == typeof e3 && (e3 = h.from(e3, n3)), h.isBuffer(e3))
              return 0 === e3.length ? -1 : b(t3, e3, r3, n3, i2);
            if ("number" == typeof e3)
              return e3 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(t3, e3, r3) : Uint8Array.prototype.lastIndexOf.call(t3, e3, r3) : b(t3, [e3], r3, n3, i2);
            throw new TypeError("val must be string, number or Buffer");
          }
          function b(t3, e3, r3, n3, i2) {
            var o2, s2 = 1, a2 = t3.length, h2 = e3.length;
            if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
              if (t3.length < 2 || e3.length < 2)
                return -1;
              s2 = 2, a2 /= 2, h2 /= 2, r3 /= 2;
            }
            function f2(t4, e4) {
              return 1 === s2 ? t4[e4] : t4.readUInt16BE(e4 * s2);
            }
            if (i2) {
              var u2 = -1;
              for (o2 = r3; o2 < a2; o2++)
                if (f2(t3, o2) === f2(e3, -1 === u2 ? 0 : o2 - u2)) {
                  if (-1 === u2 && (u2 = o2), o2 - u2 + 1 === h2)
                    return u2 * s2;
                } else
                  -1 !== u2 && (o2 -= o2 - u2), u2 = -1;
            } else
              for (r3 + h2 > a2 && (r3 = a2 - h2), o2 = r3; o2 >= 0; o2--) {
                for (var c2 = true, d2 = 0; d2 < h2; d2++)
                  if (f2(t3, o2 + d2) !== f2(e3, d2)) {
                    c2 = false;
                    break;
                  }
                if (c2)
                  return o2;
              }
            return -1;
          }
          function w(t3, e3, r3, n3) {
            r3 = Number(r3) || 0;
            var i2 = t3.length - r3;
            n3 ? (n3 = Number(n3)) > i2 && (n3 = i2) : n3 = i2;
            var o2 = e3.length;
            n3 > o2 / 2 && (n3 = o2 / 2);
            for (var s2 = 0; s2 < n3; ++s2) {
              var a2 = parseInt(e3.substr(2 * s2, 2), 16);
              if (V(a2))
                return s2;
              t3[r3 + s2] = a2;
            }
            return s2;
          }
          function _(t3, e3, r3, n3) {
            return q(L(e3, t3.length - r3), t3, r3, n3);
          }
          function k(t3, e3, r3, n3) {
            return q(function(t4) {
              for (var e4 = [], r4 = 0; r4 < t4.length; ++r4)
                e4.push(255 & t4.charCodeAt(r4));
              return e4;
            }(e3), t3, r3, n3);
          }
          function S(t3, e3, r3, n3) {
            return q(F(e3), t3, r3, n3);
          }
          function A(t3, e3, r3, n3) {
            return q(function(t4, e4) {
              for (var r4, n4, i2, o2 = [], s2 = 0; s2 < t4.length && !((e4 -= 2) < 0); ++s2)
                n4 = (r4 = t4.charCodeAt(s2)) >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n4);
              return o2;
            }(e3, t3.length - r3), t3, r3, n3);
          }
          function x(t3, e3, r3) {
            return 0 === e3 && r3 === t3.length ? n2.fromByteArray(t3) : n2.fromByteArray(t3.slice(e3, r3));
          }
          function M(t3, e3, r3) {
            r3 = Math.min(t3.length, r3);
            for (var n3 = [], i2 = e3; i2 < r3; ) {
              var o2, s2, a2, h2, f2 = t3[i2], u2 = null, c2 = f2 > 239 ? 4 : f2 > 223 ? 3 : f2 > 191 ? 2 : 1;
              if (i2 + c2 <= r3)
                switch (c2) {
                  case 1:
                    f2 < 128 && (u2 = f2);
                    break;
                  case 2:
                    128 == (192 & (o2 = t3[i2 + 1])) && (h2 = (31 & f2) << 6 | 63 & o2) > 127 && (u2 = h2);
                    break;
                  case 3:
                    o2 = t3[i2 + 1], s2 = t3[i2 + 2], 128 == (192 & o2) && 128 == (192 & s2) && (h2 = (15 & f2) << 12 | (63 & o2) << 6 | 63 & s2) > 2047 && (h2 < 55296 || h2 > 57343) && (u2 = h2);
                    break;
                  case 4:
                    o2 = t3[i2 + 1], s2 = t3[i2 + 2], a2 = t3[i2 + 3], 128 == (192 & o2) && 128 == (192 & s2) && 128 == (192 & a2) && (h2 = (15 & f2) << 18 | (63 & o2) << 12 | (63 & s2) << 6 | 63 & a2) > 65535 && h2 < 1114112 && (u2 = h2);
                }
              null === u2 ? (u2 = 65533, c2 = 1) : u2 > 65535 && (u2 -= 65536, n3.push(u2 >>> 10 & 1023 | 55296), u2 = 56320 | 1023 & u2), n3.push(u2), i2 += c2;
            }
            return function(t4) {
              var e4 = t4.length;
              if (e4 <= E)
                return String.fromCharCode.apply(String, t4);
              for (var r4 = "", n4 = 0; n4 < e4; )
                r4 += String.fromCharCode.apply(String, t4.slice(n4, n4 += E));
              return r4;
            }(n3);
          }
          e2.kMaxLength = s, h.TYPED_ARRAY_SUPPORT = function() {
            try {
              var t3 = new Uint8Array(1), e3 = { foo: function() {
                return 42;
              } };
              return Object.setPrototypeOf(e3, Uint8Array.prototype), Object.setPrototypeOf(t3, e3), 42 === t3.foo();
            } catch (t4) {
              return false;
            }
          }(), h.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(h.prototype, "parent", { enumerable: true, get: function() {
            if (h.isBuffer(this))
              return this.buffer;
          } }), Object.defineProperty(h.prototype, "offset", { enumerable: true, get: function() {
            if (h.isBuffer(this))
              return this.byteOffset;
          } }), h.poolSize = 8192, h.from = function(t3, e3, r3) {
            return f(t3, e3, r3);
          }, Object.setPrototypeOf(h.prototype, Uint8Array.prototype), Object.setPrototypeOf(h, Uint8Array), h.alloc = function(t3, e3, r3) {
            return function(t4, e4, r4) {
              return u(t4), t4 <= 0 ? a(t4) : void 0 !== e4 ? "string" == typeof r4 ? a(t4).fill(e4, r4) : a(t4).fill(e4) : a(t4);
            }(t3, e3, r3);
          }, h.allocUnsafe = function(t3) {
            return c(t3);
          }, h.allocUnsafeSlow = function(t3) {
            return c(t3);
          }, h.isBuffer = function(t3) {
            return null != t3 && true === t3._isBuffer && t3 !== h.prototype;
          }, h.compare = function(t3, e3) {
            if (U(t3, Uint8Array) && (t3 = h.from(t3, t3.offset, t3.byteLength)), U(e3, Uint8Array) && (e3 = h.from(e3, e3.offset, e3.byteLength)), !h.isBuffer(t3) || !h.isBuffer(e3))
              throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (t3 === e3)
              return 0;
            for (var r3 = t3.length, n3 = e3.length, i2 = 0, o2 = Math.min(r3, n3); i2 < o2; ++i2)
              if (t3[i2] !== e3[i2]) {
                r3 = t3[i2], n3 = e3[i2];
                break;
              }
            return r3 < n3 ? -1 : n3 < r3 ? 1 : 0;
          }, h.isEncoding = function(t3) {
            switch (String(t3).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return true;
              default:
                return false;
            }
          }, h.concat = function(t3, e3) {
            if (!Array.isArray(t3))
              throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === t3.length)
              return h.alloc(0);
            var r3;
            if (void 0 === e3)
              for (e3 = 0, r3 = 0; r3 < t3.length; ++r3)
                e3 += t3[r3].length;
            var n3 = h.allocUnsafe(e3), i2 = 0;
            for (r3 = 0; r3 < t3.length; ++r3) {
              var o2 = t3[r3];
              if (U(o2, Uint8Array))
                i2 + o2.length > n3.length ? h.from(o2).copy(n3, i2) : Uint8Array.prototype.set.call(n3, o2, i2);
              else {
                if (!h.isBuffer(o2))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                o2.copy(n3, i2);
              }
              i2 += o2.length;
            }
            return n3;
          }, h.byteLength = g, h.prototype._isBuffer = true, h.prototype.swap16 = function() {
            var t3 = this.length;
            if (t3 % 2 != 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var e3 = 0; e3 < t3; e3 += 2)
              m(this, e3, e3 + 1);
            return this;
          }, h.prototype.swap32 = function() {
            var t3 = this.length;
            if (t3 % 4 != 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var e3 = 0; e3 < t3; e3 += 4)
              m(this, e3, e3 + 3), m(this, e3 + 1, e3 + 2);
            return this;
          }, h.prototype.swap64 = function() {
            var t3 = this.length;
            if (t3 % 8 != 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var e3 = 0; e3 < t3; e3 += 8)
              m(this, e3, e3 + 7), m(this, e3 + 1, e3 + 6), m(this, e3 + 2, e3 + 5), m(this, e3 + 3, e3 + 4);
            return this;
          }, h.prototype.toString = function() {
            var t3 = this.length;
            return 0 === t3 ? "" : 0 === arguments.length ? M(this, 0, t3) : y.apply(this, arguments);
          }, h.prototype.toLocaleString = h.prototype.toString, h.prototype.equals = function(t3) {
            if (!h.isBuffer(t3))
              throw new TypeError("Argument must be a Buffer");
            return this === t3 || 0 === h.compare(this, t3);
          }, h.prototype.inspect = function() {
            var t3 = "", r3 = e2.INSPECT_MAX_BYTES;
            return t3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (t3 += " ... "), "<Buffer " + t3 + ">";
          }, o && (h.prototype[o] = h.prototype.inspect), h.prototype.compare = function(t3, e3, r3, n3, i2) {
            if (U(t3, Uint8Array) && (t3 = h.from(t3, t3.offset, t3.byteLength)), !h.isBuffer(t3))
              throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t3);
            if (void 0 === e3 && (e3 = 0), void 0 === r3 && (r3 = t3 ? t3.length : 0), void 0 === n3 && (n3 = 0), void 0 === i2 && (i2 = this.length), e3 < 0 || r3 > t3.length || n3 < 0 || i2 > this.length)
              throw new RangeError("out of range index");
            if (n3 >= i2 && e3 >= r3)
              return 0;
            if (n3 >= i2)
              return -1;
            if (e3 >= r3)
              return 1;
            if (this === t3)
              return 0;
            for (var o2 = (i2 >>>= 0) - (n3 >>>= 0), s2 = (r3 >>>= 0) - (e3 >>>= 0), a2 = Math.min(o2, s2), f2 = this.slice(n3, i2), u2 = t3.slice(e3, r3), c2 = 0; c2 < a2; ++c2)
              if (f2[c2] !== u2[c2]) {
                o2 = f2[c2], s2 = u2[c2];
                break;
              }
            return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
          }, h.prototype.includes = function(t3, e3, r3) {
            return -1 !== this.indexOf(t3, e3, r3);
          }, h.prototype.indexOf = function(t3, e3, r3) {
            return v(this, t3, e3, r3, true);
          }, h.prototype.lastIndexOf = function(t3, e3, r3) {
            return v(this, t3, e3, r3, false);
          }, h.prototype.write = function(t3, e3, r3, n3) {
            if (void 0 === e3)
              n3 = "utf8", r3 = this.length, e3 = 0;
            else if (void 0 === r3 && "string" == typeof e3)
              n3 = e3, r3 = this.length, e3 = 0;
            else {
              if (!isFinite(e3))
                throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
              e3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r3, r3 = void 0);
            }
            var i2 = this.length - e3;
            if ((void 0 === r3 || r3 > i2) && (r3 = i2), t3.length > 0 && (r3 < 0 || e3 < 0) || e3 > this.length)
              throw new RangeError("Attempt to write outside buffer bounds");
            n3 || (n3 = "utf8");
            for (var o2 = false; ; )
              switch (n3) {
                case "hex":
                  return w(this, t3, e3, r3);
                case "utf8":
                case "utf-8":
                  return _(this, t3, e3, r3);
                case "ascii":
                case "latin1":
                case "binary":
                  return k(this, t3, e3, r3);
                case "base64":
                  return S(this, t3, e3, r3);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return A(this, t3, e3, r3);
                default:
                  if (o2)
                    throw new TypeError("Unknown encoding: " + n3);
                  n3 = ("" + n3).toLowerCase(), o2 = true;
              }
          }, h.prototype.toJSON = function() {
            return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
          };
          var E = 4096;
          function B(t3, e3, r3) {
            var n3 = "";
            r3 = Math.min(t3.length, r3);
            for (var i2 = e3; i2 < r3; ++i2)
              n3 += String.fromCharCode(127 & t3[i2]);
            return n3;
          }
          function I(t3, e3, r3) {
            var n3 = "";
            r3 = Math.min(t3.length, r3);
            for (var i2 = e3; i2 < r3; ++i2)
              n3 += String.fromCharCode(t3[i2]);
            return n3;
          }
          function P(t3, e3, r3) {
            var n3 = t3.length;
            (!e3 || e3 < 0) && (e3 = 0), (!r3 || r3 < 0 || r3 > n3) && (r3 = n3);
            for (var i2 = "", o2 = e3; o2 < r3; ++o2)
              i2 += z[t3[o2]];
            return i2;
          }
          function T(t3, e3, r3) {
            for (var n3 = t3.slice(e3, r3), i2 = "", o2 = 0; o2 < n3.length - 1; o2 += 2)
              i2 += String.fromCharCode(n3[o2] + 256 * n3[o2 + 1]);
            return i2;
          }
          function R(t3, e3, r3) {
            if (t3 % 1 != 0 || t3 < 0)
              throw new RangeError("offset is not uint");
            if (t3 + e3 > r3)
              throw new RangeError("Trying to access beyond buffer length");
          }
          function O(t3, e3, r3, n3, i2, o2) {
            if (!h.isBuffer(t3))
              throw new TypeError('"buffer" argument must be a Buffer instance');
            if (e3 > i2 || e3 < o2)
              throw new RangeError('"value" argument is out of bounds');
            if (r3 + n3 > t3.length)
              throw new RangeError("Index out of range");
          }
          function C(t3, e3, r3, n3, i2, o2) {
            if (r3 + n3 > t3.length)
              throw new RangeError("Index out of range");
            if (r3 < 0)
              throw new RangeError("Index out of range");
          }
          function j(t3, e3, r3, n3, o2) {
            return e3 = +e3, r3 >>>= 0, o2 || C(t3, 0, r3, 4), i.write(t3, e3, r3, n3, 23, 4), r3 + 4;
          }
          function N(t3, e3, r3, n3, o2) {
            return e3 = +e3, r3 >>>= 0, o2 || C(t3, 0, r3, 8), i.write(t3, e3, r3, n3, 52, 8), r3 + 8;
          }
          h.prototype.slice = function(t3, e3) {
            var r3 = this.length;
            (t3 = ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), (e3 = void 0 === e3 ? r3 : ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), e3 < t3 && (e3 = t3);
            var n3 = this.subarray(t3, e3);
            return Object.setPrototypeOf(n3, h.prototype), n3;
          }, h.prototype.readUintLE = h.prototype.readUIntLE = function(t3, e3, r3) {
            t3 >>>= 0, e3 >>>= 0, r3 || R(t3, e3, this.length);
            for (var n3 = this[t3], i2 = 1, o2 = 0; ++o2 < e3 && (i2 *= 256); )
              n3 += this[t3 + o2] * i2;
            return n3;
          }, h.prototype.readUintBE = h.prototype.readUIntBE = function(t3, e3, r3) {
            t3 >>>= 0, e3 >>>= 0, r3 || R(t3, e3, this.length);
            for (var n3 = this[t3 + --e3], i2 = 1; e3 > 0 && (i2 *= 256); )
              n3 += this[t3 + --e3] * i2;
            return n3;
          }, h.prototype.readUint8 = h.prototype.readUInt8 = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 1, this.length), this[t3];
          }, h.prototype.readUint16LE = h.prototype.readUInt16LE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 2, this.length), this[t3] | this[t3 + 1] << 8;
          }, h.prototype.readUint16BE = h.prototype.readUInt16BE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 2, this.length), this[t3] << 8 | this[t3 + 1];
          }, h.prototype.readUint32LE = h.prototype.readUInt32LE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), (this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16) + 16777216 * this[t3 + 3];
          }, h.prototype.readUint32BE = h.prototype.readUInt32BE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), 16777216 * this[t3] + (this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3]);
          }, h.prototype.readIntLE = function(t3, e3, r3) {
            t3 >>>= 0, e3 >>>= 0, r3 || R(t3, e3, this.length);
            for (var n3 = this[t3], i2 = 1, o2 = 0; ++o2 < e3 && (i2 *= 256); )
              n3 += this[t3 + o2] * i2;
            return n3 >= (i2 *= 128) && (n3 -= Math.pow(2, 8 * e3)), n3;
          }, h.prototype.readIntBE = function(t3, e3, r3) {
            t3 >>>= 0, e3 >>>= 0, r3 || R(t3, e3, this.length);
            for (var n3 = e3, i2 = 1, o2 = this[t3 + --n3]; n3 > 0 && (i2 *= 256); )
              o2 += this[t3 + --n3] * i2;
            return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * e3)), o2;
          }, h.prototype.readInt8 = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 1, this.length), 128 & this[t3] ? -1 * (255 - this[t3] + 1) : this[t3];
          }, h.prototype.readInt16LE = function(t3, e3) {
            t3 >>>= 0, e3 || R(t3, 2, this.length);
            var r3 = this[t3] | this[t3 + 1] << 8;
            return 32768 & r3 ? 4294901760 | r3 : r3;
          }, h.prototype.readInt16BE = function(t3, e3) {
            t3 >>>= 0, e3 || R(t3, 2, this.length);
            var r3 = this[t3 + 1] | this[t3] << 8;
            return 32768 & r3 ? 4294901760 | r3 : r3;
          }, h.prototype.readInt32LE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), this[t3] | this[t3 + 1] << 8 | this[t3 + 2] << 16 | this[t3 + 3] << 24;
          }, h.prototype.readInt32BE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), this[t3] << 24 | this[t3 + 1] << 16 | this[t3 + 2] << 8 | this[t3 + 3];
          }, h.prototype.readFloatLE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), i.read(this, t3, true, 23, 4);
          }, h.prototype.readFloatBE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 4, this.length), i.read(this, t3, false, 23, 4);
          }, h.prototype.readDoubleLE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 8, this.length), i.read(this, t3, true, 52, 8);
          }, h.prototype.readDoubleBE = function(t3, e3) {
            return t3 >>>= 0, e3 || R(t3, 8, this.length), i.read(this, t3, false, 52, 8);
          }, h.prototype.writeUintLE = h.prototype.writeUIntLE = function(t3, e3, r3, n3) {
            t3 = +t3, e3 >>>= 0, r3 >>>= 0, n3 || O(this, t3, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
            var i2 = 1, o2 = 0;
            for (this[e3] = 255 & t3; ++o2 < r3 && (i2 *= 256); )
              this[e3 + o2] = t3 / i2 & 255;
            return e3 + r3;
          }, h.prototype.writeUintBE = h.prototype.writeUIntBE = function(t3, e3, r3, n3) {
            t3 = +t3, e3 >>>= 0, r3 >>>= 0, n3 || O(this, t3, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
            var i2 = r3 - 1, o2 = 1;
            for (this[e3 + i2] = 255 & t3; --i2 >= 0 && (o2 *= 256); )
              this[e3 + i2] = t3 / o2 & 255;
            return e3 + r3;
          }, h.prototype.writeUint8 = h.prototype.writeUInt8 = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 1, 255, 0), this[e3] = 255 & t3, e3 + 1;
          }, h.prototype.writeUint16LE = h.prototype.writeUInt16LE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 2, 65535, 0), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, e3 + 2;
          }, h.prototype.writeUint16BE = h.prototype.writeUInt16BE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 2, 65535, 0), this[e3] = t3 >>> 8, this[e3 + 1] = 255 & t3, e3 + 2;
          }, h.prototype.writeUint32LE = h.prototype.writeUInt32LE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 4, 4294967295, 0), this[e3 + 3] = t3 >>> 24, this[e3 + 2] = t3 >>> 16, this[e3 + 1] = t3 >>> 8, this[e3] = 255 & t3, e3 + 4;
          }, h.prototype.writeUint32BE = h.prototype.writeUInt32BE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 4, 4294967295, 0), this[e3] = t3 >>> 24, this[e3 + 1] = t3 >>> 16, this[e3 + 2] = t3 >>> 8, this[e3 + 3] = 255 & t3, e3 + 4;
          }, h.prototype.writeIntLE = function(t3, e3, r3, n3) {
            if (t3 = +t3, e3 >>>= 0, !n3) {
              var i2 = Math.pow(2, 8 * r3 - 1);
              O(this, t3, e3, r3, i2 - 1, -i2);
            }
            var o2 = 0, s2 = 1, a2 = 0;
            for (this[e3] = 255 & t3; ++o2 < r3 && (s2 *= 256); )
              t3 < 0 && 0 === a2 && 0 !== this[e3 + o2 - 1] && (a2 = 1), this[e3 + o2] = (t3 / s2 >> 0) - a2 & 255;
            return e3 + r3;
          }, h.prototype.writeIntBE = function(t3, e3, r3, n3) {
            if (t3 = +t3, e3 >>>= 0, !n3) {
              var i2 = Math.pow(2, 8 * r3 - 1);
              O(this, t3, e3, r3, i2 - 1, -i2);
            }
            var o2 = r3 - 1, s2 = 1, a2 = 0;
            for (this[e3 + o2] = 255 & t3; --o2 >= 0 && (s2 *= 256); )
              t3 < 0 && 0 === a2 && 0 !== this[e3 + o2 + 1] && (a2 = 1), this[e3 + o2] = (t3 / s2 >> 0) - a2 & 255;
            return e3 + r3;
          }, h.prototype.writeInt8 = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 1, 127, -128), t3 < 0 && (t3 = 255 + t3 + 1), this[e3] = 255 & t3, e3 + 1;
          }, h.prototype.writeInt16LE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 2, 32767, -32768), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, e3 + 2;
          }, h.prototype.writeInt16BE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 2, 32767, -32768), this[e3] = t3 >>> 8, this[e3 + 1] = 255 & t3, e3 + 2;
          }, h.prototype.writeInt32LE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 4, 2147483647, -2147483648), this[e3] = 255 & t3, this[e3 + 1] = t3 >>> 8, this[e3 + 2] = t3 >>> 16, this[e3 + 3] = t3 >>> 24, e3 + 4;
          }, h.prototype.writeInt32BE = function(t3, e3, r3) {
            return t3 = +t3, e3 >>>= 0, r3 || O(this, t3, e3, 4, 2147483647, -2147483648), t3 < 0 && (t3 = 4294967295 + t3 + 1), this[e3] = t3 >>> 24, this[e3 + 1] = t3 >>> 16, this[e3 + 2] = t3 >>> 8, this[e3 + 3] = 255 & t3, e3 + 4;
          }, h.prototype.writeFloatLE = function(t3, e3, r3) {
            return j(this, t3, e3, true, r3);
          }, h.prototype.writeFloatBE = function(t3, e3, r3) {
            return j(this, t3, e3, false, r3);
          }, h.prototype.writeDoubleLE = function(t3, e3, r3) {
            return N(this, t3, e3, true, r3);
          }, h.prototype.writeDoubleBE = function(t3, e3, r3) {
            return N(this, t3, e3, false, r3);
          }, h.prototype.copy = function(t3, e3, r3, n3) {
            if (!h.isBuffer(t3))
              throw new TypeError("argument should be a Buffer");
            if (r3 || (r3 = 0), n3 || 0 === n3 || (n3 = this.length), e3 >= t3.length && (e3 = t3.length), e3 || (e3 = 0), n3 > 0 && n3 < r3 && (n3 = r3), n3 === r3)
              return 0;
            if (0 === t3.length || 0 === this.length)
              return 0;
            if (e3 < 0)
              throw new RangeError("targetStart out of bounds");
            if (r3 < 0 || r3 >= this.length)
              throw new RangeError("Index out of range");
            if (n3 < 0)
              throw new RangeError("sourceEnd out of bounds");
            n3 > this.length && (n3 = this.length), t3.length - e3 < n3 - r3 && (n3 = t3.length - e3 + r3);
            var i2 = n3 - r3;
            return this === t3 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e3, r3, n3) : Uint8Array.prototype.set.call(t3, this.subarray(r3, n3), e3), i2;
          }, h.prototype.fill = function(t3, e3, r3, n3) {
            if ("string" == typeof t3) {
              if ("string" == typeof e3 ? (n3 = e3, e3 = 0, r3 = this.length) : "string" == typeof r3 && (n3 = r3, r3 = this.length), void 0 !== n3 && "string" != typeof n3)
                throw new TypeError("encoding must be a string");
              if ("string" == typeof n3 && !h.isEncoding(n3))
                throw new TypeError("Unknown encoding: " + n3);
              if (1 === t3.length) {
                var i2 = t3.charCodeAt(0);
                ("utf8" === n3 && i2 < 128 || "latin1" === n3) && (t3 = i2);
              }
            } else
              "number" == typeof t3 ? t3 &= 255 : "boolean" == typeof t3 && (t3 = Number(t3));
            if (e3 < 0 || this.length < e3 || this.length < r3)
              throw new RangeError("Out of range index");
            if (r3 <= e3)
              return this;
            var o2;
            if (e3 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, t3 || (t3 = 0), "number" == typeof t3)
              for (o2 = e3; o2 < r3; ++o2)
                this[o2] = t3;
            else {
              var s2 = h.isBuffer(t3) ? t3 : h.from(t3, n3), a2 = s2.length;
              if (0 === a2)
                throw new TypeError('The value "' + t3 + '" is invalid for argument "value"');
              for (o2 = 0; o2 < r3 - e3; ++o2)
                this[o2 + e3] = s2[o2 % a2];
            }
            return this;
          };
          var D = /[^+/0-9A-Za-z-_]/g;
          function L(t3, e3) {
            var r3;
            e3 = e3 || 1 / 0;
            for (var n3 = t3.length, i2 = null, o2 = [], s2 = 0; s2 < n3; ++s2) {
              if ((r3 = t3.charCodeAt(s2)) > 55295 && r3 < 57344) {
                if (!i2) {
                  if (r3 > 56319) {
                    (e3 -= 3) > -1 && o2.push(239, 191, 189);
                    continue;
                  }
                  if (s2 + 1 === n3) {
                    (e3 -= 3) > -1 && o2.push(239, 191, 189);
                    continue;
                  }
                  i2 = r3;
                  continue;
                }
                if (r3 < 56320) {
                  (e3 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
                  continue;
                }
                r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
              } else
                i2 && (e3 -= 3) > -1 && o2.push(239, 191, 189);
              if (i2 = null, r3 < 128) {
                if ((e3 -= 1) < 0)
                  break;
                o2.push(r3);
              } else if (r3 < 2048) {
                if ((e3 -= 2) < 0)
                  break;
                o2.push(r3 >> 6 | 192, 63 & r3 | 128);
              } else if (r3 < 65536) {
                if ((e3 -= 3) < 0)
                  break;
                o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
              } else {
                if (!(r3 < 1114112))
                  throw new Error("Invalid code point");
                if ((e3 -= 4) < 0)
                  break;
                o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
              }
            }
            return o2;
          }
          function F(t3) {
            return n2.toByteArray(function(t4) {
              if ((t4 = (t4 = t4.split("=")[0]).trim().replace(D, "")).length < 2)
                return "";
              for (; t4.length % 4 != 0; )
                t4 += "=";
              return t4;
            }(t3));
          }
          function q(t3, e3, r3, n3) {
            for (var i2 = 0; i2 < n3 && !(i2 + r3 >= e3.length || i2 >= t3.length); ++i2)
              e3[i2 + r3] = t3[i2];
            return i2;
          }
          function U(t3, e3) {
            return t3 instanceof e3 || null != t3 && null != t3.constructor && null != t3.constructor.name && t3.constructor.name === e3.name;
          }
          function V(t3) {
            return t3 != t3;
          }
          var z = function() {
            for (var t3 = "0123456789abcdef", e3 = new Array(256), r3 = 0; r3 < 16; ++r3)
              for (var n3 = 16 * r3, i2 = 0; i2 < 16; ++i2)
                e3[n3 + i2] = t3[r3] + t3[i2];
            return e3;
          }();
        }, 22191: (t2, e2) => {
          "use strict";
          e2.byteLength = function(t3) {
            var e3 = h(t3), r3 = e3[0], n3 = e3[1];
            return 3 * (r3 + n3) / 4 - n3;
          }, e2.toByteArray = function(t3) {
            var e3, r3, o2 = h(t3), s2 = o2[0], a2 = o2[1], f2 = new i(function(t4, e4, r4) {
              return 3 * (e4 + r4) / 4 - r4;
            }(0, s2, a2)), u = 0, c = a2 > 0 ? s2 - 4 : s2;
            for (r3 = 0; r3 < c; r3 += 4)
              e3 = n2[t3.charCodeAt(r3)] << 18 | n2[t3.charCodeAt(r3 + 1)] << 12 | n2[t3.charCodeAt(r3 + 2)] << 6 | n2[t3.charCodeAt(r3 + 3)], f2[u++] = e3 >> 16 & 255, f2[u++] = e3 >> 8 & 255, f2[u++] = 255 & e3;
            return 2 === a2 && (e3 = n2[t3.charCodeAt(r3)] << 2 | n2[t3.charCodeAt(r3 + 1)] >> 4, f2[u++] = 255 & e3), 1 === a2 && (e3 = n2[t3.charCodeAt(r3)] << 10 | n2[t3.charCodeAt(r3 + 1)] << 4 | n2[t3.charCodeAt(r3 + 2)] >> 2, f2[u++] = e3 >> 8 & 255, f2[u++] = 255 & e3), f2;
          }, e2.fromByteArray = function(t3) {
            for (var e3, n3 = t3.length, i2 = n3 % 3, o2 = [], s2 = 16383, a2 = 0, h2 = n3 - i2; a2 < h2; a2 += s2)
              o2.push(f(t3, a2, a2 + s2 > h2 ? h2 : a2 + s2));
            return 1 === i2 ? (e3 = t3[n3 - 1], o2.push(r2[e3 >> 2] + r2[e3 << 4 & 63] + "==")) : 2 === i2 && (e3 = (t3[n3 - 2] << 8) + t3[n3 - 1], o2.push(r2[e3 >> 10] + r2[e3 >> 4 & 63] + r2[e3 << 2 & 63] + "=")), o2.join("");
          };
          for (var r2 = [], n2 = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s)
            r2[s] = o[s], n2[o.charCodeAt(s)] = s;
          function h(t3) {
            var e3 = t3.length;
            if (e3 % 4 > 0)
              throw new Error("Invalid string. Length must be a multiple of 4");
            var r3 = t3.indexOf("=");
            return -1 === r3 && (r3 = e3), [r3, r3 === e3 ? 0 : 4 - r3 % 4];
          }
          function f(t3, e3, n3) {
            for (var i2, o2, s2 = [], a2 = e3; a2 < n3; a2 += 3)
              i2 = (t3[a2] << 16 & 16711680) + (t3[a2 + 1] << 8 & 65280) + (255 & t3[a2 + 2]), s2.push(r2[(o2 = i2) >> 18 & 63] + r2[o2 >> 12 & 63] + r2[o2 >> 6 & 63] + r2[63 & o2]);
            return s2.join("");
          }
          n2["-".charCodeAt(0)] = 62, n2["_".charCodeAt(0)] = 63;
        }, 73703: (t2, e2) => {
          e2.read = function(t3, e3, r2, n2, i) {
            var o, s, a = 8 * i - n2 - 1, h = (1 << a) - 1, f = h >> 1, u = -7, c = r2 ? i - 1 : 0, d = r2 ? -1 : 1, l = t3[e3 + c];
            for (c += d, o = l & (1 << -u) - 1, l >>= -u, u += a; u > 0; o = 256 * o + t3[e3 + c], c += d, u -= 8)
              ;
            for (s = o & (1 << -u) - 1, o >>= -u, u += n2; u > 0; s = 256 * s + t3[e3 + c], c += d, u -= 8)
              ;
            if (0 === o)
              o = 1 - f;
            else {
              if (o === h)
                return s ? NaN : 1 / 0 * (l ? -1 : 1);
              s += Math.pow(2, n2), o -= f;
            }
            return (l ? -1 : 1) * s * Math.pow(2, o - n2);
          }, e2.write = function(t3, e3, r2, n2, i, o) {
            var s, a, h, f = 8 * o - i - 1, u = (1 << f) - 1, c = u >> 1, d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = n2 ? 0 : o - 1, p = n2 ? 1 : -1, g = e3 < 0 || 0 === e3 && 1 / e3 < 0 ? 1 : 0;
            for (e3 = Math.abs(e3), isNaN(e3) || e3 === 1 / 0 ? (a = isNaN(e3) ? 1 : 0, s = u) : (s = Math.floor(Math.log(e3) / Math.LN2), e3 * (h = Math.pow(2, -s)) < 1 && (s--, h *= 2), (e3 += s + c >= 1 ? d / h : d * Math.pow(2, 1 - c)) * h >= 2 && (s++, h /= 2), s + c >= u ? (a = 0, s = u) : s + c >= 1 ? (a = (e3 * h - 1) * Math.pow(2, i), s += c) : (a = e3 * Math.pow(2, c - 1) * Math.pow(2, i), s = 0)); i >= 8; t3[r2 + l] = 255 & a, l += p, a /= 256, i -= 8)
              ;
            for (s = s << i | a, f += i; f > 0; t3[r2 + l] = 255 & s, l += p, s /= 256, f -= 8)
              ;
            t3[r2 + l - p] |= 128 * g;
          };
        }, 21924: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(40210), i = r2(55559), o = i(n2("String.prototype.indexOf"));
          t2.exports = function(t3, e3) {
            var r3 = n2(t3, !!e3);
            return "function" == typeof r3 && o(t3, ".prototype.") > -1 ? i(r3) : r3;
          };
        }, 55559: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(58612), i = r2(40210), o = i("%Function.prototype.apply%"), s = i("%Function.prototype.call%"), a = i("%Reflect.apply%", true) || n2.call(s, o), h = i("%Object.getOwnPropertyDescriptor%", true), f = i("%Object.defineProperty%", true), u = i("%Math.max%");
          if (f)
            try {
              f({}, "a", { value: 1 });
            } catch (t3) {
              f = null;
            }
          t2.exports = function(t3) {
            var e3 = a(n2, s, arguments);
            if (h && f) {
              var r3 = h(e3, "length");
              r3.configurable && f(e3, "length", { value: 1 + u(0, t3.length - (arguments.length - 1)) });
            }
            return e3;
          };
          var c = function() {
            return a(n2, o, arguments);
          };
          f ? f(t2.exports, "apply", { value: c }) : t2.exports.apply = c;
        }, 71027: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer, i = r2(22263).Transform, o = r2(32553).s;
          function s(t3) {
            i.call(this), this.hashMode = "string" == typeof t3, this.hashMode ? this[t3] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
          }
          r2(35717)(s, i), s.prototype.update = function(t3, e3, r3) {
            "string" == typeof t3 && (t3 = n2.from(t3, e3));
            var i2 = this._update(t3);
            return this.hashMode ? this : (r3 && (i2 = this._toString(i2, r3)), i2);
          }, s.prototype.setAutoPadding = function() {
          }, s.prototype.getAuthTag = function() {
            throw new Error("trying to get auth tag in unsupported state");
          }, s.prototype.setAuthTag = function() {
            throw new Error("trying to set auth tag in unsupported state");
          }, s.prototype.setAAD = function() {
            throw new Error("trying to set aad in unsupported state");
          }, s.prototype._transform = function(t3, e3, r3) {
            var n3;
            try {
              this.hashMode ? this._update(t3) : this.push(this._update(t3));
            } catch (t4) {
              n3 = t4;
            } finally {
              r3(n3);
            }
          }, s.prototype._flush = function(t3) {
            var e3;
            try {
              this.push(this.__final());
            } catch (t4) {
              e3 = t4;
            }
            t3(e3);
          }, s.prototype._finalOrDigest = function(t3) {
            var e3 = this.__final() || n2.alloc(0);
            return t3 && (e3 = this._toString(e3, t3, true)), e3;
          }, s.prototype._toString = function(t3, e3, r3) {
            if (this._decoder || (this._decoder = new o(e3), this._encoding = e3), this._encoding !== e3)
              throw new Error("can't switch encodings");
            var n3 = this._decoder.write(t3);
            return r3 && (n3 += this._decoder.end()), n3;
          }, t2.exports = s;
        }, 76393: (t2, e2, r2) => {
          var n2 = r2(86266), i = r2(16426);
          t2.exports = function(t3) {
            return new s(t3);
          };
          var o = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 } };
          function s(t3) {
            this.curveType = o[t3], this.curveType || (this.curveType = { name: t3 }), this.curve = new n2.ec(this.curveType.name), this.keys = void 0;
          }
          function a(t3, e3, r3) {
            Array.isArray(t3) || (t3 = t3.toArray());
            var n3 = new Buffer(t3);
            if (r3 && n3.length < r3) {
              var i2 = new Buffer(r3 - n3.length);
              i2.fill(0), n3 = Buffer.concat([i2, n3]);
            }
            return e3 ? n3.toString(e3) : n3;
          }
          o.p224 = o.secp224r1, o.p256 = o.secp256r1 = o.prime256v1, o.p192 = o.secp192r1 = o.prime192v1, s.prototype.generateKeys = function(t3, e3) {
            return this.keys = this.curve.genKeyPair(), this.getPublicKey(t3, e3);
          }, s.prototype.computeSecret = function(t3, e3, r3) {
            return e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), a(this.curve.keyFromPublic(t3).getPublic().mul(this.keys.getPrivate()).getX(), r3, this.curveType.byteLength);
          }, s.prototype.getPublicKey = function(t3, e3) {
            var r3 = this.keys.getPublic("compressed" === e3, true);
            return "hybrid" === e3 && (r3[r3.length - 1] % 2 ? r3[0] = 7 : r3[0] = 6), a(r3, t3);
          }, s.prototype.getPrivateKey = function(t3) {
            return a(this.keys.getPrivate(), t3);
          }, s.prototype.setPublicKey = function(t3, e3) {
            return e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), this.keys._importPublic(t3), this;
          }, s.prototype.setPrivateKey = function(t3, e3) {
            e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3));
            var r3 = new i(t3);
            return r3 = r3.toString(16), this.keys._importPrivate(r3), this;
          };
        }, 16426: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 23482: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35717), i = r2(62318), o = r2(79785), s = r2(89072), a = r2(71027);
          function h(t3) {
            a.call(this, "digest"), this._hash = t3;
          }
          n2(h, a), h.prototype._update = function(t3) {
            this._hash.update(t3);
          }, h.prototype._final = function() {
            return this._hash.digest();
          }, t2.exports = function(t3) {
            return "md5" === (t3 = t3.toLowerCase()) ? new i() : "rmd160" === t3 || "ripemd160" === t3 ? new o() : new h(s(t3));
          };
        }, 78028: (t2, e2, r2) => {
          var n2 = r2(62318);
          t2.exports = function(t3) {
            return new n2().update(t3).digest();
          };
        }, 58355: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35717), i = r2(51031), o = r2(71027), s = r2(89509).Buffer, a = r2(78028), h = r2(79785), f = r2(89072), u = s.alloc(128);
          function c(t3, e3) {
            o.call(this, "digest"), "string" == typeof e3 && (e3 = s.from(e3));
            var r3 = "sha512" === t3 || "sha384" === t3 ? 128 : 64;
            this._alg = t3, this._key = e3, e3.length > r3 ? e3 = ("rmd160" === t3 ? new h() : f(t3)).update(e3).digest() : e3.length < r3 && (e3 = s.concat([e3, u], r3));
            for (var n3 = this._ipad = s.allocUnsafe(r3), i2 = this._opad = s.allocUnsafe(r3), a2 = 0; a2 < r3; a2++)
              n3[a2] = 54 ^ e3[a2], i2[a2] = 92 ^ e3[a2];
            this._hash = "rmd160" === t3 ? new h() : f(t3), this._hash.update(n3);
          }
          n2(c, o), c.prototype._update = function(t3) {
            this._hash.update(t3);
          }, c.prototype._final = function() {
            var t3 = this._hash.digest();
            return ("rmd160" === this._alg ? new h() : f(this._alg)).update(this._opad).update(t3).digest();
          }, t2.exports = function(t3, e3) {
            return "rmd160" === (t3 = t3.toLowerCase()) || "ripemd160" === t3 ? new c("rmd160", e3) : "md5" === t3 ? new i(a, e3) : new c(t3, e3);
          };
        }, 51031: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35717), i = r2(89509).Buffer, o = r2(71027), s = i.alloc(128), a = 64;
          function h(t3, e3) {
            o.call(this, "digest"), "string" == typeof e3 && (e3 = i.from(e3)), this._alg = t3, this._key = e3, e3.length > a ? e3 = t3(e3) : e3.length < a && (e3 = i.concat([e3, s], a));
            for (var r3 = this._ipad = i.allocUnsafe(a), n3 = this._opad = i.allocUnsafe(a), h2 = 0; h2 < a; h2++)
              r3[h2] = 54 ^ e3[h2], n3[h2] = 92 ^ e3[h2];
            this._hash = [r3];
          }
          n2(h, o), h.prototype._update = function(t3) {
            this._hash.push(t3);
          }, h.prototype._final = function() {
            var t3 = this._alg(i.concat(this._hash));
            return this._alg(i.concat([this._opad, t3]));
          }, t2.exports = h;
        }, 55835: (t2, e2, r2) => {
          "use strict";
          e2.randomBytes = e2.rng = e2.pseudoRandomBytes = e2.prng = r2(61798), e2.createHash = e2.Hash = r2(23482), e2.createHmac = e2.Hmac = r2(58355);
          var n2 = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(Object.keys(r2(56042)));
          e2.getHashes = function() {
            return n2;
          };
          var i = r2(25632);
          e2.pbkdf2 = i.pbkdf2, e2.pbkdf2Sync = i.pbkdf2Sync;
          var o = r2(44696);
          ["Cipher", "createCipher", "Cipheriv", "createCipheriv", "Decipher", "createDecipher", "Decipheriv", "createDecipheriv", "getCiphers", "listCiphers"].forEach(function(t3) {
            e2[t3] = o[t3];
          });
          var s = r2(62607);
          ["DiffieHellmanGroup", "createDiffieHellmanGroup", "getDiffieHellman", "createDiffieHellman", "DiffieHellman"].forEach(function(t3) {
            e2[t3] = s[t3];
          });
          var a = r2(27905);
          ["createSign", "Sign", "createVerify", "Verify"].forEach(function(t3) {
            e2[t3] = a[t3];
          }), e2.createECDH = r2(76393);
          var h = r2(7900);
          ["publicEncrypt", "privateEncrypt", "publicDecrypt", "privateDecrypt"].forEach(function(t3) {
            e2[t3] = h[t3];
          }), ["createCredentials"].forEach(function(t3) {
            e2[t3] = function() {
              throw new Error(["sorry, " + t3 + " is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"));
            };
          });
        }, 62607: (t2, e2, r2) => {
          var n2 = r2(43590), i = r2(29799), o = r2(57426);
          e2.DiffieHellmanGroup = e2.createDiffieHellmanGroup = e2.getDiffieHellman = function(t3) {
            var e3 = new Buffer(i[t3].prime, "hex"), r3 = new Buffer(i[t3].gen, "hex");
            return new o(e3, r3);
          }, e2.createDiffieHellman = e2.DiffieHellman = function(t3, e3, r3, i2) {
            return (Buffer.isBuffer(e3) || "string" == typeof e3 && -1 === ["hex", "binary", "base64"].indexOf(e3)) && (i2 = r3, r3 = e3, e3 = void 0), e3 = e3 || "binary", i2 = i2 || "binary", r3 = r3 || new Buffer([2]), Buffer.isBuffer(r3) || (r3 = new Buffer(r3, i2)), "number" == typeof t3 ? new o(n2(t3, r3), r3, true) : (Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), new o(t3, r3, true));
          };
        }, 57426: (t2, e2, r2) => {
          var n2 = r2(83620), i = new (r2(63047))(), o = new n2(24), s = new n2(11), a = new n2(10), h = new n2(3), f = new n2(7), u = r2(43590), c = r2(61798);
          function d(t3, e3) {
            return e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), this._pub = new n2(t3), this;
          }
          function l(t3, e3) {
            return e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), this._priv = new n2(t3), this;
          }
          t2.exports = y;
          var p = {};
          function g(t3, e3) {
            try {
              Object.defineProperty(t3, "verifyError", { enumerable: true, value: e3, writable: false });
            } catch (r3) {
              t3.verifyError = e3;
            }
          }
          function y(t3, e3, r3) {
            this.setGenerator(e3), this.__prime = new n2(t3), this._prime = n2.mont(this.__prime), this._primeLen = t3.length, this._pub = void 0, this._priv = void 0, r3 ? (this.setPublicKey = d, this.setPrivateKey = l, g(this, function(t4, e4) {
              var r4 = e4.toString("hex"), n3 = [r4, t4.toString(16)].join("_");
              if (n3 in p)
                return p[n3];
              var c2, d2 = 0;
              if (t4.isEven() || !u.simpleSieve || !u.fermatTest(t4) || !i.test(t4))
                return d2 += 1, d2 += "02" === r4 || "05" === r4 ? 8 : 4, p[n3] = d2, d2;
              switch (i.test(t4.shrn(1)) || (d2 += 2), r4) {
                case "02":
                  t4.mod(o).cmp(s) && (d2 += 8);
                  break;
                case "05":
                  (c2 = t4.mod(a)).cmp(h) && c2.cmp(f) && (d2 += 8);
                  break;
                default:
                  d2 += 4;
              }
              return p[n3] = d2, d2;
            }(this.__prime, e3))) : g(this, 8);
          }
          function m(t3, e3) {
            var r3 = new Buffer(t3.toArray());
            return e3 ? r3.toString(e3) : r3;
          }
          y.prototype.generateKeys = function() {
            return this._priv || (this._priv = new n2(c(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
          }, y.prototype.computeSecret = function(t3) {
            var e3 = (t3 = (t3 = new n2(t3)).toRed(this._prime)).redPow(this._priv).fromRed(), r3 = new Buffer(e3.toArray()), i2 = this.getPrime();
            if (r3.length < i2.length) {
              var o2 = new Buffer(i2.length - r3.length);
              o2.fill(0), r3 = Buffer.concat([o2, r3]);
            }
            return r3;
          }, y.prototype.getPublicKey = function(t3) {
            return m(this._pub, t3);
          }, y.prototype.getPrivateKey = function(t3) {
            return m(this._priv, t3);
          }, y.prototype.getPrime = function(t3) {
            return m(this.__prime, t3);
          }, y.prototype.getGenerator = function(t3) {
            return m(this._gen, t3);
          }, y.prototype.setGenerator = function(t3, e3) {
            return e3 = e3 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e3)), this._gen = new n2(t3), this;
          };
        }, 43590: (t2, e2, r2) => {
          var n2 = r2(61798);
          t2.exports = _, _.simpleSieve = b, _.fermatTest = w;
          var i = r2(83620), o = new i(24), s = new (r2(63047))(), a = new i(1), h = new i(2), f = new i(5), u = new i(16), c = new i(8), d = new i(10), l = new i(3), p = (new i(7), new i(11)), g = new i(4), y = new i(12), m = null;
          function v() {
            if (null !== m)
              return m;
            var t3 = [];
            t3[0] = 2;
            for (var e3 = 1, r3 = 3; r3 < 1048576; r3 += 2) {
              for (var n3 = Math.ceil(Math.sqrt(r3)), i2 = 0; i2 < e3 && t3[i2] <= n3 && r3 % t3[i2] != 0; i2++)
                ;
              e3 !== i2 && t3[i2] <= n3 || (t3[e3++] = r3);
            }
            return m = t3, t3;
          }
          function b(t3) {
            for (var e3 = v(), r3 = 0; r3 < e3.length; r3++)
              if (0 === t3.modn(e3[r3]))
                return 0 === t3.cmpn(e3[r3]);
            return true;
          }
          function w(t3) {
            var e3 = i.mont(t3);
            return 0 === h.toRed(e3).redPow(t3.subn(1)).fromRed().cmpn(1);
          }
          function _(t3, e3) {
            if (t3 < 16)
              return new i(2 === e3 || 5 === e3 ? [140, 123] : [140, 39]);
            var r3, m2;
            function v2(t4) {
              r3 = -1;
              for (var s2 = new i(n2(Math.ceil(t4 / 8))); s2.bitLength() > t4; )
                s2.ishrn(1);
              if (s2.isEven() && s2.iadd(a), s2.testn(1) || s2.iadd(h), e3.cmp(h))
                if (e3.cmp(f))
                  m2 = { major: [g], minor: [h] };
                else {
                  for (rem = s2.mod(d); rem.cmp(l); )
                    s2.iadd(g), rem = s2.mod(d);
                  m2 = { major: [g, u], minor: [h, c] };
                }
              else {
                for (; s2.mod(o).cmp(p); )
                  s2.iadd(g);
                m2 = { major: [o], minor: [y] };
              }
              return s2;
            }
            e3 = new i(e3);
            for (var _2 = v2(t3), k = _2.shrn(1); ; ) {
              for (; _2.bitLength() > t3; )
                k = (_2 = v2(t3)).shrn(1);
              if (r3++, b(k) && b(_2) && w(k) && w(_2) && s.test(k) && s.test(_2))
                return _2;
              _2.iadd(m2.major[r3 % m2.major.length]), k.iadd(m2.minor[r3 % m2.minor.length]);
            }
          }
        }, 83620: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 86266: (t2, e2, r2) => {
          "use strict";
          var n2 = e2;
          n2.version = r2(18597).i8, n2.utils = r2(80953), n2.rand = r2(29931), n2.hmacDRBG = r2(4196), n2.curve = r2(88254), n2.curves = r2(45427), n2.ec = r2(57954);
        }, 4918: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(73785), i = r2(86266), o = i.utils.getNAF, s = i.utils.getJSF, a = i.utils.assert;
          function h(t3, e3) {
            this.type = t3, this.p = new n2(e3.p, 16), this.red = e3.prime ? n2.red(e3.prime) : n2.mont(this.p), this.zero = new n2(0).toRed(this.red), this.one = new n2(1).toRed(this.red), this.two = new n2(2).toRed(this.red), this.n = e3.n && new n2(e3.n, 16), this.g = e3.g && this.pointFromJSON(e3.g, e3.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4);
          }
          function f(t3, e3) {
            this.curve = t3, this.type = e3, this.precomputed = null;
          }
          t2.exports = h, h.prototype.point = function() {
            throw new Error("Not implemented");
          }, h.prototype.validate = function() {
            throw new Error("Not implemented");
          }, h.prototype._fixedNafMul = function(t3, e3) {
            a(t3.precomputed);
            var r3 = t3._getDoubles(), n3 = o(e3, 1), i2 = (1 << r3.step + 1) - (r3.step % 2 == 0 ? 2 : 1);
            i2 /= 3;
            for (var s2 = [], h2 = 0; h2 < n3.length; h2 += r3.step) {
              var f2 = 0;
              for (e3 = h2 + r3.step - 1; e3 >= h2; e3--)
                f2 = (f2 << 1) + n3[e3];
              s2.push(f2);
            }
            for (var u = this.jpoint(null, null, null), c = this.jpoint(null, null, null), d = i2; d > 0; d--) {
              for (h2 = 0; h2 < s2.length; h2++)
                (f2 = s2[h2]) === d ? c = c.mixedAdd(r3.points[h2]) : f2 === -d && (c = c.mixedAdd(r3.points[h2].neg()));
              u = u.add(c);
            }
            return u.toP();
          }, h.prototype._wnafMul = function(t3, e3) {
            var r3 = 4, n3 = t3._getNAFPoints(r3);
            r3 = n3.wnd;
            for (var i2 = n3.points, s2 = o(e3, r3), h2 = this.jpoint(null, null, null), f2 = s2.length - 1; f2 >= 0; f2--) {
              for (e3 = 0; f2 >= 0 && 0 === s2[f2]; f2--)
                e3++;
              if (f2 >= 0 && e3++, h2 = h2.dblp(e3), f2 < 0)
                break;
              var u = s2[f2];
              a(0 !== u), h2 = "affine" === t3.type ? u > 0 ? h2.mixedAdd(i2[u - 1 >> 1]) : h2.mixedAdd(i2[-u - 1 >> 1].neg()) : u > 0 ? h2.add(i2[u - 1 >> 1]) : h2.add(i2[-u - 1 >> 1].neg());
            }
            return "affine" === t3.type ? h2.toP() : h2;
          }, h.prototype._wnafMulAdd = function(t3, e3, r3, n3) {
            for (var i2 = this._wnafT1, a2 = this._wnafT2, h2 = this._wnafT3, f2 = 0, u = 0; u < n3; u++) {
              var c = (A = e3[u])._getNAFPoints(t3);
              i2[u] = c.wnd, a2[u] = c.points;
            }
            for (u = n3 - 1; u >= 1; u -= 2) {
              var d = u - 1, l = u;
              if (1 === i2[d] && 1 === i2[l]) {
                var p = [e3[d], null, null, e3[l]];
                0 === e3[d].y.cmp(e3[l].y) ? (p[1] = e3[d].add(e3[l]), p[2] = e3[d].toJ().mixedAdd(e3[l].neg())) : 0 === e3[d].y.cmp(e3[l].y.redNeg()) ? (p[1] = e3[d].toJ().mixedAdd(e3[l]), p[2] = e3[d].add(e3[l].neg())) : (p[1] = e3[d].toJ().mixedAdd(e3[l]), p[2] = e3[d].toJ().mixedAdd(e3[l].neg()));
                var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3], y = s(r3[d], r3[l]);
                f2 = Math.max(y[0].length, f2), h2[d] = new Array(f2), h2[l] = new Array(f2);
                for (var m = 0; m < f2; m++) {
                  var v = 0 | y[0][m], b = 0 | y[1][m];
                  h2[d][m] = g[3 * (v + 1) + (b + 1)], h2[l][m] = 0, a2[d] = p;
                }
              } else
                h2[d] = o(r3[d], i2[d]), h2[l] = o(r3[l], i2[l]), f2 = Math.max(h2[d].length, f2), f2 = Math.max(h2[l].length, f2);
            }
            var w = this.jpoint(null, null, null), _ = this._wnafT4;
            for (u = f2; u >= 0; u--) {
              for (var k = 0; u >= 0; ) {
                var S = true;
                for (m = 0; m < n3; m++)
                  _[m] = 0 | h2[m][u], 0 !== _[m] && (S = false);
                if (!S)
                  break;
                k++, u--;
              }
              if (u >= 0 && k++, w = w.dblp(k), u < 0)
                break;
              for (m = 0; m < n3; m++) {
                var A, x = _[m];
                0 !== x && (x > 0 ? A = a2[m][x - 1 >> 1] : x < 0 && (A = a2[m][-x - 1 >> 1].neg()), w = "affine" === A.type ? w.mixedAdd(A) : w.add(A));
              }
            }
            for (u = 0; u < n3; u++)
              a2[u] = null;
            return w.toP();
          }, h.BasePoint = f, f.prototype.validate = function() {
            return this.curve.validate(this);
          }, f.prototype.precompute = function(t3) {
            if (this.precomputed)
              return this;
            var e3 = { doubles: null, naf: null, beta: null };
            return e3.naf = this._getNAFPoints(8), e3.doubles = this._getDoubles(4, t3), e3.beta = this._getBeta(), this.precomputed = e3, this;
          }, f.prototype._hasDoubles = function(t3) {
            if (!this.precomputed)
              return false;
            var e3 = this.precomputed.doubles;
            return !!e3 && e3.points.length >= Math.ceil((t3.bitLength() + 1) / e3.step);
          }, f.prototype._getDoubles = function(t3, e3) {
            if (this.precomputed && this.precomputed.doubles)
              return this.precomputed.doubles;
            for (var r3 = [this], n3 = this, i2 = 0; i2 < e3; i2 += t3) {
              for (var o2 = 0; o2 < t3; o2++)
                n3 = n3.dbl();
              r3.push(n3);
            }
            return { step: t3, points: r3 };
          }, f.prototype._getNAFPoints = function(t3) {
            if (this.precomputed && this.precomputed.naf)
              return this.precomputed.naf;
            for (var e3 = [this], r3 = (1 << t3) - 1, n3 = 1 === r3 ? null : this.dbl(), i2 = 1; i2 < r3; i2++)
              e3[i2] = e3[i2 - 1].add(n3);
            return { wnd: t3, points: e3 };
          }, f.prototype._getBeta = function() {
            return null;
          }, f.prototype.dblp = function(t3) {
            for (var e3 = this, r3 = 0; r3 < t3; r3++)
              e3 = e3.dbl();
            return e3;
          };
        }, 31138: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(88254), i = r2(86266), o = r2(73785), s = r2(35717), a = n2.base, h = i.utils.assert;
          function f(t3) {
            this.twisted = 1 != (0 | t3.a), this.mOneA = this.twisted && -1 == (0 | t3.a), this.extended = this.mOneA, a.call(this, "edwards", t3), this.a = new o(t3.a, 16).mod(this.red.m).toRed(this.red), this.c = new o(t3.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new o(t3.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), h(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t3.c);
          }
          function u(t3, e3, r3, n3, i2) {
            a.BasePoint.call(this, t3, "projective"), null === e3 && null === r3 && null === n3 ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new o(e3, 16), this.y = new o(r3, 16), this.z = n3 ? new o(n3, 16) : this.curve.one, this.t = i2 && new o(i2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
          }
          s(f, a), t2.exports = f, f.prototype._mulA = function(t3) {
            return this.mOneA ? t3.redNeg() : this.a.redMul(t3);
          }, f.prototype._mulC = function(t3) {
            return this.oneC ? t3 : this.c.redMul(t3);
          }, f.prototype.jpoint = function(t3, e3, r3, n3) {
            return this.point(t3, e3, r3, n3);
          }, f.prototype.pointFromX = function(t3, e3) {
            (e3 = new o(e3, 16)).red || (e3 = e3.toRed(this.red));
            var r3 = e3.redSqr(), i2 = this.c2.redSub(this.a.redMul(r3)), s2 = this.one.redSub(this.c2.redMul(this.d).redMul(r3)), a2 = i2.redMul(s2.redInvm()).redSqrt(), h2 = a2.fromRed().isOdd();
            return (t3 && !h2 || !t3 && h2) && (a2 = a2.redNeg()), this.point(e3, a2, n2.one);
          }, f.prototype.validate = function(t3) {
            if (t3.isInfinity())
              return true;
            t3.normalize();
            var e3 = t3.x.redSqr(), r3 = t3.y.redSqr(), n3 = e3.redMul(this.a).redAdd(r3), i2 = this.c2.redMul(this.one.redAdd(this.d.redMul(e3).redMul(r3)));
            return 0 === n3.cmp(i2);
          }, s(u, a.BasePoint), f.prototype.pointFromJSON = function(t3) {
            return u.fromJSON(this, t3);
          }, f.prototype.point = function(t3, e3, r3, n3) {
            return new u(this, t3, e3, r3, n3);
          }, u.fromJSON = function(t3, e3) {
            return new u(t3, e3[0], e3[1], e3[2]);
          }, u.prototype.inspect = function() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
          }, u.prototype.isInfinity = function() {
            return 0 === this.x.cmpn(0) && 0 === this.y.cmp(this.z);
          }, u.prototype._extDbl = function() {
            var t3 = this.x.redSqr(), e3 = this.y.redSqr(), r3 = this.z.redSqr();
            r3 = r3.redIAdd(r3);
            var n3 = this.curve._mulA(t3), i2 = this.x.redAdd(this.y).redSqr().redISub(t3).redISub(e3), o2 = n3.redAdd(e3), s2 = o2.redSub(r3), a2 = n3.redSub(e3), h2 = i2.redMul(s2), f2 = o2.redMul(a2), u2 = i2.redMul(a2), c = s2.redMul(o2);
            return this.curve.point(h2, f2, c, u2);
          }, u.prototype._projDbl = function() {
            var t3, e3, r3, n3 = this.x.redAdd(this.y).redSqr(), i2 = this.x.redSqr(), o2 = this.y.redSqr();
            if (this.curve.twisted) {
              var s2 = (f2 = this.curve._mulA(i2)).redAdd(o2);
              if (this.zOne)
                t3 = n3.redSub(i2).redSub(o2).redMul(s2.redSub(this.curve.two)), e3 = s2.redMul(f2.redSub(o2)), r3 = s2.redSqr().redSub(s2).redSub(s2);
              else {
                var a2 = this.z.redSqr(), h2 = s2.redSub(a2).redISub(a2);
                t3 = n3.redSub(i2).redISub(o2).redMul(h2), e3 = s2.redMul(f2.redSub(o2)), r3 = s2.redMul(h2);
              }
            } else {
              var f2 = i2.redAdd(o2);
              a2 = this.curve._mulC(this.c.redMul(this.z)).redSqr(), h2 = f2.redSub(a2).redSub(a2), t3 = this.curve._mulC(n3.redISub(f2)).redMul(h2), e3 = this.curve._mulC(f2).redMul(i2.redISub(o2)), r3 = f2.redMul(h2);
            }
            return this.curve.point(t3, e3, r3);
          }, u.prototype.dbl = function() {
            return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
          }, u.prototype._extAdd = function(t3) {
            var e3 = this.y.redSub(this.x).redMul(t3.y.redSub(t3.x)), r3 = this.y.redAdd(this.x).redMul(t3.y.redAdd(t3.x)), n3 = this.t.redMul(this.curve.dd).redMul(t3.t), i2 = this.z.redMul(t3.z.redAdd(t3.z)), o2 = r3.redSub(e3), s2 = i2.redSub(n3), a2 = i2.redAdd(n3), h2 = r3.redAdd(e3), f2 = o2.redMul(s2), u2 = a2.redMul(h2), c = o2.redMul(h2), d = s2.redMul(a2);
            return this.curve.point(f2, u2, d, c);
          }, u.prototype._projAdd = function(t3) {
            var e3, r3, n3 = this.z.redMul(t3.z), i2 = n3.redSqr(), o2 = this.x.redMul(t3.x), s2 = this.y.redMul(t3.y), a2 = this.curve.d.redMul(o2).redMul(s2), h2 = i2.redSub(a2), f2 = i2.redAdd(a2), u2 = this.x.redAdd(this.y).redMul(t3.x.redAdd(t3.y)).redISub(o2).redISub(s2), c = n3.redMul(h2).redMul(u2);
            return this.curve.twisted ? (e3 = n3.redMul(f2).redMul(s2.redSub(this.curve._mulA(o2))), r3 = h2.redMul(f2)) : (e3 = n3.redMul(f2).redMul(s2.redSub(o2)), r3 = this.curve._mulC(h2).redMul(f2)), this.curve.point(c, e3, r3);
          }, u.prototype.add = function(t3) {
            return this.isInfinity() ? t3 : t3.isInfinity() ? this : this.curve.extended ? this._extAdd(t3) : this._projAdd(t3);
          }, u.prototype.mul = function(t3) {
            return this._hasDoubles(t3) ? this.curve._fixedNafMul(this, t3) : this.curve._wnafMul(this, t3);
          }, u.prototype.mulAdd = function(t3, e3, r3) {
            return this.curve._wnafMulAdd(1, [this, e3], [t3, r3], 2);
          }, u.prototype.normalize = function() {
            if (this.zOne)
              return this;
            var t3 = this.z.redInvm();
            return this.x = this.x.redMul(t3), this.y = this.y.redMul(t3), this.t && (this.t = this.t.redMul(t3)), this.z = this.curve.one, this.zOne = true, this;
          }, u.prototype.neg = function() {
            return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
          }, u.prototype.getX = function() {
            return this.normalize(), this.x.fromRed();
          }, u.prototype.getY = function() {
            return this.normalize(), this.y.fromRed();
          }, u.prototype.toP = u.prototype.normalize, u.prototype.mixedAdd = u.prototype.add;
        }, 88254: (t2, e2, r2) => {
          "use strict";
          var n2 = e2;
          n2.base = r2(4918), n2.short = r2(6673), n2.mont = r2(22881), n2.edwards = r2(31138);
        }, 22881: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(88254), i = r2(73785), o = r2(35717), s = n2.base;
          function a(t3) {
            s.call(this, "mont", t3), this.a = new i(t3.a, 16).toRed(this.red), this.b = new i(t3.b, 16).toRed(this.red), this.i4 = new i(4).toRed(this.red).redInvm(), this.two = new i(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
          }
          function h(t3, e3, r3) {
            s.BasePoint.call(this, t3, "projective"), null === e3 && null === r3 ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new i(e3, 16), this.z = new i(r3, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
          }
          o(a, s), t2.exports = a, a.prototype.validate = function(t3) {
            var e3 = t3.normalize().x, r3 = e3.redSqr(), n3 = r3.redMul(e3).redAdd(r3.redMul(this.a)).redAdd(e3);
            return 0 === n3.redSqrt().redSqr().cmp(n3);
          }, o(h, s.BasePoint), a.prototype.point = function(t3, e3) {
            return new h(this, t3, e3);
          }, a.prototype.pointFromJSON = function(t3) {
            return h.fromJSON(this, t3);
          }, h.prototype.precompute = function() {
          }, h.fromJSON = function(t3, e3) {
            return new h(t3, e3[0], e3[1] || t3.one);
          }, h.prototype.inspect = function() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
          }, h.prototype.isInfinity = function() {
            return 0 === this.z.cmpn(0);
          }, h.prototype.dbl = function() {
            var t3 = this.x.redAdd(this.z).redSqr(), e3 = this.x.redSub(this.z).redSqr(), r3 = t3.redSub(e3), n3 = t3.redMul(e3), i2 = r3.redMul(e3.redAdd(this.curve.a24.redMul(r3)));
            return this.curve.point(n3, i2);
          }, h.prototype.add = function() {
            throw new Error("Not supported on Montgomery curve");
          }, h.prototype.diffAdd = function(t3, e3) {
            var r3 = this.x.redAdd(this.z), n3 = this.x.redSub(this.z), i2 = t3.x.redAdd(t3.z), o2 = t3.x.redSub(t3.z).redMul(r3), s2 = i2.redMul(n3), a2 = e3.z.redMul(o2.redAdd(s2).redSqr()), h2 = e3.x.redMul(o2.redISub(s2).redSqr());
            return this.curve.point(a2, h2);
          }, h.prototype.mul = function(t3) {
            for (var e3 = t3.clone(), r3 = this, n3 = this.curve.point(null, null), i2 = []; 0 !== e3.cmpn(0); e3.ishrn(1))
              i2.push(e3.andln(1));
            for (var o2 = i2.length - 1; o2 >= 0; o2--)
              0 === i2[o2] ? (r3 = r3.diffAdd(n3, this), n3 = n3.dbl()) : (n3 = r3.diffAdd(n3, this), r3 = r3.dbl());
            return n3;
          }, h.prototype.mulAdd = function() {
            throw new Error("Not supported on Montgomery curve");
          }, h.prototype.normalize = function() {
            return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
          }, h.prototype.getX = function() {
            return this.normalize(), this.x.fromRed();
          };
        }, 6673: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(88254), i = r2(86266), o = r2(73785), s = r2(35717), a = n2.base, h = i.utils.assert;
          function f(t3) {
            a.call(this, "short", t3), this.a = new o(t3.a, 16).toRed(this.red), this.b = new o(t3.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t3), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
          }
          function u(t3, e3, r3, n3) {
            a.BasePoint.call(this, t3, "affine"), null === e3 && null === r3 ? (this.x = null, this.y = null, this.inf = true) : (this.x = new o(e3, 16), this.y = new o(r3, 16), n3 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
          }
          function c(t3, e3, r3, n3) {
            a.BasePoint.call(this, t3, "jacobian"), null === e3 && null === r3 && null === n3 ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new o(0)) : (this.x = new o(e3, 16), this.y = new o(r3, 16), this.z = new o(n3, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
          }
          s(f, a), t2.exports = f, f.prototype._getEndomorphism = function(t3) {
            if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
              var e3, r3;
              if (t3.beta)
                e3 = new o(t3.beta, 16).toRed(this.red);
              else {
                var n3 = this._getEndoRoots(this.p);
                e3 = (e3 = n3[0].cmp(n3[1]) < 0 ? n3[0] : n3[1]).toRed(this.red);
              }
              if (t3.lambda)
                r3 = new o(t3.lambda, 16);
              else {
                var i2 = this._getEndoRoots(this.n);
                0 === this.g.mul(i2[0]).x.cmp(this.g.x.redMul(e3)) ? r3 = i2[0] : (r3 = i2[1], h(0 === this.g.mul(r3).x.cmp(this.g.x.redMul(e3))));
              }
              return { beta: e3, lambda: r3, basis: t3.basis ? t3.basis.map(function(t4) {
                return { a: new o(t4.a, 16), b: new o(t4.b, 16) };
              }) : this._getEndoBasis(r3) };
            }
          }, f.prototype._getEndoRoots = function(t3) {
            var e3 = t3 === this.p ? this.red : o.mont(t3), r3 = new o(2).toRed(e3).redInvm(), n3 = r3.redNeg(), i2 = new o(3).toRed(e3).redNeg().redSqrt().redMul(r3);
            return [n3.redAdd(i2).fromRed(), n3.redSub(i2).fromRed()];
          }, f.prototype._getEndoBasis = function(t3) {
            for (var e3, r3, n3, i2, s2, a2, h2, f2, u2, c2 = this.n.shrn(Math.floor(this.n.bitLength() / 2)), d = t3, l = this.n.clone(), p = new o(1), g = new o(0), y = new o(0), m = new o(1), v = 0; 0 !== d.cmpn(0); ) {
              var b = l.div(d);
              f2 = l.sub(b.mul(d)), u2 = y.sub(b.mul(p));
              var w = m.sub(b.mul(g));
              if (!n3 && f2.cmp(c2) < 0)
                e3 = h2.neg(), r3 = p, n3 = f2.neg(), i2 = u2;
              else if (n3 && 2 == ++v)
                break;
              h2 = f2, l = d, d = f2, y = p, p = u2, m = g, g = w;
            }
            s2 = f2.neg(), a2 = u2;
            var _ = n3.sqr().add(i2.sqr());
            return s2.sqr().add(a2.sqr()).cmp(_) >= 0 && (s2 = e3, a2 = r3), n3.sign && (n3 = n3.neg(), i2 = i2.neg()), s2.sign && (s2 = s2.neg(), a2 = a2.neg()), [{ a: n3, b: i2 }, { a: s2, b: a2 }];
          }, f.prototype._endoSplit = function(t3) {
            var e3 = this.endo.basis, r3 = e3[0], n3 = e3[1], i2 = n3.b.mul(t3).divRound(this.n), o2 = r3.b.neg().mul(t3).divRound(this.n), s2 = i2.mul(r3.a), a2 = o2.mul(n3.a), h2 = i2.mul(r3.b), f2 = o2.mul(n3.b);
            return { k1: t3.sub(s2).sub(a2), k2: h2.add(f2).neg() };
          }, f.prototype.pointFromX = function(t3, e3) {
            (e3 = new o(e3, 16)).red || (e3 = e3.toRed(this.red));
            var r3 = e3.redSqr().redMul(e3).redIAdd(e3.redMul(this.a)).redIAdd(this.b).redSqrt(), n3 = r3.fromRed().isOdd();
            return (t3 && !n3 || !t3 && n3) && (r3 = r3.redNeg()), this.point(e3, r3);
          }, f.prototype.validate = function(t3) {
            if (t3.inf)
              return true;
            var e3 = t3.x, r3 = t3.y, n3 = this.a.redMul(e3), i2 = e3.redSqr().redMul(e3).redIAdd(n3).redIAdd(this.b);
            return 0 === r3.redSqr().redISub(i2).cmpn(0);
          }, f.prototype._endoWnafMulAdd = function(t3, e3) {
            for (var r3 = this._endoWnafT1, n3 = this._endoWnafT2, i2 = 0; i2 < t3.length; i2++) {
              var o2 = this._endoSplit(e3[i2]), s2 = t3[i2], a2 = s2._getBeta();
              o2.k1.sign && (o2.k1.sign = !o2.k1.sign, s2 = s2.neg(true)), o2.k2.sign && (o2.k2.sign = !o2.k2.sign, a2 = a2.neg(true)), r3[2 * i2] = s2, r3[2 * i2 + 1] = a2, n3[2 * i2] = o2.k1, n3[2 * i2 + 1] = o2.k2;
            }
            for (var h2 = this._wnafMulAdd(1, r3, n3, 2 * i2), f2 = 0; f2 < 2 * i2; f2++)
              r3[f2] = null, n3[f2] = null;
            return h2;
          }, s(u, a.BasePoint), f.prototype.point = function(t3, e3, r3) {
            return new u(this, t3, e3, r3);
          }, f.prototype.pointFromJSON = function(t3, e3) {
            return u.fromJSON(this, t3, e3);
          }, u.prototype._getBeta = function() {
            if (this.curve.endo) {
              var t3 = this.precomputed;
              if (t3 && t3.beta)
                return t3.beta;
              var e3 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
              if (t3) {
                var r3 = this.curve, n3 = function(t4) {
                  return r3.point(t4.x.redMul(r3.endo.beta), t4.y);
                };
                t3.beta = e3, e3.precomputed = { beta: null, naf: t3.naf && { wnd: t3.naf.wnd, points: t3.naf.points.map(n3) }, doubles: t3.doubles && { step: t3.doubles.step, points: t3.doubles.points.map(n3) } };
              }
              return e3;
            }
          }, u.prototype.toJSON = function() {
            return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
          }, u.fromJSON = function(t3, e3, r3) {
            "string" == typeof e3 && (e3 = JSON.parse(e3));
            var n3 = t3.point(e3[0], e3[1], r3);
            if (!e3[2])
              return n3;
            function i2(e4) {
              return t3.point(e4[0], e4[1], r3);
            }
            var o2 = e3[2];
            return n3.precomputed = { beta: null, doubles: o2.doubles && { step: o2.doubles.step, points: [n3].concat(o2.doubles.points.map(i2)) }, naf: o2.naf && { wnd: o2.naf.wnd, points: [n3].concat(o2.naf.points.map(i2)) } }, n3;
          }, u.prototype.inspect = function() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
          }, u.prototype.isInfinity = function() {
            return this.inf;
          }, u.prototype.add = function(t3) {
            if (this.inf)
              return t3;
            if (t3.inf)
              return this;
            if (this.eq(t3))
              return this.dbl();
            if (this.neg().eq(t3))
              return this.curve.point(null, null);
            if (0 === this.x.cmp(t3.x))
              return this.curve.point(null, null);
            var e3 = this.y.redSub(t3.y);
            0 !== e3.cmpn(0) && (e3 = e3.redMul(this.x.redSub(t3.x).redInvm()));
            var r3 = e3.redSqr().redISub(this.x).redISub(t3.x), n3 = e3.redMul(this.x.redSub(r3)).redISub(this.y);
            return this.curve.point(r3, n3);
          }, u.prototype.dbl = function() {
            if (this.inf)
              return this;
            var t3 = this.y.redAdd(this.y);
            if (0 === t3.cmpn(0))
              return this.curve.point(null, null);
            var e3 = this.curve.a, r3 = this.x.redSqr(), n3 = t3.redInvm(), i2 = r3.redAdd(r3).redIAdd(r3).redIAdd(e3).redMul(n3), o2 = i2.redSqr().redISub(this.x.redAdd(this.x)), s2 = i2.redMul(this.x.redSub(o2)).redISub(this.y);
            return this.curve.point(o2, s2);
          }, u.prototype.getX = function() {
            return this.x.fromRed();
          }, u.prototype.getY = function() {
            return this.y.fromRed();
          }, u.prototype.mul = function(t3) {
            return t3 = new o(t3, 16), this._hasDoubles(t3) ? this.curve._fixedNafMul(this, t3) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t3]) : this.curve._wnafMul(this, t3);
          }, u.prototype.mulAdd = function(t3, e3, r3) {
            var n3 = [this, e3], i2 = [t3, r3];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n3, i2) : this.curve._wnafMulAdd(1, n3, i2, 2);
          }, u.prototype.eq = function(t3) {
            return this === t3 || this.inf === t3.inf && (this.inf || 0 === this.x.cmp(t3.x) && 0 === this.y.cmp(t3.y));
          }, u.prototype.neg = function(t3) {
            if (this.inf)
              return this;
            var e3 = this.curve.point(this.x, this.y.redNeg());
            if (t3 && this.precomputed) {
              var r3 = this.precomputed, n3 = function(t4) {
                return t4.neg();
              };
              e3.precomputed = { naf: r3.naf && { wnd: r3.naf.wnd, points: r3.naf.points.map(n3) }, doubles: r3.doubles && { step: r3.doubles.step, points: r3.doubles.points.map(n3) } };
            }
            return e3;
          }, u.prototype.toJ = function() {
            return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
          }, s(c, a.BasePoint), f.prototype.jpoint = function(t3, e3, r3) {
            return new c(this, t3, e3, r3);
          }, c.prototype.toP = function() {
            if (this.isInfinity())
              return this.curve.point(null, null);
            var t3 = this.z.redInvm(), e3 = t3.redSqr(), r3 = this.x.redMul(e3), n3 = this.y.redMul(e3).redMul(t3);
            return this.curve.point(r3, n3);
          }, c.prototype.neg = function() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
          }, c.prototype.add = function(t3) {
            if (this.isInfinity())
              return t3;
            if (t3.isInfinity())
              return this;
            var e3 = t3.z.redSqr(), r3 = this.z.redSqr(), n3 = this.x.redMul(e3), i2 = t3.x.redMul(r3), o2 = this.y.redMul(e3.redMul(t3.z)), s2 = t3.y.redMul(r3.redMul(this.z)), a2 = n3.redSub(i2), h2 = o2.redSub(s2);
            if (0 === a2.cmpn(0))
              return 0 !== h2.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var f2 = a2.redSqr(), u2 = f2.redMul(a2), c2 = n3.redMul(f2), d = h2.redSqr().redIAdd(u2).redISub(c2).redISub(c2), l = h2.redMul(c2.redISub(d)).redISub(o2.redMul(u2)), p = this.z.redMul(t3.z).redMul(a2);
            return this.curve.jpoint(d, l, p);
          }, c.prototype.mixedAdd = function(t3) {
            if (this.isInfinity())
              return t3.toJ();
            if (t3.isInfinity())
              return this;
            var e3 = this.z.redSqr(), r3 = this.x, n3 = t3.x.redMul(e3), i2 = this.y, o2 = t3.y.redMul(e3).redMul(this.z), s2 = r3.redSub(n3), a2 = i2.redSub(o2);
            if (0 === s2.cmpn(0))
              return 0 !== a2.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var h2 = s2.redSqr(), f2 = h2.redMul(s2), u2 = r3.redMul(h2), c2 = a2.redSqr().redIAdd(f2).redISub(u2).redISub(u2), d = a2.redMul(u2.redISub(c2)).redISub(i2.redMul(f2)), l = this.z.redMul(s2);
            return this.curve.jpoint(c2, d, l);
          }, c.prototype.dblp = function(t3) {
            if (0 === t3)
              return this;
            if (this.isInfinity())
              return this;
            if (!t3)
              return this.dbl();
            if (this.curve.zeroA || this.curve.threeA) {
              for (var e3 = this, r3 = 0; r3 < t3; r3++)
                e3 = e3.dbl();
              return e3;
            }
            var n3 = this.curve.a, i2 = this.curve.tinv, o2 = this.x, s2 = this.y, a2 = this.z, h2 = a2.redSqr().redSqr(), f2 = s2.redAdd(s2);
            for (r3 = 0; r3 < t3; r3++) {
              var u2 = o2.redSqr(), c2 = f2.redSqr(), d = c2.redSqr(), l = u2.redAdd(u2).redIAdd(u2).redIAdd(n3.redMul(h2)), p = o2.redMul(c2), g = l.redSqr().redISub(p.redAdd(p)), y = p.redISub(g), m = l.redMul(y);
              m = m.redIAdd(m).redISub(d);
              var v = f2.redMul(a2);
              r3 + 1 < t3 && (h2 = h2.redMul(d)), o2 = g, a2 = v, f2 = m;
            }
            return this.curve.jpoint(o2, f2.redMul(i2), a2);
          }, c.prototype.dbl = function() {
            return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
          }, c.prototype._zeroDbl = function() {
            var t3, e3, r3;
            if (this.zOne) {
              var n3 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), s2 = this.x.redAdd(i2).redSqr().redISub(n3).redISub(o2);
              s2 = s2.redIAdd(s2);
              var a2 = n3.redAdd(n3).redIAdd(n3), h2 = a2.redSqr().redISub(s2).redISub(s2), f2 = o2.redIAdd(o2);
              f2 = (f2 = f2.redIAdd(f2)).redIAdd(f2), t3 = h2, e3 = a2.redMul(s2.redISub(h2)).redISub(f2), r3 = this.y.redAdd(this.y);
            } else {
              var u2 = this.x.redSqr(), c2 = this.y.redSqr(), d = c2.redSqr(), l = this.x.redAdd(c2).redSqr().redISub(u2).redISub(d);
              l = l.redIAdd(l);
              var p = u2.redAdd(u2).redIAdd(u2), g = p.redSqr(), y = d.redIAdd(d);
              y = (y = y.redIAdd(y)).redIAdd(y), t3 = g.redISub(l).redISub(l), e3 = p.redMul(l.redISub(t3)).redISub(y), r3 = (r3 = this.y.redMul(this.z)).redIAdd(r3);
            }
            return this.curve.jpoint(t3, e3, r3);
          }, c.prototype._threeDbl = function() {
            var t3, e3, r3;
            if (this.zOne) {
              var n3 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), s2 = this.x.redAdd(i2).redSqr().redISub(n3).redISub(o2);
              s2 = s2.redIAdd(s2);
              var a2 = n3.redAdd(n3).redIAdd(n3).redIAdd(this.curve.a), h2 = a2.redSqr().redISub(s2).redISub(s2);
              t3 = h2;
              var f2 = o2.redIAdd(o2);
              f2 = (f2 = f2.redIAdd(f2)).redIAdd(f2), e3 = a2.redMul(s2.redISub(h2)).redISub(f2), r3 = this.y.redAdd(this.y);
            } else {
              var u2 = this.z.redSqr(), c2 = this.y.redSqr(), d = this.x.redMul(c2), l = this.x.redSub(u2).redMul(this.x.redAdd(u2));
              l = l.redAdd(l).redIAdd(l);
              var p = d.redIAdd(d), g = (p = p.redIAdd(p)).redAdd(p);
              t3 = l.redSqr().redISub(g), r3 = this.y.redAdd(this.z).redSqr().redISub(c2).redISub(u2);
              var y = c2.redSqr();
              y = (y = (y = y.redIAdd(y)).redIAdd(y)).redIAdd(y), e3 = l.redMul(p.redISub(t3)).redISub(y);
            }
            return this.curve.jpoint(t3, e3, r3);
          }, c.prototype._dbl = function() {
            var t3 = this.curve.a, e3 = this.x, r3 = this.y, n3 = this.z, i2 = n3.redSqr().redSqr(), o2 = e3.redSqr(), s2 = r3.redSqr(), a2 = o2.redAdd(o2).redIAdd(o2).redIAdd(t3.redMul(i2)), h2 = e3.redAdd(e3), f2 = (h2 = h2.redIAdd(h2)).redMul(s2), u2 = a2.redSqr().redISub(f2.redAdd(f2)), c2 = f2.redISub(u2), d = s2.redSqr();
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var l = a2.redMul(c2).redISub(d), p = r3.redAdd(r3).redMul(n3);
            return this.curve.jpoint(u2, l, p);
          }, c.prototype.trpl = function() {
            if (!this.curve.zeroA)
              return this.dbl().add(this);
            var t3 = this.x.redSqr(), e3 = this.y.redSqr(), r3 = this.z.redSqr(), n3 = e3.redSqr(), i2 = t3.redAdd(t3).redIAdd(t3), o2 = i2.redSqr(), s2 = this.x.redAdd(e3).redSqr().redISub(t3).redISub(n3), a2 = (s2 = (s2 = (s2 = s2.redIAdd(s2)).redAdd(s2).redIAdd(s2)).redISub(o2)).redSqr(), h2 = n3.redIAdd(n3);
            h2 = (h2 = (h2 = h2.redIAdd(h2)).redIAdd(h2)).redIAdd(h2);
            var f2 = i2.redIAdd(s2).redSqr().redISub(o2).redISub(a2).redISub(h2), u2 = e3.redMul(f2);
            u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2);
            var c2 = this.x.redMul(a2).redISub(u2);
            c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2);
            var d = this.y.redMul(f2.redMul(h2.redISub(f2)).redISub(s2.redMul(a2)));
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var l = this.z.redAdd(s2).redSqr().redISub(r3).redISub(a2);
            return this.curve.jpoint(c2, d, l);
          }, c.prototype.mul = function(t3, e3) {
            return t3 = new o(t3, e3), this.curve._wnafMul(this, t3);
          }, c.prototype.eq = function(t3) {
            if ("affine" === t3.type)
              return this.eq(t3.toJ());
            if (this === t3)
              return true;
            var e3 = this.z.redSqr(), r3 = t3.z.redSqr();
            if (0 !== this.x.redMul(r3).redISub(t3.x.redMul(e3)).cmpn(0))
              return false;
            var n3 = e3.redMul(this.z), i2 = r3.redMul(t3.z);
            return 0 === this.y.redMul(i2).redISub(t3.y.redMul(n3)).cmpn(0);
          }, c.prototype.inspect = function() {
            return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
          }, c.prototype.isInfinity = function() {
            return 0 === this.z.cmpn(0);
          };
        }, 45427: (t2, e2, r2) => {
          "use strict";
          var n2, i = e2, o = r2(33715), s = r2(86266), a = s.utils.assert;
          function h(t3) {
            "short" === t3.type ? this.curve = new s.curve.short(t3) : "edwards" === t3.type ? this.curve = new s.curve.edwards(t3) : this.curve = new s.curve.mont(t3), this.g = this.curve.g, this.n = this.curve.n, this.hash = t3.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
          }
          function f(t3, e3) {
            Object.defineProperty(i, t3, { configurable: true, enumerable: true, get: function() {
              var r3 = new h(e3);
              return Object.defineProperty(i, t3, { configurable: true, enumerable: true, value: r3 }), r3;
            } });
          }
          i.PresetCurve = h, f("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: o.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), f("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: o.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), f("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: o.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), f("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "0", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["9"] }), f("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
          try {
            n2 = r2(91037);
          } catch (t3) {
            n2 = void 0;
          }
          f("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: o.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n2] });
        }, 57954: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(73785), i = r2(86266), o = i.utils.assert, s = r2(31251), a = r2(90611);
          function h(t3) {
            if (!(this instanceof h))
              return new h(t3);
            "string" == typeof t3 && (o(i.curves.hasOwnProperty(t3), "Unknown curve " + t3), t3 = i.curves[t3]), t3 instanceof i.curves.PresetCurve && (t3 = { curve: t3 }), this.curve = t3.curve.curve, this.n = this.curve.n, this.nh = this.n.shrn(1), this.g = this.curve.g, this.g = t3.curve.g, this.g.precompute(t3.curve.n.bitLength() + 1), this.hash = t3.hash || t3.curve.hash;
          }
          t2.exports = h, h.prototype.keyPair = function(t3) {
            return new s(this, t3);
          }, h.prototype.keyFromPrivate = function(t3, e3) {
            return s.fromPrivate(this, t3, e3);
          }, h.prototype.keyFromPublic = function(t3, e3) {
            return s.fromPublic(this, t3, e3);
          }, h.prototype.genKeyPair = function(t3) {
            t3 || (t3 = {});
            for (var e3 = new i.hmacDRBG({ hash: this.hash, pers: t3.pers, entropy: t3.entropy || i.rand(this.hash.hmacStrength), nonce: this.n.toArray() }), r3 = this.n.byteLength(), o2 = this.n.sub(new n2(2)); ; ) {
              var s2 = new n2(e3.generate(r3));
              if (!(s2.cmp(o2) > 0))
                return s2.iaddn(1), this.keyFromPrivate(s2);
            }
          }, h.prototype._truncateToN = function(t3, e3) {
            var r3 = 8 * t3.byteLength() - this.n.bitLength();
            return r3 > 0 && (t3 = t3.shrn(r3)), !e3 && t3.cmp(this.n) >= 0 ? t3.sub(this.n) : t3;
          }, h.prototype.sign = function(t3, e3, r3, o2) {
            "object" == typeof r3 && (o2 = r3, r3 = null), o2 || (o2 = {}), e3 = this.keyFromPrivate(e3, r3), t3 = this._truncateToN(new n2(t3, 16));
            for (var s2 = this.n.byteLength(), h2 = e3.getPrivate().toArray(), f = h2.length; f < 21; f++)
              h2.unshift(0);
            var u = t3.toArray();
            for (f = u.length; f < s2; f++)
              u.unshift(0);
            for (var c = new i.hmacDRBG({ hash: this.hash, entropy: h2, nonce: u }), d = this.n.sub(new n2(1)); ; ) {
              var l = new n2(c.generate(this.n.byteLength()));
              if (!((l = this._truncateToN(l, true)).cmpn(1) <= 0 || l.cmp(d) >= 0)) {
                var p = this.g.mul(l);
                if (!p.isInfinity()) {
                  var g = p.getX(), y = g.mod(this.n);
                  if (0 !== y.cmpn(0)) {
                    var m = l.invm(this.n).mul(y.mul(e3.getPrivate()).iadd(t3)).mod(this.n);
                    if (0 !== m.cmpn(0)) {
                      o2.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m));
                      var v = (p.getY().isOdd() ? 1 : 0) | (0 !== g.cmp(y) ? 2 : 0);
                      return new a({ r: y, s: m, recoveryParam: v });
                    }
                  }
                }
              }
            }
          }, h.prototype.verify = function(t3, e3, r3, i2) {
            t3 = this._truncateToN(new n2(t3, 16)), r3 = this.keyFromPublic(r3, i2);
            var o2 = (e3 = new a(e3, "hex")).r, s2 = e3.s;
            if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0)
              return false;
            if (s2.cmpn(1) < 0 || s2.cmp(this.n) >= 0)
              return false;
            var h2 = s2.invm(this.n), f = h2.mul(t3).mod(this.n), u = h2.mul(o2).mod(this.n), c = this.g.mulAdd(f, r3.getPublic(), u);
            return !c.isInfinity() && 0 === c.getX().mod(this.n).cmp(o2);
          }, h.prototype.recoverPubKey = function(t3, e3, r3, i2) {
            o((3 & r3) === r3, "The recovery param is more than two bits"), e3 = new a(e3, i2);
            var s2 = this.n, h2 = new n2(t3), f = e3.r, u = e3.s, c = 1 & r3, d = r3 >> 1;
            if (f.cmp(this.curve.p.mod(this.curve.n)) >= 0 && d)
              throw new Error("Unable to find sencond key candinate");
            f = this.curve.pointFromX(c, f);
            var l = h2.neg().mod(s2), p = e3.r.invm(s2);
            return f.mul(u).add(this.g.mul(l)).mul(p);
          }, h.prototype.getKeyRecoveryParam = function(t3, e3, r3, n3) {
            if (null !== (e3 = new a(e3, n3)).recoveryParam)
              return e3.recoveryParam;
            for (var i2 = 0; i2 < 4; i2++)
              if (this.recoverPubKey(t3, e3, i2).eq(r3))
                return i2;
            throw new Error("Unable to find valid recovery factor");
          };
        }, 31251: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(73785), i = r2(86266).utils;
          function o(t3, e3) {
            this.ec = t3, this.priv = null, this.pub = null, e3.priv && this._importPrivate(e3.priv, e3.privEnc), e3.pub && this._importPublic(e3.pub, e3.pubEnc);
          }
          t2.exports = o, o.fromPublic = function(t3, e3, r3) {
            return e3 instanceof o ? e3 : new o(t3, { pub: e3, pubEnc: r3 });
          }, o.fromPrivate = function(t3, e3, r3) {
            return e3 instanceof o ? e3 : new o(t3, { priv: e3, privEnc: r3 });
          }, o.prototype.validate = function() {
            var t3 = this.getPublic();
            return t3.isInfinity() ? { result: false, reason: "Invalid public key" } : t3.validate() ? t3.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
          }, o.prototype.getPublic = function(t3, e3) {
            if (this.pub || (this.pub = this.ec.g.mul(this.priv)), "string" == typeof t3 && (e3 = t3, t3 = null), !e3)
              return this.pub;
            for (var r3 = this.ec.curve.p.byteLength(), n3 = this.pub.getX().toArray(), o2 = n3.length; o2 < r3; o2++)
              n3.unshift(0);
            if ("mont" !== this.ec.curve.type)
              if (t3)
                a = [this.pub.getY().isEven() ? 2 : 3].concat(n3);
              else {
                var s = this.pub.getY().toArray();
                for (o2 = s.length; o2 < r3; o2++)
                  s.unshift(0);
                var a = [4].concat(n3, s);
              }
            else
              a = n3;
            return i.encode(a, e3);
          }, o.prototype.getPrivate = function(t3) {
            return "hex" === t3 ? this.priv.toString(16, 2) : this.priv;
          }, o.prototype._importPrivate = function(t3, e3) {
            this.priv = new n2(t3, e3 || 16), this.priv = this.priv.mod(this.ec.curve.n);
          }, o.prototype._importPublic = function(t3, e3) {
            if (!t3.x && !t3.y)
              return t3 = i.toArray(t3, e3), "mont" !== this.ec.curve.type ? this._importPublicShort(t3) : this._importPublicMont(t3);
            this.pub = this.ec.curve.point(t3.x, t3.y);
          }, o.prototype._importPublicShort = function(t3) {
            var e3 = this.ec.curve.p.byteLength();
            4 === t3[0] && t3.length - 1 == 2 * e3 ? this.pub = this.ec.curve.point(t3.slice(1, 1 + e3), t3.slice(1 + e3, 1 + 2 * e3)) : 2 !== t3[0] && 3 !== t3[0] || t3.length - 1 !== e3 || (this.pub = this.ec.curve.pointFromX(3 === t3[0], t3.slice(1, 1 + e3)));
          }, o.prototype._importPublicMont = function(t3) {
            this.pub = this.ec.curve.point(t3, 1);
          }, o.prototype.derive = function(t3) {
            return t3.mul(this.priv).getX();
          }, o.prototype.sign = function(t3) {
            return this.ec.sign(t3, this);
          }, o.prototype.verify = function(t3, e3) {
            return this.ec.verify(t3, e3, this);
          }, o.prototype.inspect = function() {
            return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
          };
        }, 90611: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(73785), i = r2(86266).utils, o = i.assert;
          function s(t3, e3) {
            if (t3 instanceof s)
              return t3;
            this._importDER(t3, e3) || (o(t3.r && t3.s, "Signature without r or s"), this.r = new n2(t3.r, 16), this.s = new n2(t3.s, 16), null !== t3.recoveryParam ? this.recoveryParam = t3.recoveryParam : this.recoveryParam = null);
          }
          t2.exports = s, s.prototype._importDER = function(t3, e3) {
            if ((t3 = i.toArray(t3, e3)).length < 6 || 48 !== t3[0] || 2 !== t3[2])
              return false;
            if (1 + t3[1] > t3.length)
              return false;
            var r3 = t3[3];
            if (r3 >= 128)
              return false;
            if (4 + r3 + 2 >= t3.length)
              return false;
            if (2 !== t3[4 + r3])
              return false;
            var o2 = t3[5 + r3];
            return !(o2 >= 128 || 4 + r3 + 2 + o2 > t3.length || (this.r = new n2(t3.slice(4, 4 + r3)), this.s = new n2(t3.slice(4 + r3 + 2, 4 + r3 + 2 + o2)), this.recoveryParam = null, 0));
          }, s.prototype.toDER = function(t3) {
            var e3 = this.r.toArray(), r3 = this.s.toArray();
            128 & e3[0] && (e3 = [0].concat(e3)), 128 & r3[0] && (r3 = [0].concat(r3));
            var n3 = [48, e3.length + r3.length + 4, 2, e3.length];
            return n3 = n3.concat(e3, [2, r3.length], r3), i.encode(n3, t3);
          };
        }, 4196: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(33715), i = r2(86266).utils, o = i.assert;
          function s(t3) {
            if (!(this instanceof s))
              return new s(t3);
            this.hash = t3.hash, this.predResist = !!t3.predResist, this.outLen = this.hash.outSize, this.minEntropy = t3.minEntropy || this.hash.hmacStrength, this.reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
            var e3 = i.toArray(t3.entropy, t3.entropyEnc), r3 = i.toArray(t3.nonce, t3.nonceEnc), n3 = i.toArray(t3.pers, t3.persEnc);
            o(e3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e3, r3, n3);
          }
          t2.exports = s, s.prototype._init = function(t3, e3, r3) {
            var n3 = t3.concat(e3).concat(r3);
            this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
            for (var i2 = 0; i2 < this.V.length; i2++)
              this.K[i2] = 0, this.V[i2] = 1;
            this._update(n3), this.reseed = 1, this.reseedInterval = 281474976710656;
          }, s.prototype._hmac = function() {
            return new n2.hmac(this.hash, this.K);
          }, s.prototype._update = function(t3) {
            var e3 = this._hmac().update(this.V).update([0]);
            t3 && (e3 = e3.update(t3)), this.K = e3.digest(), this.V = this._hmac().update(this.V).digest(), t3 && (this.K = this._hmac().update(this.V).update([1]).update(t3).digest(), this.V = this._hmac().update(this.V).digest());
          }, s.prototype.reseed = function(t3, e3, r3, n3) {
            "string" != typeof e3 && (n3 = r3, r3 = e3, e3 = null), t3 = i.toBuffer(t3, e3), r3 = i.toBuffer(r3, n3), o(t3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t3.concat(r3 || [])), this.reseed = 1;
          }, s.prototype.generate = function(t3, e3, r3, n3) {
            if (this.reseed > this.reseedInterval)
              throw new Error("Reseed is required");
            "string" != typeof e3 && (n3 = r3, r3 = e3, e3 = null), r3 && (r3 = i.toArray(r3, n3), this._update(r3));
            for (var o2 = []; o2.length < t3; )
              this.V = this._hmac().update(this.V).digest(), o2 = o2.concat(this.V);
            var s2 = o2.slice(0, t3);
            return this._update(r3), this.reseed++, i.encode(s2, e3);
          };
        }, 91037: (t2) => {
          t2.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
        }, 80953: (t2, e2) => {
          "use strict";
          var r2 = e2;
          function n2(t3) {
            return 1 === t3.length ? "0" + t3 : t3;
          }
          function i(t3) {
            for (var e3 = "", r3 = 0; r3 < t3.length; r3++)
              e3 += n2(t3[r3].toString(16));
            return e3;
          }
          r2.assert = function(t3, e3) {
            if (!t3)
              throw new Error(e3 || "Assertion failed");
          }, r2.toArray = function(t3, e3) {
            if (Array.isArray(t3))
              return t3.slice();
            if (!t3)
              return [];
            var r3 = [];
            if ("string" != typeof t3) {
              for (var n3 = 0; n3 < t3.length; n3++)
                r3[n3] = 0 | t3[n3];
              return r3;
            }
            if (e3) {
              if ("hex" === e3)
                for ((t3 = t3.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t3 = "0" + t3), n3 = 0; n3 < t3.length; n3 += 2)
                  r3.push(parseInt(t3[n3] + t3[n3 + 1], 16));
            } else
              for (n3 = 0; n3 < t3.length; n3++) {
                var i2 = t3.charCodeAt(n3), o = i2 >> 8, s = 255 & i2;
                o ? r3.push(o, s) : r3.push(s);
              }
            return r3;
          }, r2.zero2 = n2, r2.toHex = i, r2.encode = function(t3, e3) {
            return "hex" === e3 ? i(t3) : t3;
          }, r2.getNAF = function(t3, e3) {
            for (var r3 = [], n3 = 1 << e3 + 1, i2 = t3.clone(); i2.cmpn(1) >= 0; ) {
              var o;
              if (i2.isOdd()) {
                var s = i2.andln(n3 - 1);
                o = s > (n3 >> 1) - 1 ? (n3 >> 1) - s : s, i2.isubn(o);
              } else
                o = 0;
              r3.push(o);
              for (var a = 0 !== i2.cmpn(0) && 0 === i2.andln(n3 - 1) ? e3 + 1 : 1, h = 1; h < a; h++)
                r3.push(0);
              i2.ishrn(a);
            }
            return r3;
          }, r2.getJSF = function(t3, e3) {
            var r3 = [[], []];
            t3 = t3.clone(), e3 = e3.clone();
            for (var n3 = 0, i2 = 0; t3.cmpn(-n3) > 0 || e3.cmpn(-i2) > 0; ) {
              var o, s, a, h = t3.andln(3) + n3 & 3, f = e3.andln(3) + i2 & 3;
              3 === h && (h = -1), 3 === f && (f = -1), o = 0 == (1 & h) ? 0 : 3 != (a = t3.andln(7) + n3 & 7) && 5 !== a || 2 !== f ? h : -h, r3[0].push(o), s = 0 == (1 & f) ? 0 : 3 != (a = e3.andln(7) + i2 & 7) && 5 !== a || 2 !== h ? f : -f, r3[1].push(s), 2 * n3 === o + 1 && (n3 = 1 - n3), 2 * i2 === s + 1 && (i2 = 1 - i2), t3.ishrn(1), e3.ishrn(1);
            }
            return r3;
          };
        }, 73785: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 82702: function(t2, e2, r2) {
          t2.exports = function() {
            "use strict";
            function t3(t4) {
              return "function" == typeof t4;
            }
            var e3 = Array.isArray ? Array.isArray : function(t4) {
              return "[object Array]" === Object.prototype.toString.call(t4);
            }, n2 = 0, i = void 0, o = void 0, s = function(t4, e4) {
              l[n2] = t4, l[n2 + 1] = e4, 2 === (n2 += 2) && (o ? o(p) : b());
            };
            var a = "undefined" != typeof window ? window : void 0, h = a || {}, f = h.MutationObserver || h.WebKitMutationObserver, u = "undefined" == typeof self && "undefined" != typeof process && "[object process]" === {}.toString.call(process), c = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
            function d() {
              var t4 = setTimeout;
              return function() {
                return t4(p, 1);
              };
            }
            var l = new Array(1e3);
            function p() {
              for (var t4 = 0; t4 < n2; t4 += 2)
                (0, l[t4])(l[t4 + 1]), l[t4] = void 0, l[t4 + 1] = void 0;
              n2 = 0;
            }
            var g, y, m, v, b = void 0;
            function w(t4, e4) {
              var r3 = this, n3 = new this.constructor(S);
              void 0 === n3[k] && C(n3);
              var i2 = r3._state;
              if (i2) {
                var o2 = arguments[i2 - 1];
                s(function() {
                  return R(i2, n3, o2, r3._result);
                });
              } else
                P(r3, n3, t4, e4);
              return n3;
            }
            function _(t4) {
              if (t4 && "object" == typeof t4 && t4.constructor === this)
                return t4;
              var e4 = new this(S);
              return M(e4, t4), e4;
            }
            b = u ? function() {
              return process.nextTick(p);
            } : f ? (y = 0, m = new f(p), v = document.createTextNode(""), m.observe(v, { characterData: true }), function() {
              v.data = y = ++y % 2;
            }) : c ? ((g = new MessageChannel()).port1.onmessage = p, function() {
              return g.port2.postMessage(0);
            }) : void 0 === a ? function() {
              try {
                var t4 = Function("return this")().require("vertx");
                return void 0 !== (i = t4.runOnLoop || t4.runOnContext) ? function() {
                  i(p);
                } : d();
              } catch (t5) {
                return d();
              }
            }() : d();
            var k = Math.random().toString(36).substring(2);
            function S() {
            }
            var A = void 0;
            function x(e4, r3, n3) {
              r3.constructor === e4.constructor && n3 === w && r3.constructor.resolve === _ ? function(t4, e5) {
                1 === e5._state ? B(t4, e5._result) : 2 === e5._state ? I(t4, e5._result) : P(e5, void 0, function(e6) {
                  return M(t4, e6);
                }, function(e6) {
                  return I(t4, e6);
                });
              }(e4, r3) : void 0 === n3 ? B(e4, r3) : t3(n3) ? function(t4, e5, r4) {
                s(function(t5) {
                  var n4 = false, i2 = function(t6, e6, r5, n5) {
                    try {
                      t6.call(e6, r5, n5);
                    } catch (t7) {
                      return t7;
                    }
                  }(r4, e5, function(r5) {
                    n4 || (n4 = true, e5 !== r5 ? M(t5, r5) : B(t5, r5));
                  }, function(e6) {
                    n4 || (n4 = true, I(t5, e6));
                  }, t5._label);
                  !n4 && i2 && (n4 = true, I(t5, i2));
                }, t4);
              }(e4, r3, n3) : B(e4, r3);
            }
            function M(t4, e4) {
              if (t4 === e4)
                I(t4, new TypeError("You cannot resolve a promise with itself"));
              else if (i2 = typeof (n3 = e4), null === n3 || "object" !== i2 && "function" !== i2)
                B(t4, e4);
              else {
                var r3 = void 0;
                try {
                  r3 = e4.then;
                } catch (e5) {
                  return void I(t4, e5);
                }
                x(t4, e4, r3);
              }
              var n3, i2;
            }
            function E(t4) {
              t4._onerror && t4._onerror(t4._result), T(t4);
            }
            function B(t4, e4) {
              t4._state === A && (t4._result = e4, t4._state = 1, 0 !== t4._subscribers.length && s(T, t4));
            }
            function I(t4, e4) {
              t4._state === A && (t4._state = 2, t4._result = e4, s(E, t4));
            }
            function P(t4, e4, r3, n3) {
              var i2 = t4._subscribers, o2 = i2.length;
              t4._onerror = null, i2[o2] = e4, i2[o2 + 1] = r3, i2[o2 + 2] = n3, 0 === o2 && t4._state && s(T, t4);
            }
            function T(t4) {
              var e4 = t4._subscribers, r3 = t4._state;
              if (0 !== e4.length) {
                for (var n3 = void 0, i2 = void 0, o2 = t4._result, s2 = 0; s2 < e4.length; s2 += 3)
                  n3 = e4[s2], i2 = e4[s2 + r3], n3 ? R(r3, n3, i2, o2) : i2(o2);
                t4._subscribers.length = 0;
              }
            }
            function R(e4, r3, n3, i2) {
              var o2 = t3(n3), s2 = void 0, a2 = void 0, h2 = true;
              if (o2) {
                try {
                  s2 = n3(i2);
                } catch (t4) {
                  h2 = false, a2 = t4;
                }
                if (r3 === s2)
                  return void I(r3, new TypeError("A promises callback cannot return that same promise."));
              } else
                s2 = i2;
              r3._state !== A || (o2 && h2 ? M(r3, s2) : false === h2 ? I(r3, a2) : 1 === e4 ? B(r3, s2) : 2 === e4 && I(r3, s2));
            }
            var O = 0;
            function C(t4) {
              t4[k] = O++, t4._state = void 0, t4._result = void 0, t4._subscribers = [];
            }
            var j = function() {
              function t4(t5, r3) {
                this._instanceConstructor = t5, this.promise = new t5(S), this.promise[k] || C(this.promise), e3(r3) ? (this.length = r3.length, this._remaining = r3.length, this._result = new Array(this.length), 0 === this.length ? B(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(r3), 0 === this._remaining && B(this.promise, this._result))) : I(this.promise, new Error("Array Methods must be provided an Array"));
              }
              return t4.prototype._enumerate = function(t5) {
                for (var e4 = 0; this._state === A && e4 < t5.length; e4++)
                  this._eachEntry(t5[e4], e4);
              }, t4.prototype._eachEntry = function(t5, e4) {
                var r3 = this._instanceConstructor, n3 = r3.resolve;
                if (n3 === _) {
                  var i2 = void 0, o2 = void 0, s2 = false;
                  try {
                    i2 = t5.then;
                  } catch (t6) {
                    s2 = true, o2 = t6;
                  }
                  if (i2 === w && t5._state !== A)
                    this._settledAt(t5._state, e4, t5._result);
                  else if ("function" != typeof i2)
                    this._remaining--, this._result[e4] = t5;
                  else if (r3 === N) {
                    var a2 = new r3(S);
                    s2 ? I(a2, o2) : x(a2, t5, i2), this._willSettleAt(a2, e4);
                  } else
                    this._willSettleAt(new r3(function(e5) {
                      return e5(t5);
                    }), e4);
                } else
                  this._willSettleAt(n3(t5), e4);
              }, t4.prototype._settledAt = function(t5, e4, r3) {
                var n3 = this.promise;
                n3._state === A && (this._remaining--, 2 === t5 ? I(n3, r3) : this._result[e4] = r3), 0 === this._remaining && B(n3, this._result);
              }, t4.prototype._willSettleAt = function(t5, e4) {
                var r3 = this;
                P(t5, void 0, function(t6) {
                  return r3._settledAt(1, e4, t6);
                }, function(t6) {
                  return r3._settledAt(2, e4, t6);
                });
              }, t4;
            }();
            var N = function() {
              function e4(t4) {
                this[k] = O++, this._result = this._state = void 0, this._subscribers = [], S !== t4 && ("function" != typeof t4 && function() {
                  throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                }(), this instanceof e4 ? function(t5, e5) {
                  try {
                    e5(function(e6) {
                      M(t5, e6);
                    }, function(e6) {
                      I(t5, e6);
                    });
                  } catch (e6) {
                    I(t5, e6);
                  }
                }(this, t4) : function() {
                  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                }());
              }
              return e4.prototype.catch = function(t4) {
                return this.then(null, t4);
              }, e4.prototype.finally = function(e5) {
                var r3 = this, n3 = r3.constructor;
                return t3(e5) ? r3.then(function(t4) {
                  return n3.resolve(e5()).then(function() {
                    return t4;
                  });
                }, function(t4) {
                  return n3.resolve(e5()).then(function() {
                    throw t4;
                  });
                }) : r3.then(e5, e5);
              }, e4;
            }();
            return N.prototype.then = w, N.all = function(t4) {
              return new j(this, t4).promise;
            }, N.race = function(t4) {
              var r3 = this;
              return e3(t4) ? new r3(function(e4, n3) {
                for (var i2 = t4.length, o2 = 0; o2 < i2; o2++)
                  r3.resolve(t4[o2]).then(e4, n3);
              }) : new r3(function(t5, e4) {
                return e4(new TypeError("You must pass an array to race."));
              });
            }, N.resolve = _, N.reject = function(t4) {
              var e4 = new this(S);
              return I(e4, t4), e4;
            }, N._setScheduler = function(t4) {
              o = t4;
            }, N._setAsap = function(t4) {
              s = t4;
            }, N._asap = s, N.polyfill = function() {
              var t4 = void 0;
              if (void 0 !== r2.g)
                t4 = r2.g;
              else if ("undefined" != typeof self)
                t4 = self;
              else
                try {
                  t4 = Function("return this")();
                } catch (t5) {
                  throw new Error("polyfill failed because global object is unavailable in this environment");
                }
              var e4 = t4.Promise;
              if (e4) {
                var n3 = null;
                try {
                  n3 = Object.prototype.toString.call(e4.resolve());
                } catch (t5) {
                }
                if ("[object Promise]" === n3 && !e4.cast)
                  return;
              }
              t4.Promise = N;
            }, N.Promise = N, N;
          }();
        }, 17187: (t2) => {
          var e2 = Object.create || function(t3) {
            var e3 = function() {
            };
            return e3.prototype = t3, new e3();
          }, r2 = Object.keys || function(t3) {
            var e3 = [];
            for (var r3 in t3)
              Object.prototype.hasOwnProperty.call(t3, r3) && e3.push(r3);
            return r3;
          }, n2 = Function.prototype.bind || function(t3) {
            var e3 = this;
            return function() {
              return e3.apply(t3, arguments);
            };
          };
          function i() {
            this._events && Object.prototype.hasOwnProperty.call(this, "_events") || (this._events = e2(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
          }
          t2.exports = i, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._maxListeners = void 0;
          var o, s = 10;
          try {
            var a = {};
            Object.defineProperty && Object.defineProperty(a, "x", { value: 0 }), o = 0 === a.x;
          } catch (t3) {
            o = false;
          }
          function h(t3) {
            return void 0 === t3._maxListeners ? i.defaultMaxListeners : t3._maxListeners;
          }
          function f(t3, e3, r3) {
            if (e3)
              t3.call(r3);
            else
              for (var n3 = t3.length, i2 = b(t3, n3), o2 = 0; o2 < n3; ++o2)
                i2[o2].call(r3);
          }
          function u(t3, e3, r3, n3) {
            if (e3)
              t3.call(r3, n3);
            else
              for (var i2 = t3.length, o2 = b(t3, i2), s2 = 0; s2 < i2; ++s2)
                o2[s2].call(r3, n3);
          }
          function c(t3, e3, r3, n3, i2) {
            if (e3)
              t3.call(r3, n3, i2);
            else
              for (var o2 = t3.length, s2 = b(t3, o2), a2 = 0; a2 < o2; ++a2)
                s2[a2].call(r3, n3, i2);
          }
          function d(t3, e3, r3, n3, i2, o2) {
            if (e3)
              t3.call(r3, n3, i2, o2);
            else
              for (var s2 = t3.length, a2 = b(t3, s2), h2 = 0; h2 < s2; ++h2)
                a2[h2].call(r3, n3, i2, o2);
          }
          function l(t3, e3, r3, n3) {
            if (e3)
              t3.apply(r3, n3);
            else
              for (var i2 = t3.length, o2 = b(t3, i2), s2 = 0; s2 < i2; ++s2)
                o2[s2].apply(r3, n3);
          }
          function p(t3, r3, n3, i2) {
            var o2, s2, a2;
            if ("function" != typeof n3)
              throw new TypeError('"listener" argument must be a function');
            if ((s2 = t3._events) ? (s2.newListener && (t3.emit("newListener", r3, n3.listener ? n3.listener : n3), s2 = t3._events), a2 = s2[r3]) : (s2 = t3._events = e2(null), t3._eventsCount = 0), a2) {
              if ("function" == typeof a2 ? a2 = s2[r3] = i2 ? [n3, a2] : [a2, n3] : i2 ? a2.unshift(n3) : a2.push(n3), !a2.warned && (o2 = h(t3)) && o2 > 0 && a2.length > o2) {
                a2.warned = true;
                var f2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + ' "' + String(r3) + '" listeners added. Use emitter.setMaxListeners() to increase limit.');
                f2.name = "MaxListenersExceededWarning", f2.emitter = t3, f2.type = r3, f2.count = a2.length, "object" == typeof console && console.warn && console.warn("%s: %s", f2.name, f2.message);
              }
            } else
              a2 = s2[r3] = n3, ++t3._eventsCount;
            return t3;
          }
          function g() {
            if (!this.fired)
              switch (this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length) {
                case 0:
                  return this.listener.call(this.target);
                case 1:
                  return this.listener.call(this.target, arguments[0]);
                case 2:
                  return this.listener.call(this.target, arguments[0], arguments[1]);
                case 3:
                  return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);
                default:
                  for (var t3 = new Array(arguments.length), e3 = 0; e3 < t3.length; ++e3)
                    t3[e3] = arguments[e3];
                  this.listener.apply(this.target, t3);
              }
          }
          function y(t3, e3, r3) {
            var i2 = { fired: false, wrapFn: void 0, target: t3, type: e3, listener: r3 }, o2 = n2.call(g, i2);
            return o2.listener = r3, i2.wrapFn = o2, o2;
          }
          function m(t3, e3, r3) {
            var n3 = t3._events;
            if (!n3)
              return [];
            var i2 = n3[e3];
            return i2 ? "function" == typeof i2 ? r3 ? [i2.listener || i2] : [i2] : r3 ? function(t4) {
              for (var e4 = new Array(t4.length), r4 = 0; r4 < e4.length; ++r4)
                e4[r4] = t4[r4].listener || t4[r4];
              return e4;
            }(i2) : b(i2, i2.length) : [];
          }
          function v(t3) {
            var e3 = this._events;
            if (e3) {
              var r3 = e3[t3];
              if ("function" == typeof r3)
                return 1;
              if (r3)
                return r3.length;
            }
            return 0;
          }
          function b(t3, e3) {
            for (var r3 = new Array(e3), n3 = 0; n3 < e3; ++n3)
              r3[n3] = t3[n3];
            return r3;
          }
          o ? Object.defineProperty(i, "defaultMaxListeners", { enumerable: true, get: function() {
            return s;
          }, set: function(t3) {
            if ("number" != typeof t3 || t3 < 0 || t3 != t3)
              throw new TypeError('"defaultMaxListeners" must be a positive number');
            s = t3;
          } }) : i.defaultMaxListeners = s, i.prototype.setMaxListeners = function(t3) {
            if ("number" != typeof t3 || t3 < 0 || isNaN(t3))
              throw new TypeError('"n" argument must be a positive number');
            return this._maxListeners = t3, this;
          }, i.prototype.getMaxListeners = function() {
            return h(this);
          }, i.prototype.emit = function(t3) {
            var e3, r3, n3, i2, o2, s2, a2 = "error" === t3;
            if (s2 = this._events)
              a2 = a2 && null == s2.error;
            else if (!a2)
              return false;
            if (a2) {
              if (arguments.length > 1 && (e3 = arguments[1]), e3 instanceof Error)
                throw e3;
              var h2 = new Error('Unhandled "error" event. (' + e3 + ")");
              throw h2.context = e3, h2;
            }
            if (!(r3 = s2[t3]))
              return false;
            var p2 = "function" == typeof r3;
            switch (n3 = arguments.length) {
              case 1:
                f(r3, p2, this);
                break;
              case 2:
                u(r3, p2, this, arguments[1]);
                break;
              case 3:
                c(r3, p2, this, arguments[1], arguments[2]);
                break;
              case 4:
                d(r3, p2, this, arguments[1], arguments[2], arguments[3]);
                break;
              default:
                for (i2 = new Array(n3 - 1), o2 = 1; o2 < n3; o2++)
                  i2[o2 - 1] = arguments[o2];
                l(r3, p2, this, i2);
            }
            return true;
          }, i.prototype.addListener = function(t3, e3) {
            return p(this, t3, e3, false);
          }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(t3, e3) {
            return p(this, t3, e3, true);
          }, i.prototype.once = function(t3, e3) {
            if ("function" != typeof e3)
              throw new TypeError('"listener" argument must be a function');
            return this.on(t3, y(this, t3, e3)), this;
          }, i.prototype.prependOnceListener = function(t3, e3) {
            if ("function" != typeof e3)
              throw new TypeError('"listener" argument must be a function');
            return this.prependListener(t3, y(this, t3, e3)), this;
          }, i.prototype.removeListener = function(t3, r3) {
            var n3, i2, o2, s2, a2;
            if ("function" != typeof r3)
              throw new TypeError('"listener" argument must be a function');
            if (!(i2 = this._events))
              return this;
            if (!(n3 = i2[t3]))
              return this;
            if (n3 === r3 || n3.listener === r3)
              0 == --this._eventsCount ? this._events = e2(null) : (delete i2[t3], i2.removeListener && this.emit("removeListener", t3, n3.listener || r3));
            else if ("function" != typeof n3) {
              for (o2 = -1, s2 = n3.length - 1; s2 >= 0; s2--)
                if (n3[s2] === r3 || n3[s2].listener === r3) {
                  a2 = n3[s2].listener, o2 = s2;
                  break;
                }
              if (o2 < 0)
                return this;
              0 === o2 ? n3.shift() : function(t4, e3) {
                for (var r4 = e3, n4 = r4 + 1, i3 = t4.length; n4 < i3; r4 += 1, n4 += 1)
                  t4[r4] = t4[n4];
                t4.pop();
              }(n3, o2), 1 === n3.length && (i2[t3] = n3[0]), i2.removeListener && this.emit("removeListener", t3, a2 || r3);
            }
            return this;
          }, i.prototype.removeAllListeners = function(t3) {
            var n3, i2, o2;
            if (!(i2 = this._events))
              return this;
            if (!i2.removeListener)
              return 0 === arguments.length ? (this._events = e2(null), this._eventsCount = 0) : i2[t3] && (0 == --this._eventsCount ? this._events = e2(null) : delete i2[t3]), this;
            if (0 === arguments.length) {
              var s2, a2 = r2(i2);
              for (o2 = 0; o2 < a2.length; ++o2)
                "removeListener" !== (s2 = a2[o2]) && this.removeAllListeners(s2);
              return this.removeAllListeners("removeListener"), this._events = e2(null), this._eventsCount = 0, this;
            }
            if ("function" == typeof (n3 = i2[t3]))
              this.removeListener(t3, n3);
            else if (n3)
              for (o2 = n3.length - 1; o2 >= 0; o2--)
                this.removeListener(t3, n3[o2]);
            return this;
          }, i.prototype.listeners = function(t3) {
            return m(this, t3, true);
          }, i.prototype.rawListeners = function(t3) {
            return m(this, t3, false);
          }, i.listenerCount = function(t3, e3) {
            return "function" == typeof t3.listenerCount ? t3.listenerCount(e3) : v.call(t3, e3);
          }, i.prototype.listenerCount = v, i.prototype.eventNames = function() {
            return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
          };
        }, 13048: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer, i = r2(62318);
          t2.exports = function(t3, e3, r3, o) {
            if (n2.isBuffer(t3) || (t3 = n2.from(t3, "binary")), e3 && (n2.isBuffer(e3) || (e3 = n2.from(e3, "binary")), 8 !== e3.length))
              throw new RangeError("salt should be Buffer with 8 byte length");
            for (var s = r3 / 8, a = n2.alloc(s), h = n2.alloc(o || 0), f = n2.alloc(0); s > 0 || o > 0; ) {
              var u = new i();
              u.update(f), u.update(t3), e3 && u.update(e3), f = u.digest();
              var c = 0;
              if (s > 0) {
                var d = a.length - s;
                c = Math.min(s, f.length), f.copy(a, d, 0, c), s -= c;
              }
              if (c < f.length && o > 0) {
                var l = h.length - o, p = Math.min(o, f.length - c);
                f.copy(h, l, c, c + p), o -= p;
              }
            }
            return f.fill(0), { key: a, iv: h };
          };
        }, 17648: (t2) => {
          "use strict";
          var e2 = "Function.prototype.bind called on incompatible ", r2 = Array.prototype.slice, n2 = Object.prototype.toString, i = "[object Function]";
          t2.exports = function(t3) {
            var o = this;
            if ("function" != typeof o || n2.call(o) !== i)
              throw new TypeError(e2 + o);
            for (var s, a = r2.call(arguments, 1), h = function() {
              if (this instanceof s) {
                var e3 = o.apply(this, a.concat(r2.call(arguments)));
                return Object(e3) === e3 ? e3 : this;
              }
              return o.apply(t3, a.concat(r2.call(arguments)));
            }, f = Math.max(0, o.length - a.length), u = [], c = 0; c < f; c++)
              u.push("$" + c);
            if (s = Function("binder", "return function (" + u.join(",") + "){ return binder.apply(this,arguments); }")(h), o.prototype) {
              var d = function() {
              };
              d.prototype = o.prototype, s.prototype = new d(), d.prototype = null;
            }
            return s;
          };
        }, 58612: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(17648);
          t2.exports = Function.prototype.bind || n2;
        }, 40210: (t2, e2, r2) => {
          "use strict";
          var n2, i = SyntaxError, o = Function, s = TypeError, a = function(t3) {
            try {
              return o('"use strict"; return (' + t3 + ").constructor;")();
            } catch (t4) {
            }
          }, h = Object.getOwnPropertyDescriptor;
          if (h)
            try {
              h({}, "");
            } catch (t3) {
              h = null;
            }
          var f = function() {
            throw new s();
          }, u = h ? function() {
            try {
              return f;
            } catch (t3) {
              try {
                return h(arguments, "callee").get;
              } catch (t4) {
                return f;
              }
            }
          }() : f, c = r2(41405)(), d = Object.getPrototypeOf || function(t3) {
            return t3.__proto__;
          }, l = {}, p = "undefined" == typeof Uint8Array ? n2 : d(Uint8Array), g = { "%AggregateError%": "undefined" == typeof AggregateError ? n2 : AggregateError, "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? n2 : ArrayBuffer, "%ArrayIteratorPrototype%": c ? d([][Symbol.iterator]()) : n2, "%AsyncFromSyncIteratorPrototype%": n2, "%AsyncFunction%": l, "%AsyncGenerator%": l, "%AsyncGeneratorFunction%": l, "%AsyncIteratorPrototype%": l, "%Atomics%": "undefined" == typeof Atomics ? n2 : Atomics, "%BigInt%": "undefined" == typeof BigInt ? n2 : BigInt, "%Boolean%": Boolean, "%DataView%": "undefined" == typeof DataView ? n2 : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%EvalError%": EvalError, "%Float32Array%": "undefined" == typeof Float32Array ? n2 : Float32Array, "%Float64Array%": "undefined" == typeof Float64Array ? n2 : Float64Array, "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? n2 : FinalizationRegistry, "%Function%": o, "%GeneratorFunction%": l, "%Int8Array%": "undefined" == typeof Int8Array ? n2 : Int8Array, "%Int16Array%": "undefined" == typeof Int16Array ? n2 : Int16Array, "%Int32Array%": "undefined" == typeof Int32Array ? n2 : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": c ? d(d([][Symbol.iterator]())) : n2, "%JSON%": "object" == typeof JSON ? JSON : n2, "%Map%": "undefined" == typeof Map ? n2 : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && c ? d((/* @__PURE__ */ new Map())[Symbol.iterator]()) : n2, "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? n2 : Promise, "%Proxy%": "undefined" == typeof Proxy ? n2 : Proxy, "%RangeError%": RangeError, "%ReferenceError%": ReferenceError, "%Reflect%": "undefined" == typeof Reflect ? n2 : Reflect, "%RegExp%": RegExp, "%Set%": "undefined" == typeof Set ? n2 : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && c ? d((/* @__PURE__ */ new Set())[Symbol.iterator]()) : n2, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? n2 : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": c ? d(""[Symbol.iterator]()) : n2, "%Symbol%": c ? Symbol : n2, "%SyntaxError%": i, "%ThrowTypeError%": u, "%TypedArray%": p, "%TypeError%": s, "%Uint8Array%": "undefined" == typeof Uint8Array ? n2 : Uint8Array, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? n2 : Uint8ClampedArray, "%Uint16Array%": "undefined" == typeof Uint16Array ? n2 : Uint16Array, "%Uint32Array%": "undefined" == typeof Uint32Array ? n2 : Uint32Array, "%URIError%": URIError, "%WeakMap%": "undefined" == typeof WeakMap ? n2 : WeakMap, "%WeakRef%": "undefined" == typeof WeakRef ? n2 : WeakRef, "%WeakSet%": "undefined" == typeof WeakSet ? n2 : WeakSet }, y = function t3(e3) {
            var r3;
            if ("%AsyncFunction%" === e3)
              r3 = a("async function () {}");
            else if ("%GeneratorFunction%" === e3)
              r3 = a("function* () {}");
            else if ("%AsyncGeneratorFunction%" === e3)
              r3 = a("async function* () {}");
            else if ("%AsyncGenerator%" === e3) {
              var n3 = t3("%AsyncGeneratorFunction%");
              n3 && (r3 = n3.prototype);
            } else if ("%AsyncIteratorPrototype%" === e3) {
              var i2 = t3("%AsyncGenerator%");
              i2 && (r3 = d(i2.prototype));
            }
            return g[e3] = r3, r3;
          }, m = { "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, v = r2(58612), b = r2(17642), w = v.call(Function.call, Array.prototype.concat), _ = v.call(Function.apply, Array.prototype.splice), k = v.call(Function.call, String.prototype.replace), S = v.call(Function.call, String.prototype.slice), A = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, x = /\\(\\)?/g, M = function(t3) {
            var e3 = S(t3, 0, 1), r3 = S(t3, -1);
            if ("%" === e3 && "%" !== r3)
              throw new i("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r3 && "%" !== e3)
              throw new i("invalid intrinsic syntax, expected opening `%`");
            var n3 = [];
            return k(t3, A, function(t4, e4, r4, i2) {
              n3[n3.length] = r4 ? k(i2, x, "$1") : e4 || t4;
            }), n3;
          }, E = function(t3, e3) {
            var r3, n3 = t3;
            if (b(m, n3) && (n3 = "%" + (r3 = m[n3])[0] + "%"), b(g, n3)) {
              var o2 = g[n3];
              if (o2 === l && (o2 = y(n3)), void 0 === o2 && !e3)
                throw new s("intrinsic " + t3 + " exists, but is not available. Please file an issue!");
              return { alias: r3, name: n3, value: o2 };
            }
            throw new i("intrinsic " + t3 + " does not exist!");
          };
          t2.exports = function(t3, e3) {
            if ("string" != typeof t3 || 0 === t3.length)
              throw new s("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && "boolean" != typeof e3)
              throw new s('"allowMissing" argument must be a boolean');
            var r3 = M(t3), n3 = r3.length > 0 ? r3[0] : "", o2 = E("%" + n3 + "%", e3), a2 = o2.name, f2 = o2.value, u2 = false, c2 = o2.alias;
            c2 && (n3 = c2[0], _(r3, w([0, 1], c2)));
            for (var d2 = 1, l2 = true; d2 < r3.length; d2 += 1) {
              var p2 = r3[d2], y2 = S(p2, 0, 1), m2 = S(p2, -1);
              if (('"' === y2 || "'" === y2 || "`" === y2 || '"' === m2 || "'" === m2 || "`" === m2) && y2 !== m2)
                throw new i("property names with quotes must have matching quotes");
              if ("constructor" !== p2 && l2 || (u2 = true), b(g, a2 = "%" + (n3 += "." + p2) + "%"))
                f2 = g[a2];
              else if (null != f2) {
                if (!(p2 in f2)) {
                  if (!e3)
                    throw new s("base intrinsic for " + t3 + " exists, but the property is not available.");
                  return;
                }
                if (h && d2 + 1 >= r3.length) {
                  var v2 = h(f2, p2);
                  f2 = (l2 = !!v2) && "get" in v2 && !("originalValue" in v2.get) ? v2.get : f2[p2];
                } else
                  l2 = b(f2, p2), f2 = f2[p2];
                l2 && !u2 && (g[a2] = f2);
              }
            }
            return f2;
          };
        }, 41405: (t2, e2, r2) => {
          "use strict";
          var n2 = r2.g.Symbol, i = r2(55419);
          t2.exports = function() {
            return "function" == typeof n2 && "function" == typeof Symbol && "symbol" == typeof n2("foo") && "symbol" == typeof Symbol("bar") && i();
          };
        }, 55419: (t2) => {
          "use strict";
          t2.exports = function() {
            if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols)
              return false;
            if ("symbol" == typeof Symbol.iterator)
              return true;
            var t3 = {}, e2 = Symbol("test"), r2 = Object(e2);
            if ("string" == typeof e2)
              return false;
            if ("[object Symbol]" !== Object.prototype.toString.call(e2))
              return false;
            if ("[object Symbol]" !== Object.prototype.toString.call(r2))
              return false;
            for (e2 in t3[e2] = 42, t3)
              return false;
            if ("function" == typeof Object.keys && 0 !== Object.keys(t3).length)
              return false;
            if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t3).length)
              return false;
            var n2 = Object.getOwnPropertySymbols(t3);
            if (1 !== n2.length || n2[0] !== e2)
              return false;
            if (!Object.prototype.propertyIsEnumerable.call(t3, e2))
              return false;
            if ("function" == typeof Object.getOwnPropertyDescriptor) {
              var i = Object.getOwnPropertyDescriptor(t3, e2);
              if (42 !== i.value || true !== i.enumerable)
                return false;
            }
            return true;
          };
        }, 17642: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(58612);
          t2.exports = n2.call(Function.call, Object.prototype.hasOwnProperty);
        }, 3349: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(89509).Buffer, i = r2(70326).Transform;
          function o(t3) {
            i.call(this), this._block = n2.allocUnsafe(t3), this._blockSize = t3, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
          }
          r2(35717)(o, i), o.prototype._transform = function(t3, e3, r3) {
            var n3 = null;
            try {
              this.update(t3, e3);
            } catch (t4) {
              n3 = t4;
            }
            r3(n3);
          }, o.prototype._flush = function(t3) {
            var e3 = null;
            try {
              this.push(this.digest());
            } catch (t4) {
              e3 = t4;
            }
            t3(e3);
          }, o.prototype.update = function(t3, e3) {
            if (function(t4, e4) {
              if (!n2.isBuffer(t4) && "string" != typeof t4)
                throw new TypeError("Data must be a string or a buffer");
            }(t3), this._finalized)
              throw new Error("Digest already called");
            n2.isBuffer(t3) || (t3 = n2.from(t3, e3));
            for (var r3 = this._block, i2 = 0; this._blockOffset + t3.length - i2 >= this._blockSize; ) {
              for (var o2 = this._blockOffset; o2 < this._blockSize; )
                r3[o2++] = t3[i2++];
              this._update(), this._blockOffset = 0;
            }
            for (; i2 < t3.length; )
              r3[this._blockOffset++] = t3[i2++];
            for (var s = 0, a = 8 * t3.length; a > 0; ++s)
              this._length[s] += a, (a = this._length[s] / 4294967296 | 0) > 0 && (this._length[s] -= 4294967296 * a);
            return this;
          }, o.prototype._update = function() {
            throw new Error("_update is not implemented");
          }, o.prototype.digest = function(t3) {
            if (this._finalized)
              throw new Error("Digest already called");
            this._finalized = true;
            var e3 = this._digest();
            void 0 !== t3 && (e3 = e3.toString(t3)), this._block.fill(0), this._blockOffset = 0;
            for (var r3 = 0; r3 < 4; ++r3)
              this._length[r3] = 0;
            return e3;
          }, o.prototype._digest = function() {
            throw new Error("_digest is not implemented");
          }, t2.exports = o;
        }, 9786: (t2) => {
          "use strict";
          var e2 = {};
          function r2(t3, r3, n3) {
            n3 || (n3 = Error);
            var i = function(t4) {
              var e3, n4;
              function i2(e4, n5, i3) {
                return t4.call(this, function(t5, e5, n6) {
                  return "string" == typeof r3 ? r3 : r3(t5, e5, n6);
                }(e4, n5, i3)) || this;
              }
              return n4 = t4, (e3 = i2).prototype = Object.create(n4.prototype), e3.prototype.constructor = e3, e3.__proto__ = n4, i2;
            }(n3);
            i.prototype.name = n3.name, i.prototype.code = t3, e2[t3] = i;
          }
          function n2(t3, e3) {
            if (Array.isArray(t3)) {
              var r3 = t3.length;
              return t3 = t3.map(function(t4) {
                return String(t4);
              }), r3 > 2 ? "one of ".concat(e3, " ").concat(t3.slice(0, r3 - 1).join(", "), ", or ") + t3[r3 - 1] : 2 === r3 ? "one of ".concat(e3, " ").concat(t3[0], " or ").concat(t3[1]) : "of ".concat(e3, " ").concat(t3[0]);
            }
            return "of ".concat(e3, " ").concat(String(t3));
          }
          r2("ERR_INVALID_OPT_VALUE", function(t3, e3) {
            return 'The value "' + e3 + '" is invalid for option "' + t3 + '"';
          }, TypeError), r2("ERR_INVALID_ARG_TYPE", function(t3, e3, r3) {
            var i, o, s, a, h;
            if ("string" == typeof e3 && (o = "not ", e3.substr(0, o.length) === o) ? (i = "must not be", e3 = e3.replace(/^not /, "")) : i = "must be", function(t4, e4, r4) {
              return (void 0 === r4 || r4 > t4.length) && (r4 = t4.length), t4.substring(r4 - e4.length, r4) === e4;
            }(t3, " argument"))
              s = "The ".concat(t3, " ").concat(i, " ").concat(n2(e3, "type"));
            else {
              var f = ("number" != typeof h && (h = 0), h + ".".length > (a = t3).length || -1 === a.indexOf(".", h) ? "argument" : "property");
              s = 'The "'.concat(t3, '" ').concat(f, " ").concat(i, " ").concat(n2(e3, "type"));
            }
            return s + ". Received type ".concat(typeof r3);
          }, TypeError), r2("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), r2("ERR_METHOD_NOT_IMPLEMENTED", function(t3) {
            return "The " + t3 + " method is not implemented";
          }), r2("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), r2("ERR_STREAM_DESTROYED", function(t3) {
            return "Cannot call " + t3 + " after a stream was destroyed";
          }), r2("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), r2("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), r2("ERR_STREAM_WRITE_AFTER_END", "write after end"), r2("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), r2("ERR_UNKNOWN_ENCODING", function(t3) {
            return "Unknown encoding: " + t3;
          }, TypeError), r2("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t2.exports.q = e2;
        }, 62910: (t2, e2, r2) => {
          "use strict";
          var n2 = Object.keys || function(t3) {
            var e3 = [];
            for (var r3 in t3)
              e3.push(r3);
            return e3;
          };
          t2.exports = f;
          var i = r2(45789), o = r2(70469);
          r2(35717)(f, i);
          for (var s = n2(o.prototype), a = 0; a < s.length; a++) {
            var h = s[a];
            f.prototype[h] || (f.prototype[h] = o.prototype[h]);
          }
          function f(t3) {
            if (!(this instanceof f))
              return new f(t3);
            i.call(this, t3), o.call(this, t3), this.allowHalfOpen = true, t3 && (false === t3.readable && (this.readable = false), false === t3.writable && (this.writable = false), false === t3.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", u)));
          }
          function u() {
            this._writableState.ended || process.nextTick(c, this);
          }
          function c(t3) {
            t3.end();
          }
          Object.defineProperty(f.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
            return this._writableState.highWaterMark;
          } }), Object.defineProperty(f.prototype, "writableBuffer", { enumerable: false, get: function() {
            return this._writableState && this._writableState.getBuffer();
          } }), Object.defineProperty(f.prototype, "writableLength", { enumerable: false, get: function() {
            return this._writableState.length;
          } }), Object.defineProperty(f.prototype, "destroyed", { enumerable: false, get: function() {
            return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
          }, set: function(t3) {
            void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t3, this._writableState.destroyed = t3);
          } });
        }, 58994: (t2, e2, r2) => {
          "use strict";
          t2.exports = i;
          var n2 = r2(70421);
          function i(t3) {
            if (!(this instanceof i))
              return new i(t3);
            n2.call(this, t3);
          }
          r2(35717)(i, n2), i.prototype._transform = function(t3, e3, r3) {
            r3(null, t3);
          };
        }, 45789: (t2, e2, r2) => {
          "use strict";
          var n2;
          t2.exports = A, A.ReadableState = S, r2(17187).EventEmitter;
          var i, o = function(t3, e3) {
            return t3.listeners(e3).length;
          }, s = r2(50677), a = r2(48764).Buffer, h = r2.g.Uint8Array || function() {
          }, f = r2(31616);
          i = f && f.debuglog ? f.debuglog("stream") : function() {
          };
          var u, c, d, l = r2(98354), p = r2(35072), g = r2(31222).getHighWaterMark, y = r2(9786).q, m = y.ERR_INVALID_ARG_TYPE, v = y.ERR_STREAM_PUSH_AFTER_EOF, b = y.ERR_METHOD_NOT_IMPLEMENTED, w = y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
          r2(35717)(A, s);
          var _ = p.errorOrDestroy, k = ["error", "close", "destroy", "pause", "resume"];
          function S(t3, e3, i2) {
            n2 = n2 || r2(62910), t3 = t3 || {}, "boolean" != typeof i2 && (i2 = e3 instanceof n2), this.objectMode = !!t3.objectMode, i2 && (this.objectMode = this.objectMode || !!t3.readableObjectMode), this.highWaterMark = g(this, t3, "readableHighWaterMark", i2), this.buffer = new l(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== t3.emitClose, this.autoDestroy = !!t3.autoDestroy, this.destroyed = false, this.defaultEncoding = t3.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t3.encoding && (u || (u = r2(32553).s), this.decoder = new u(t3.encoding), this.encoding = t3.encoding);
          }
          function A(t3) {
            if (n2 = n2 || r2(62910), !(this instanceof A))
              return new A(t3);
            var e3 = this instanceof n2;
            this._readableState = new S(t3, this, e3), this.readable = true, t3 && ("function" == typeof t3.read && (this._read = t3.read), "function" == typeof t3.destroy && (this._destroy = t3.destroy)), s.call(this);
          }
          function x(t3, e3, r3, n3, o2) {
            i("readableAddChunk", e3);
            var s2, f2 = t3._readableState;
            if (null === e3)
              f2.reading = false, function(t4, e4) {
                if (i("onEofChunk"), !e4.ended) {
                  if (e4.decoder) {
                    var r4 = e4.decoder.end();
                    r4 && r4.length && (e4.buffer.push(r4), e4.length += e4.objectMode ? 1 : r4.length);
                  }
                  e4.ended = true, e4.sync ? I(t4) : (e4.needReadable = false, e4.emittedReadable || (e4.emittedReadable = true, P(t4)));
                }
              }(t3, f2);
            else if (o2 || (s2 = function(t4, e4) {
              var r4, n4;
              return n4 = e4, a.isBuffer(n4) || n4 instanceof h || "string" == typeof e4 || void 0 === e4 || t4.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], e4)), r4;
            }(f2, e3)), s2)
              _(t3, s2);
            else if (f2.objectMode || e3 && e3.length > 0)
              if ("string" == typeof e3 || f2.objectMode || Object.getPrototypeOf(e3) === a.prototype || (e3 = function(t4) {
                return a.from(t4);
              }(e3)), n3)
                f2.endEmitted ? _(t3, new w()) : M(t3, f2, e3, true);
              else if (f2.ended)
                _(t3, new v());
              else {
                if (f2.destroyed)
                  return false;
                f2.reading = false, f2.decoder && !r3 ? (e3 = f2.decoder.write(e3), f2.objectMode || 0 !== e3.length ? M(t3, f2, e3, false) : T(t3, f2)) : M(t3, f2, e3, false);
              }
            else
              n3 || (f2.reading = false, T(t3, f2));
            return !f2.ended && (f2.length < f2.highWaterMark || 0 === f2.length);
          }
          function M(t3, e3, r3, n3) {
            e3.flowing && 0 === e3.length && !e3.sync ? (e3.awaitDrain = 0, t3.emit("data", r3)) : (e3.length += e3.objectMode ? 1 : r3.length, n3 ? e3.buffer.unshift(r3) : e3.buffer.push(r3), e3.needReadable && I(t3)), T(t3, e3);
          }
          Object.defineProperty(A.prototype, "destroyed", { enumerable: false, get: function() {
            return void 0 !== this._readableState && this._readableState.destroyed;
          }, set: function(t3) {
            this._readableState && (this._readableState.destroyed = t3);
          } }), A.prototype.destroy = p.destroy, A.prototype._undestroy = p.undestroy, A.prototype._destroy = function(t3, e3) {
            e3(t3);
          }, A.prototype.push = function(t3, e3) {
            var r3, n3 = this._readableState;
            return n3.objectMode ? r3 = true : "string" == typeof t3 && ((e3 = e3 || n3.defaultEncoding) !== n3.encoding && (t3 = a.from(t3, e3), e3 = ""), r3 = true), x(this, t3, e3, false, r3);
          }, A.prototype.unshift = function(t3) {
            return x(this, t3, null, true, false);
          }, A.prototype.isPaused = function() {
            return false === this._readableState.flowing;
          }, A.prototype.setEncoding = function(t3) {
            u || (u = r2(32553).s);
            var e3 = new u(t3);
            this._readableState.decoder = e3, this._readableState.encoding = this._readableState.decoder.encoding;
            for (var n3 = this._readableState.buffer.head, i2 = ""; null !== n3; )
              i2 += e3.write(n3.data), n3 = n3.next;
            return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
          };
          var E = 1073741824;
          function B(t3, e3) {
            return t3 <= 0 || 0 === e3.length && e3.ended ? 0 : e3.objectMode ? 1 : t3 != t3 ? e3.flowing && e3.length ? e3.buffer.head.data.length : e3.length : (t3 > e3.highWaterMark && (e3.highWaterMark = function(t4) {
              return t4 >= E ? t4 = E : (t4--, t4 |= t4 >>> 1, t4 |= t4 >>> 2, t4 |= t4 >>> 4, t4 |= t4 >>> 8, t4 |= t4 >>> 16, t4++), t4;
            }(t3)), t3 <= e3.length ? t3 : e3.ended ? e3.length : (e3.needReadable = true, 0));
          }
          function I(t3) {
            var e3 = t3._readableState;
            i("emitReadable", e3.needReadable, e3.emittedReadable), e3.needReadable = false, e3.emittedReadable || (i("emitReadable", e3.flowing), e3.emittedReadable = true, process.nextTick(P, t3));
          }
          function P(t3) {
            var e3 = t3._readableState;
            i("emitReadable_", e3.destroyed, e3.length, e3.ended), e3.destroyed || !e3.length && !e3.ended || (t3.emit("readable"), e3.emittedReadable = false), e3.needReadable = !e3.flowing && !e3.ended && e3.length <= e3.highWaterMark, N(t3);
          }
          function T(t3, e3) {
            e3.readingMore || (e3.readingMore = true, process.nextTick(R, t3, e3));
          }
          function R(t3, e3) {
            for (; !e3.reading && !e3.ended && (e3.length < e3.highWaterMark || e3.flowing && 0 === e3.length); ) {
              var r3 = e3.length;
              if (i("maybeReadMore read 0"), t3.read(0), r3 === e3.length)
                break;
            }
            e3.readingMore = false;
          }
          function O(t3) {
            var e3 = t3._readableState;
            e3.readableListening = t3.listenerCount("readable") > 0, e3.resumeScheduled && !e3.paused ? e3.flowing = true : t3.listenerCount("data") > 0 && t3.resume();
          }
          function C(t3) {
            i("readable nexttick read 0"), t3.read(0);
          }
          function j(t3, e3) {
            i("resume", e3.reading), e3.reading || t3.read(0), e3.resumeScheduled = false, t3.emit("resume"), N(t3), e3.flowing && !e3.reading && t3.read(0);
          }
          function N(t3) {
            var e3 = t3._readableState;
            for (i("flow", e3.flowing); e3.flowing && null !== t3.read(); )
              ;
          }
          function D(t3, e3) {
            return 0 === e3.length ? null : (e3.objectMode ? r3 = e3.buffer.shift() : !t3 || t3 >= e3.length ? (r3 = e3.decoder ? e3.buffer.join("") : 1 === e3.buffer.length ? e3.buffer.first() : e3.buffer.concat(e3.length), e3.buffer.clear()) : r3 = e3.buffer.consume(t3, e3.decoder), r3);
            var r3;
          }
          function L(t3) {
            var e3 = t3._readableState;
            i("endReadable", e3.endEmitted), e3.endEmitted || (e3.ended = true, process.nextTick(F, e3, t3));
          }
          function F(t3, e3) {
            if (i("endReadableNT", t3.endEmitted, t3.length), !t3.endEmitted && 0 === t3.length && (t3.endEmitted = true, e3.readable = false, e3.emit("end"), t3.autoDestroy)) {
              var r3 = e3._writableState;
              (!r3 || r3.autoDestroy && r3.finished) && e3.destroy();
            }
          }
          function q(t3, e3) {
            for (var r3 = 0, n3 = t3.length; r3 < n3; r3++)
              if (t3[r3] === e3)
                return r3;
            return -1;
          }
          A.prototype.read = function(t3) {
            i("read", t3), t3 = parseInt(t3, 10);
            var e3 = this._readableState, r3 = t3;
            if (0 !== t3 && (e3.emittedReadable = false), 0 === t3 && e3.needReadable && ((0 !== e3.highWaterMark ? e3.length >= e3.highWaterMark : e3.length > 0) || e3.ended))
              return i("read: emitReadable", e3.length, e3.ended), 0 === e3.length && e3.ended ? L(this) : I(this), null;
            if (0 === (t3 = B(t3, e3)) && e3.ended)
              return 0 === e3.length && L(this), null;
            var n3, o2 = e3.needReadable;
            return i("need readable", o2), (0 === e3.length || e3.length - t3 < e3.highWaterMark) && i("length less than watermark", o2 = true), e3.ended || e3.reading ? i("reading or ended", o2 = false) : o2 && (i("do read"), e3.reading = true, e3.sync = true, 0 === e3.length && (e3.needReadable = true), this._read(e3.highWaterMark), e3.sync = false, e3.reading || (t3 = B(r3, e3))), null === (n3 = t3 > 0 ? D(t3, e3) : null) ? (e3.needReadable = e3.length <= e3.highWaterMark, t3 = 0) : (e3.length -= t3, e3.awaitDrain = 0), 0 === e3.length && (e3.ended || (e3.needReadable = true), r3 !== t3 && e3.ended && L(this)), null !== n3 && this.emit("data", n3), n3;
          }, A.prototype._read = function(t3) {
            _(this, new b("_read()"));
          }, A.prototype.pipe = function(t3, e3) {
            var r3 = this, n3 = this._readableState;
            switch (n3.pipesCount) {
              case 0:
                n3.pipes = t3;
                break;
              case 1:
                n3.pipes = [n3.pipes, t3];
                break;
              default:
                n3.pipes.push(t3);
            }
            n3.pipesCount += 1, i("pipe count=%d opts=%j", n3.pipesCount, e3);
            var s2 = e3 && false === e3.end || t3 === process.stdout || t3 === process.stderr ? p2 : a2;
            function a2() {
              i("onend"), t3.end();
            }
            n3.endEmitted ? process.nextTick(s2) : r3.once("end", s2), t3.on("unpipe", function e4(o2, s3) {
              i("onunpipe"), o2 === r3 && s3 && false === s3.hasUnpiped && (s3.hasUnpiped = true, i("cleanup"), t3.removeListener("close", d2), t3.removeListener("finish", l2), t3.removeListener("drain", h2), t3.removeListener("error", c2), t3.removeListener("unpipe", e4), r3.removeListener("end", a2), r3.removeListener("end", p2), r3.removeListener("data", u2), f2 = true, !n3.awaitDrain || t3._writableState && !t3._writableState.needDrain || h2());
            });
            var h2 = function(t4) {
              return function() {
                var e4 = t4._readableState;
                i("pipeOnDrain", e4.awaitDrain), e4.awaitDrain && e4.awaitDrain--, 0 === e4.awaitDrain && o(t4, "data") && (e4.flowing = true, N(t4));
              };
            }(r3);
            t3.on("drain", h2);
            var f2 = false;
            function u2(e4) {
              i("ondata");
              var o2 = t3.write(e4);
              i("dest.write", o2), false === o2 && ((1 === n3.pipesCount && n3.pipes === t3 || n3.pipesCount > 1 && -1 !== q(n3.pipes, t3)) && !f2 && (i("false write response, pause", n3.awaitDrain), n3.awaitDrain++), r3.pause());
            }
            function c2(e4) {
              i("onerror", e4), p2(), t3.removeListener("error", c2), 0 === o(t3, "error") && _(t3, e4);
            }
            function d2() {
              t3.removeListener("finish", l2), p2();
            }
            function l2() {
              i("onfinish"), t3.removeListener("close", d2), p2();
            }
            function p2() {
              i("unpipe"), r3.unpipe(t3);
            }
            return r3.on("data", u2), function(t4, e4, r4) {
              if ("function" == typeof t4.prependListener)
                return t4.prependListener(e4, r4);
              t4._events && t4._events.error ? Array.isArray(t4._events.error) ? t4._events.error.unshift(r4) : t4._events.error = [r4, t4._events.error] : t4.on(e4, r4);
            }(t3, "error", c2), t3.once("close", d2), t3.once("finish", l2), t3.emit("pipe", r3), n3.flowing || (i("pipe resume"), r3.resume()), t3;
          }, A.prototype.unpipe = function(t3) {
            var e3 = this._readableState, r3 = { hasUnpiped: false };
            if (0 === e3.pipesCount)
              return this;
            if (1 === e3.pipesCount)
              return t3 && t3 !== e3.pipes || (t3 || (t3 = e3.pipes), e3.pipes = null, e3.pipesCount = 0, e3.flowing = false, t3 && t3.emit("unpipe", this, r3)), this;
            if (!t3) {
              var n3 = e3.pipes, i2 = e3.pipesCount;
              e3.pipes = null, e3.pipesCount = 0, e3.flowing = false;
              for (var o2 = 0; o2 < i2; o2++)
                n3[o2].emit("unpipe", this, { hasUnpiped: false });
              return this;
            }
            var s2 = q(e3.pipes, t3);
            return -1 === s2 || (e3.pipes.splice(s2, 1), e3.pipesCount -= 1, 1 === e3.pipesCount && (e3.pipes = e3.pipes[0]), t3.emit("unpipe", this, r3)), this;
          }, A.prototype.on = function(t3, e3) {
            var r3 = s.prototype.on.call(this, t3, e3), n3 = this._readableState;
            return "data" === t3 ? (n3.readableListening = this.listenerCount("readable") > 0, false !== n3.flowing && this.resume()) : "readable" === t3 && (n3.endEmitted || n3.readableListening || (n3.readableListening = n3.needReadable = true, n3.flowing = false, n3.emittedReadable = false, i("on readable", n3.length, n3.reading), n3.length ? I(this) : n3.reading || process.nextTick(C, this))), r3;
          }, A.prototype.addListener = A.prototype.on, A.prototype.removeListener = function(t3, e3) {
            var r3 = s.prototype.removeListener.call(this, t3, e3);
            return "readable" === t3 && process.nextTick(O, this), r3;
          }, A.prototype.removeAllListeners = function(t3) {
            var e3 = s.prototype.removeAllListeners.apply(this, arguments);
            return "readable" !== t3 && void 0 !== t3 || process.nextTick(O, this), e3;
          }, A.prototype.resume = function() {
            var t3 = this._readableState;
            return t3.flowing || (i("resume"), t3.flowing = !t3.readableListening, function(t4, e3) {
              e3.resumeScheduled || (e3.resumeScheduled = true, process.nextTick(j, t4, e3));
            }(this, t3)), t3.paused = false, this;
          }, A.prototype.pause = function() {
            return i("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (i("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
          }, A.prototype.wrap = function(t3) {
            var e3 = this, r3 = this._readableState, n3 = false;
            for (var o2 in t3.on("end", function() {
              if (i("wrapped end"), r3.decoder && !r3.ended) {
                var t4 = r3.decoder.end();
                t4 && t4.length && e3.push(t4);
              }
              e3.push(null);
            }), t3.on("data", function(o3) {
              i("wrapped data"), r3.decoder && (o3 = r3.decoder.write(o3)), r3.objectMode && null == o3 || (r3.objectMode || o3 && o3.length) && (e3.push(o3) || (n3 = true, t3.pause()));
            }), t3)
              void 0 === this[o2] && "function" == typeof t3[o2] && (this[o2] = function(e4) {
                return function() {
                  return t3[e4].apply(t3, arguments);
                };
              }(o2));
            for (var s2 = 0; s2 < k.length; s2++)
              t3.on(k[s2], this.emit.bind(this, k[s2]));
            return this._read = function(e4) {
              i("wrapped _read", e4), n3 && (n3 = false, t3.resume());
            }, this;
          }, "function" == typeof Symbol && (A.prototype[Symbol.asyncIterator] = function() {
            return void 0 === c && (c = r2(30527)), c(this);
          }), Object.defineProperty(A.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
            return this._readableState.highWaterMark;
          } }), Object.defineProperty(A.prototype, "readableBuffer", { enumerable: false, get: function() {
            return this._readableState && this._readableState.buffer;
          } }), Object.defineProperty(A.prototype, "readableFlowing", { enumerable: false, get: function() {
            return this._readableState.flowing;
          }, set: function(t3) {
            this._readableState && (this._readableState.flowing = t3);
          } }), A._fromList = D, Object.defineProperty(A.prototype, "readableLength", { enumerable: false, get: function() {
            return this._readableState.length;
          } }), "function" == typeof Symbol && (A.from = function(t3, e3) {
            return void 0 === d && (d = r2(5327)), d(A, t3, e3);
          });
        }, 70421: (t2, e2, r2) => {
          "use strict";
          t2.exports = u;
          var n2 = r2(9786).q, i = n2.ERR_METHOD_NOT_IMPLEMENTED, o = n2.ERR_MULTIPLE_CALLBACK, s = n2.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n2.ERR_TRANSFORM_WITH_LENGTH_0, h = r2(62910);
          function f(t3, e3) {
            var r3 = this._transformState;
            r3.transforming = false;
            var n3 = r3.writecb;
            if (null === n3)
              return this.emit("error", new o());
            r3.writechunk = null, r3.writecb = null, null != e3 && this.push(e3), n3(t3);
            var i2 = this._readableState;
            i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
          }
          function u(t3) {
            if (!(this instanceof u))
              return new u(t3);
            h.call(this, t3), this._transformState = { afterTransform: f.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t3 && ("function" == typeof t3.transform && (this._transform = t3.transform), "function" == typeof t3.flush && (this._flush = t3.flush)), this.on("prefinish", c);
          }
          function c() {
            var t3 = this;
            "function" != typeof this._flush || this._readableState.destroyed ? d(this, null, null) : this._flush(function(e3, r3) {
              d(t3, e3, r3);
            });
          }
          function d(t3, e3, r3) {
            if (e3)
              return t3.emit("error", e3);
            if (null != r3 && t3.push(r3), t3._writableState.length)
              throw new a();
            if (t3._transformState.transforming)
              throw new s();
            return t3.push(null);
          }
          r2(35717)(u, h), u.prototype.push = function(t3, e3) {
            return this._transformState.needTransform = false, h.prototype.push.call(this, t3, e3);
          }, u.prototype._transform = function(t3, e3, r3) {
            r3(new i("_transform()"));
          }, u.prototype._write = function(t3, e3, r3) {
            var n3 = this._transformState;
            if (n3.writecb = r3, n3.writechunk = t3, n3.writeencoding = e3, !n3.transforming) {
              var i2 = this._readableState;
              (n3.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
            }
          }, u.prototype._read = function(t3) {
            var e3 = this._transformState;
            null === e3.writechunk || e3.transforming ? e3.needTransform = true : (e3.transforming = true, this._transform(e3.writechunk, e3.writeencoding, e3.afterTransform));
          }, u.prototype._destroy = function(t3, e3) {
            h.prototype._destroy.call(this, t3, function(t4) {
              e3(t4);
            });
          };
        }, 70469: (t2, e2, r2) => {
          "use strict";
          function n2(t3) {
            var e3 = this;
            this.next = null, this.entry = null, this.finish = function() {
              !function(t4, e4, r3) {
                var n3 = t4.entry;
                for (t4.entry = null; n3; ) {
                  var i2 = n3.callback;
                  e4.pendingcb--, i2(void 0), n3 = n3.next;
                }
                e4.corkedRequestsFree.next = t4;
              }(e3, t3);
            };
          }
          var i;
          t2.exports = A, A.WritableState = S;
          var o, s = { deprecate: r2(94927) }, a = r2(50677), h = r2(48764).Buffer, f = r2.g.Uint8Array || function() {
          }, u = r2(35072), c = r2(31222).getHighWaterMark, d = r2(9786).q, l = d.ERR_INVALID_ARG_TYPE, p = d.ERR_METHOD_NOT_IMPLEMENTED, g = d.ERR_MULTIPLE_CALLBACK, y = d.ERR_STREAM_CANNOT_PIPE, m = d.ERR_STREAM_DESTROYED, v = d.ERR_STREAM_NULL_VALUES, b = d.ERR_STREAM_WRITE_AFTER_END, w = d.ERR_UNKNOWN_ENCODING, _ = u.errorOrDestroy;
          function k() {
          }
          function S(t3, e3, o2) {
            i = i || r2(62910), t3 = t3 || {}, "boolean" != typeof o2 && (o2 = e3 instanceof i), this.objectMode = !!t3.objectMode, o2 && (this.objectMode = this.objectMode || !!t3.writableObjectMode), this.highWaterMark = c(this, t3, "writableHighWaterMark", o2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
            var s2 = false === t3.decodeStrings;
            this.decodeStrings = !s2, this.defaultEncoding = t3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(t4) {
              !function(t5, e4) {
                var r3 = t5._writableState, n3 = r3.sync, i2 = r3.writecb;
                if ("function" != typeof i2)
                  throw new g();
                if (function(t6) {
                  t6.writing = false, t6.writecb = null, t6.length -= t6.writelen, t6.writelen = 0;
                }(r3), e4)
                  !function(t6, e5, r4, n4, i3) {
                    --e5.pendingcb, r4 ? (process.nextTick(i3, n4), process.nextTick(P, t6, e5), t6._writableState.errorEmitted = true, _(t6, n4)) : (i3(n4), t6._writableState.errorEmitted = true, _(t6, n4), P(t6, e5));
                  }(t5, r3, n3, e4, i2);
                else {
                  var o3 = B(r3) || t5.destroyed;
                  o3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || E(t5, r3), n3 ? process.nextTick(M, t5, r3, o3, i2) : M(t5, r3, o3, i2);
                }
              }(e3, t4);
            }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== t3.emitClose, this.autoDestroy = !!t3.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n2(this);
          }
          function A(t3) {
            var e3 = this instanceof (i = i || r2(62910));
            if (!e3 && !o.call(A, this))
              return new A(t3);
            this._writableState = new S(t3, this, e3), this.writable = true, t3 && ("function" == typeof t3.write && (this._write = t3.write), "function" == typeof t3.writev && (this._writev = t3.writev), "function" == typeof t3.destroy && (this._destroy = t3.destroy), "function" == typeof t3.final && (this._final = t3.final)), a.call(this);
          }
          function x(t3, e3, r3, n3, i2, o2, s2) {
            e3.writelen = n3, e3.writecb = s2, e3.writing = true, e3.sync = true, e3.destroyed ? e3.onwrite(new m("write")) : r3 ? t3._writev(i2, e3.onwrite) : t3._write(i2, o2, e3.onwrite), e3.sync = false;
          }
          function M(t3, e3, r3, n3) {
            r3 || function(t4, e4) {
              0 === e4.length && e4.needDrain && (e4.needDrain = false, t4.emit("drain"));
            }(t3, e3), e3.pendingcb--, n3(), P(t3, e3);
          }
          function E(t3, e3) {
            e3.bufferProcessing = true;
            var r3 = e3.bufferedRequest;
            if (t3._writev && r3 && r3.next) {
              var i2 = e3.bufferedRequestCount, o2 = new Array(i2), s2 = e3.corkedRequestsFree;
              s2.entry = r3;
              for (var a2 = 0, h2 = true; r3; )
                o2[a2] = r3, r3.isBuf || (h2 = false), r3 = r3.next, a2 += 1;
              o2.allBuffers = h2, x(t3, e3, true, e3.length, o2, "", s2.finish), e3.pendingcb++, e3.lastBufferedRequest = null, s2.next ? (e3.corkedRequestsFree = s2.next, s2.next = null) : e3.corkedRequestsFree = new n2(e3), e3.bufferedRequestCount = 0;
            } else {
              for (; r3; ) {
                var f2 = r3.chunk, u2 = r3.encoding, c2 = r3.callback;
                if (x(t3, e3, false, e3.objectMode ? 1 : f2.length, f2, u2, c2), r3 = r3.next, e3.bufferedRequestCount--, e3.writing)
                  break;
              }
              null === r3 && (e3.lastBufferedRequest = null);
            }
            e3.bufferedRequest = r3, e3.bufferProcessing = false;
          }
          function B(t3) {
            return t3.ending && 0 === t3.length && null === t3.bufferedRequest && !t3.finished && !t3.writing;
          }
          function I(t3, e3) {
            t3._final(function(r3) {
              e3.pendingcb--, r3 && _(t3, r3), e3.prefinished = true, t3.emit("prefinish"), P(t3, e3);
            });
          }
          function P(t3, e3) {
            var r3 = B(e3);
            if (r3 && (function(t4, e4) {
              e4.prefinished || e4.finalCalled || ("function" != typeof t4._final || e4.destroyed ? (e4.prefinished = true, t4.emit("prefinish")) : (e4.pendingcb++, e4.finalCalled = true, process.nextTick(I, t4, e4)));
            }(t3, e3), 0 === e3.pendingcb && (e3.finished = true, t3.emit("finish"), e3.autoDestroy))) {
              var n3 = t3._readableState;
              (!n3 || n3.autoDestroy && n3.endEmitted) && t3.destroy();
            }
            return r3;
          }
          r2(35717)(A, a), S.prototype.getBuffer = function() {
            for (var t3 = this.bufferedRequest, e3 = []; t3; )
              e3.push(t3), t3 = t3.next;
            return e3;
          }, function() {
            try {
              Object.defineProperty(S.prototype, "buffer", { get: s.deprecate(function() {
                return this.getBuffer();
              }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
            } catch (t3) {
            }
          }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (o = Function.prototype[Symbol.hasInstance], Object.defineProperty(A, Symbol.hasInstance, { value: function(t3) {
            return !!o.call(this, t3) || this === A && t3 && t3._writableState instanceof S;
          } })) : o = function(t3) {
            return t3 instanceof this;
          }, A.prototype.pipe = function() {
            _(this, new y());
          }, A.prototype.write = function(t3, e3, r3) {
            var n3, i2 = this._writableState, o2 = false, s2 = !i2.objectMode && (n3 = t3, h.isBuffer(n3) || n3 instanceof f);
            return s2 && !h.isBuffer(t3) && (t3 = function(t4) {
              return h.from(t4);
            }(t3)), "function" == typeof e3 && (r3 = e3, e3 = null), s2 ? e3 = "buffer" : e3 || (e3 = i2.defaultEncoding), "function" != typeof r3 && (r3 = k), i2.ending ? function(t4, e4) {
              var r4 = new b();
              _(t4, r4), process.nextTick(e4, r4);
            }(this, r3) : (s2 || function(t4, e4, r4, n4) {
              var i3;
              return null === r4 ? i3 = new v() : "string" == typeof r4 || e4.objectMode || (i3 = new l("chunk", ["string", "Buffer"], r4)), !i3 || (_(t4, i3), process.nextTick(n4, i3), false);
            }(this, i2, t3, r3)) && (i2.pendingcb++, o2 = function(t4, e4, r4, n4, i3, o3) {
              if (!r4) {
                var s3 = function(t5, e5, r5) {
                  return t5.objectMode || false === t5.decodeStrings || "string" != typeof e5 || (e5 = h.from(e5, r5)), e5;
                }(e4, n4, i3);
                n4 !== s3 && (r4 = true, i3 = "buffer", n4 = s3);
              }
              var a2 = e4.objectMode ? 1 : n4.length;
              e4.length += a2;
              var f2 = e4.length < e4.highWaterMark;
              if (f2 || (e4.needDrain = true), e4.writing || e4.corked) {
                var u2 = e4.lastBufferedRequest;
                e4.lastBufferedRequest = { chunk: n4, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = e4.lastBufferedRequest : e4.bufferedRequest = e4.lastBufferedRequest, e4.bufferedRequestCount += 1;
              } else
                x(t4, e4, false, a2, n4, i3, o3);
              return f2;
            }(this, i2, s2, t3, e3, r3)), o2;
          }, A.prototype.cork = function() {
            this._writableState.corked++;
          }, A.prototype.uncork = function() {
            var t3 = this._writableState;
            t3.corked && (t3.corked--, t3.writing || t3.corked || t3.bufferProcessing || !t3.bufferedRequest || E(this, t3));
          }, A.prototype.setDefaultEncoding = function(t3) {
            if ("string" == typeof t3 && (t3 = t3.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t3 + "").toLowerCase()) > -1))
              throw new w(t3);
            return this._writableState.defaultEncoding = t3, this;
          }, Object.defineProperty(A.prototype, "writableBuffer", { enumerable: false, get: function() {
            return this._writableState && this._writableState.getBuffer();
          } }), Object.defineProperty(A.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
            return this._writableState.highWaterMark;
          } }), A.prototype._write = function(t3, e3, r3) {
            r3(new p("_write()"));
          }, A.prototype._writev = null, A.prototype.end = function(t3, e3, r3) {
            var n3 = this._writableState;
            return "function" == typeof t3 ? (r3 = t3, t3 = null, e3 = null) : "function" == typeof e3 && (r3 = e3, e3 = null), null != t3 && this.write(t3, e3), n3.corked && (n3.corked = 1, this.uncork()), n3.ending || function(t4, e4, r4) {
              e4.ending = true, P(t4, e4), r4 && (e4.finished ? process.nextTick(r4) : t4.once("finish", r4)), e4.ended = true, t4.writable = false;
            }(this, n3, r3), this;
          }, Object.defineProperty(A.prototype, "writableLength", { enumerable: false, get: function() {
            return this._writableState.length;
          } }), Object.defineProperty(A.prototype, "destroyed", { enumerable: false, get: function() {
            return void 0 !== this._writableState && this._writableState.destroyed;
          }, set: function(t3) {
            this._writableState && (this._writableState.destroyed = t3);
          } }), A.prototype.destroy = u.destroy, A.prototype._undestroy = u.undestroy, A.prototype._destroy = function(t3, e3) {
            e3(t3);
          };
        }, 30527: (t2, e2, r2) => {
          "use strict";
          var n2;
          function i(t3, e3, r3) {
            return e3 in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
          }
          var o = r2(28640), s = Symbol("lastResolve"), a = Symbol("lastReject"), h = Symbol("error"), f = Symbol("ended"), u = Symbol("lastPromise"), c = Symbol("handlePromise"), d = Symbol("stream");
          function l(t3, e3) {
            return { value: t3, done: e3 };
          }
          function p(t3) {
            var e3 = t3[s];
            if (null !== e3) {
              var r3 = t3[d].read();
              null !== r3 && (t3[u] = null, t3[s] = null, t3[a] = null, e3(l(r3, false)));
            }
          }
          function g(t3) {
            process.nextTick(p, t3);
          }
          var y = Object.getPrototypeOf(function() {
          }), m = Object.setPrototypeOf((i(n2 = { get stream() {
            return this[d];
          }, next: function() {
            var t3 = this, e3 = this[h];
            if (null !== e3)
              return Promise.reject(e3);
            if (this[f])
              return Promise.resolve(l(void 0, true));
            if (this[d].destroyed)
              return new Promise(function(e4, r4) {
                process.nextTick(function() {
                  t3[h] ? r4(t3[h]) : e4(l(void 0, true));
                });
              });
            var r3, n3 = this[u];
            if (n3)
              r3 = new Promise(function(t4, e4) {
                return function(r4, n4) {
                  t4.then(function() {
                    e4[f] ? r4(l(void 0, true)) : e4[c](r4, n4);
                  }, n4);
                };
              }(n3, this));
            else {
              var i2 = this[d].read();
              if (null !== i2)
                return Promise.resolve(l(i2, false));
              r3 = new Promise(this[c]);
            }
            return this[u] = r3, r3;
          } }, Symbol.asyncIterator, function() {
            return this;
          }), i(n2, "return", function() {
            var t3 = this;
            return new Promise(function(e3, r3) {
              t3[d].destroy(null, function(t4) {
                t4 ? r3(t4) : e3(l(void 0, true));
              });
            });
          }), n2), y);
          t2.exports = function(t3) {
            var e3, r3 = Object.create(m, (i(e3 = {}, d, { value: t3, writable: true }), i(e3, s, { value: null, writable: true }), i(e3, a, { value: null, writable: true }), i(e3, h, { value: null, writable: true }), i(e3, f, { value: t3._readableState.endEmitted, writable: true }), i(e3, c, { value: function(t4, e4) {
              var n3 = r3[d].read();
              n3 ? (r3[u] = null, r3[s] = null, r3[a] = null, t4(l(n3, false))) : (r3[s] = t4, r3[a] = e4);
            }, writable: true }), e3));
            return r3[u] = null, o(t3, function(t4) {
              if (t4 && "ERR_STREAM_PREMATURE_CLOSE" !== t4.code) {
                var e4 = r3[a];
                return null !== e4 && (r3[u] = null, r3[s] = null, r3[a] = null, e4(t4)), void (r3[h] = t4);
              }
              var n3 = r3[s];
              null !== n3 && (r3[u] = null, r3[s] = null, r3[a] = null, n3(l(void 0, true))), r3[f] = true;
            }), t3.on("readable", g.bind(null, r3)), r3;
          };
        }, 98354: (t2, e2, r2) => {
          "use strict";
          function n2(t3, e3) {
            var r3 = Object.keys(t3);
            if (Object.getOwnPropertySymbols) {
              var n3 = Object.getOwnPropertySymbols(t3);
              e3 && (n3 = n3.filter(function(e4) {
                return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
              })), r3.push.apply(r3, n3);
            }
            return r3;
          }
          function i(t3, e3, r3) {
            return e3 in t3 ? Object.defineProperty(t3, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t3[e3] = r3, t3;
          }
          function o(t3, e3) {
            for (var r3 = 0; r3 < e3.length; r3++) {
              var n3 = e3[r3];
              n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(t3, n3.key, n3);
            }
          }
          var s = r2(48764).Buffer, a = r2(69386).inspect, h = a && a.custom || "inspect";
          t2.exports = function() {
            function t3() {
              !function(t4, e4) {
                if (!(t4 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t3), this.head = null, this.tail = null, this.length = 0;
            }
            var e3, r3;
            return e3 = t3, r3 = [{ key: "push", value: function(t4) {
              var e4 = { data: t4, next: null };
              this.length > 0 ? this.tail.next = e4 : this.head = e4, this.tail = e4, ++this.length;
            } }, { key: "unshift", value: function(t4) {
              var e4 = { data: t4, next: this.head };
              0 === this.length && (this.tail = e4), this.head = e4, ++this.length;
            } }, { key: "shift", value: function() {
              if (0 !== this.length) {
                var t4 = this.head.data;
                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t4;
              }
            } }, { key: "clear", value: function() {
              this.head = this.tail = null, this.length = 0;
            } }, { key: "join", value: function(t4) {
              if (0 === this.length)
                return "";
              for (var e4 = this.head, r4 = "" + e4.data; e4 = e4.next; )
                r4 += t4 + e4.data;
              return r4;
            } }, { key: "concat", value: function(t4) {
              if (0 === this.length)
                return s.alloc(0);
              for (var e4, r4, n3, i2 = s.allocUnsafe(t4 >>> 0), o2 = this.head, a2 = 0; o2; )
                e4 = o2.data, r4 = i2, n3 = a2, s.prototype.copy.call(e4, r4, n3), a2 += o2.data.length, o2 = o2.next;
              return i2;
            } }, { key: "consume", value: function(t4, e4) {
              var r4;
              return t4 < this.head.data.length ? (r4 = this.head.data.slice(0, t4), this.head.data = this.head.data.slice(t4)) : r4 = t4 === this.head.data.length ? this.shift() : e4 ? this._getString(t4) : this._getBuffer(t4), r4;
            } }, { key: "first", value: function() {
              return this.head.data;
            } }, { key: "_getString", value: function(t4) {
              var e4 = this.head, r4 = 1, n3 = e4.data;
              for (t4 -= n3.length; e4 = e4.next; ) {
                var i2 = e4.data, o2 = t4 > i2.length ? i2.length : t4;
                if (o2 === i2.length ? n3 += i2 : n3 += i2.slice(0, t4), 0 == (t4 -= o2)) {
                  o2 === i2.length ? (++r4, e4.next ? this.head = e4.next : this.head = this.tail = null) : (this.head = e4, e4.data = i2.slice(o2));
                  break;
                }
                ++r4;
              }
              return this.length -= r4, n3;
            } }, { key: "_getBuffer", value: function(t4) {
              var e4 = s.allocUnsafe(t4), r4 = this.head, n3 = 1;
              for (r4.data.copy(e4), t4 -= r4.data.length; r4 = r4.next; ) {
                var i2 = r4.data, o2 = t4 > i2.length ? i2.length : t4;
                if (i2.copy(e4, e4.length - t4, 0, o2), 0 == (t4 -= o2)) {
                  o2 === i2.length ? (++n3, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
                  break;
                }
                ++n3;
              }
              return this.length -= n3, e4;
            } }, { key: h, value: function(t4, e4) {
              return a(this, function(t5) {
                for (var e5 = 1; e5 < arguments.length; e5++) {
                  var r4 = null != arguments[e5] ? arguments[e5] : {};
                  e5 % 2 ? n2(Object(r4), true).forEach(function(e6) {
                    i(t5, e6, r4[e6]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(r4)) : n2(Object(r4)).forEach(function(e6) {
                    Object.defineProperty(t5, e6, Object.getOwnPropertyDescriptor(r4, e6));
                  });
                }
                return t5;
              }({}, e4, { depth: 0, customInspect: false }));
            } }], r3 && o(e3.prototype, r3), t3;
          }();
        }, 35072: (t2) => {
          "use strict";
          function e2(t3, e3) {
            n2(t3, e3), r2(t3);
          }
          function r2(t3) {
            t3._writableState && !t3._writableState.emitClose || t3._readableState && !t3._readableState.emitClose || t3.emit("close");
          }
          function n2(t3, e3) {
            t3.emit("error", e3);
          }
          t2.exports = { destroy: function(t3, i) {
            var o = this, s = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
            return s || a ? (i ? i(t3) : t3 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(n2, this, t3)) : process.nextTick(n2, this, t3)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t3 || null, function(t4) {
              !i && t4 ? o._writableState ? o._writableState.errorEmitted ? process.nextTick(r2, o) : (o._writableState.errorEmitted = true, process.nextTick(e2, o, t4)) : process.nextTick(e2, o, t4) : i ? (process.nextTick(r2, o), i(t4)) : process.nextTick(r2, o);
            }), this);
          }, undestroy: function() {
            this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
          }, errorOrDestroy: function(t3, e3) {
            var r3 = t3._readableState, n3 = t3._writableState;
            r3 && r3.autoDestroy || n3 && n3.autoDestroy ? t3.destroy(e3) : t3.emit("error", e3);
          } };
        }, 28640: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(9786).q.ERR_STREAM_PREMATURE_CLOSE;
          function i() {
          }
          t2.exports = function t3(e3, r3, o) {
            if ("function" == typeof r3)
              return t3(e3, null, r3);
            r3 || (r3 = {}), o = function(t4) {
              var e4 = false;
              return function() {
                if (!e4) {
                  e4 = true;
                  for (var r4 = arguments.length, n3 = new Array(r4), i2 = 0; i2 < r4; i2++)
                    n3[i2] = arguments[i2];
                  t4.apply(this, n3);
                }
              };
            }(o || i);
            var s = r3.readable || false !== r3.readable && e3.readable, a = r3.writable || false !== r3.writable && e3.writable, h = function() {
              e3.writable || u();
            }, f = e3._writableState && e3._writableState.finished, u = function() {
              a = false, f = true, s || o.call(e3);
            }, c = e3._readableState && e3._readableState.endEmitted, d = function() {
              s = false, c = true, a || o.call(e3);
            }, l = function(t4) {
              o.call(e3, t4);
            }, p = function() {
              var t4;
              return s && !c ? (e3._readableState && e3._readableState.ended || (t4 = new n2()), o.call(e3, t4)) : a && !f ? (e3._writableState && e3._writableState.ended || (t4 = new n2()), o.call(e3, t4)) : void 0;
            }, g = function() {
              e3.req.on("finish", u);
            };
            return function(t4) {
              return t4.setHeader && "function" == typeof t4.abort;
            }(e3) ? (e3.on("complete", u), e3.on("abort", p), e3.req ? g() : e3.on("request", g)) : a && !e3._writableState && (e3.on("end", h), e3.on("close", h)), e3.on("end", d), e3.on("finish", u), false !== r3.error && e3.on("error", l), e3.on("close", p), function() {
              e3.removeListener("complete", u), e3.removeListener("abort", p), e3.removeListener("request", g), e3.req && e3.req.removeListener("finish", u), e3.removeListener("end", h), e3.removeListener("close", h), e3.removeListener("finish", u), e3.removeListener("end", d), e3.removeListener("error", l), e3.removeListener("close", p);
            };
          };
        }, 5327: (t2) => {
          t2.exports = function() {
            throw new Error("Readable.from is not available in the browser");
          };
        }, 64218: (t2, e2, r2) => {
          "use strict";
          var n2, i = r2(9786).q, o = i.ERR_MISSING_ARGS, s = i.ERR_STREAM_DESTROYED;
          function a(t3) {
            if (t3)
              throw t3;
          }
          function h(t3, e3, i2, o2) {
            o2 = function(t4) {
              var e4 = false;
              return function() {
                e4 || (e4 = true, t4.apply(void 0, arguments));
              };
            }(o2);
            var a2 = false;
            t3.on("close", function() {
              a2 = true;
            }), void 0 === n2 && (n2 = r2(28640)), n2(t3, { readable: e3, writable: i2 }, function(t4) {
              if (t4)
                return o2(t4);
              a2 = true, o2();
            });
            var h2 = false;
            return function(e4) {
              if (!a2 && !h2)
                return h2 = true, function(t4) {
                  return t4.setHeader && "function" == typeof t4.abort;
                }(t3) ? t3.abort() : "function" == typeof t3.destroy ? t3.destroy() : void o2(e4 || new s("pipe"));
            };
          }
          function f(t3) {
            t3();
          }
          function u(t3, e3) {
            return t3.pipe(e3);
          }
          function c(t3) {
            return t3.length ? "function" != typeof t3[t3.length - 1] ? a : t3.pop() : a;
          }
          t2.exports = function() {
            for (var t3 = arguments.length, e3 = new Array(t3), r3 = 0; r3 < t3; r3++)
              e3[r3] = arguments[r3];
            var n3, i2 = c(e3);
            if (Array.isArray(e3[0]) && (e3 = e3[0]), e3.length < 2)
              throw new o("streams");
            var s2 = e3.map(function(t4, r4) {
              var o2 = r4 < e3.length - 1;
              return h(t4, o2, r4 > 0, function(t5) {
                n3 || (n3 = t5), t5 && s2.forEach(f), o2 || (s2.forEach(f), i2(n3));
              });
            });
            return e3.reduce(u);
          };
        }, 31222: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(9786).q.ERR_INVALID_OPT_VALUE;
          t2.exports = { getHighWaterMark: function(t3, e3, r3, i) {
            var o = function(t4, e4, r4) {
              return null != t4.highWaterMark ? t4.highWaterMark : e4 ? t4[r4] : null;
            }(e3, i, r3);
            if (null != o) {
              if (!isFinite(o) || Math.floor(o) !== o || o < 0)
                throw new n2(i ? r3 : "highWaterMark", o);
              return Math.floor(o);
            }
            return t3.objectMode ? 16 : 16384;
          } };
        }, 50677: (t2, e2, r2) => {
          t2.exports = r2(17187).EventEmitter;
        }, 70326: (t2, e2, r2) => {
          (e2 = t2.exports = r2(45789)).Stream = e2, e2.Readable = e2, e2.Writable = r2(70469), e2.Duplex = r2(62910), e2.Transform = r2(70421), e2.PassThrough = r2(58994), e2.finished = r2(28640), e2.pipeline = r2(64218);
        }, 33715: (t2, e2, r2) => {
          var n2 = e2;
          n2.utils = r2(26436), n2.common = r2(95772), n2.sha = r2(89041), n2.ripemd = r2(12949), n2.hmac = r2(52344), n2.sha1 = n2.sha.sha1, n2.sha256 = n2.sha.sha256, n2.sha224 = n2.sha.sha224, n2.sha384 = n2.sha.sha384, n2.sha512 = n2.sha.sha512, n2.ripemd160 = n2.ripemd.ripemd160;
        }, 95772: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(79746);
          function o() {
            this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
          }
          e2.BlockHash = o, o.prototype.update = function(t3, e3) {
            if (t3 = n2.toArray(t3, e3), this.pending ? this.pending = this.pending.concat(t3) : this.pending = t3, this.pendingTotal += t3.length, this.pending.length >= this._delta8) {
              var r3 = (t3 = this.pending).length % this._delta8;
              this.pending = t3.slice(t3.length - r3, t3.length), 0 === this.pending.length && (this.pending = null), t3 = n2.join32(t3, 0, t3.length - r3, this.endian);
              for (var i2 = 0; i2 < t3.length; i2 += this._delta32)
                this._update(t3, i2, i2 + this._delta32);
            }
            return this;
          }, o.prototype.digest = function(t3) {
            return this.update(this._pad()), i(null === this.pending), this._digest(t3);
          }, o.prototype._pad = function() {
            var t3 = this.pendingTotal, e3 = this._delta8, r3 = e3 - (t3 + this.padLength) % e3, n3 = new Array(r3 + this.padLength);
            n3[0] = 128;
            for (var i2 = 1; i2 < r3; i2++)
              n3[i2] = 0;
            if (t3 <<= 3, "big" === this.endian) {
              for (var o2 = 8; o2 < this.padLength; o2++)
                n3[i2++] = 0;
              n3[i2++] = 0, n3[i2++] = 0, n3[i2++] = 0, n3[i2++] = 0, n3[i2++] = t3 >>> 24 & 255, n3[i2++] = t3 >>> 16 & 255, n3[i2++] = t3 >>> 8 & 255, n3[i2++] = 255 & t3;
            } else
              for (n3[i2++] = 255 & t3, n3[i2++] = t3 >>> 8 & 255, n3[i2++] = t3 >>> 16 & 255, n3[i2++] = t3 >>> 24 & 255, n3[i2++] = 0, n3[i2++] = 0, n3[i2++] = 0, n3[i2++] = 0, o2 = 8; o2 < this.padLength; o2++)
                n3[i2++] = 0;
            return n3;
          };
        }, 52344: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(79746);
          function o(t3, e3, r3) {
            if (!(this instanceof o))
              return new o(t3, e3, r3);
            this.Hash = t3, this.blockSize = t3.blockSize / 8, this.outSize = t3.outSize / 8, this.inner = null, this.outer = null, this._init(n2.toArray(e3, r3));
          }
          t2.exports = o, o.prototype._init = function(t3) {
            t3.length > this.blockSize && (t3 = new this.Hash().update(t3).digest()), i(t3.length <= this.blockSize);
            for (var e3 = t3.length; e3 < this.blockSize; e3++)
              t3.push(0);
            for (e3 = 0; e3 < t3.length; e3++)
              t3[e3] ^= 54;
            for (this.inner = new this.Hash().update(t3), e3 = 0; e3 < t3.length; e3++)
              t3[e3] ^= 106;
            this.outer = new this.Hash().update(t3);
          }, o.prototype.update = function(t3, e3) {
            return this.inner.update(t3, e3), this;
          }, o.prototype.digest = function(t3) {
            return this.outer.update(this.inner.digest()), this.outer.digest(t3);
          };
        }, 12949: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(95772), o = n2.rotl32, s = n2.sum32, a = n2.sum32_3, h = n2.sum32_4, f = i.BlockHash;
          function u() {
            if (!(this instanceof u))
              return new u();
            f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
          }
          function c(t3, e3, r3, n3) {
            return t3 <= 15 ? e3 ^ r3 ^ n3 : t3 <= 31 ? e3 & r3 | ~e3 & n3 : t3 <= 47 ? (e3 | ~r3) ^ n3 : t3 <= 63 ? e3 & n3 | r3 & ~n3 : e3 ^ (r3 | ~n3);
          }
          function d(t3) {
            return t3 <= 15 ? 0 : t3 <= 31 ? 1518500249 : t3 <= 47 ? 1859775393 : t3 <= 63 ? 2400959708 : 2840853838;
          }
          function l(t3) {
            return t3 <= 15 ? 1352829926 : t3 <= 31 ? 1548603684 : t3 <= 47 ? 1836072691 : t3 <= 63 ? 2053994217 : 0;
          }
          n2.inherits(u, f), e2.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(t3, e3) {
            for (var r3 = this.h[0], n3 = this.h[1], i2 = this.h[2], f2 = this.h[3], u2 = this.h[4], v = r3, b = n3, w = i2, _ = f2, k = u2, S = 0; S < 80; S++) {
              var A = s(o(h(r3, c(S, n3, i2, f2), t3[p[S] + e3], d(S)), y[S]), u2);
              r3 = u2, u2 = f2, f2 = o(i2, 10), i2 = n3, n3 = A, A = s(o(h(v, c(79 - S, b, w, _), t3[g[S] + e3], l(S)), m[S]), k), v = k, k = _, _ = o(w, 10), w = b, b = A;
            }
            A = a(this.h[1], i2, _), this.h[1] = a(this.h[2], f2, k), this.h[2] = a(this.h[3], u2, v), this.h[3] = a(this.h[4], r3, b), this.h[4] = a(this.h[0], n3, w), this.h[0] = A;
          }, u.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h, "little") : n2.split32(this.h, "little");
          };
          var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], g = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], y = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
        }, 89041: (t2, e2, r2) => {
          "use strict";
          e2.sha1 = r2(84761), e2.sha224 = r2(10799), e2.sha256 = r2(89344), e2.sha384 = r2(80772), e2.sha512 = r2(45900);
        }, 84761: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(95772), o = r2(37038), s = n2.rotl32, a = n2.sum32, h = n2.sum32_5, f = o.ft_1, u = i.BlockHash, c = [1518500249, 1859775393, 2400959708, 3395469782];
          function d() {
            if (!(this instanceof d))
              return new d();
            u.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
          }
          n2.inherits(d, u), t2.exports = d, d.blockSize = 512, d.outSize = 160, d.hmacStrength = 80, d.padLength = 64, d.prototype._update = function(t3, e3) {
            for (var r3 = this.W, n3 = 0; n3 < 16; n3++)
              r3[n3] = t3[e3 + n3];
            for (; n3 < r3.length; n3++)
              r3[n3] = s(r3[n3 - 3] ^ r3[n3 - 8] ^ r3[n3 - 14] ^ r3[n3 - 16], 1);
            var i2 = this.h[0], o2 = this.h[1], u2 = this.h[2], d2 = this.h[3], l = this.h[4];
            for (n3 = 0; n3 < r3.length; n3++) {
              var p = ~~(n3 / 20), g = h(s(i2, 5), f(p, o2, u2, d2), l, r3[n3], c[p]);
              l = d2, d2 = u2, u2 = s(o2, 30), o2 = i2, i2 = g;
            }
            this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], o2), this.h[2] = a(this.h[2], u2), this.h[3] = a(this.h[3], d2), this.h[4] = a(this.h[4], l);
          }, d.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h, "big") : n2.split32(this.h, "big");
          };
        }, 10799: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(89344);
          function o() {
            if (!(this instanceof o))
              return new o();
            i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
          }
          n2.inherits(o, i), t2.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h.slice(0, 7), "big") : n2.split32(this.h.slice(0, 7), "big");
          };
        }, 89344: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(95772), o = r2(37038), s = r2(79746), a = n2.sum32, h = n2.sum32_4, f = n2.sum32_5, u = o.ch32, c = o.maj32, d = o.s0_256, l = o.s1_256, p = o.g0_256, g = o.g1_256, y = i.BlockHash, m = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
          function v() {
            if (!(this instanceof v))
              return new v();
            y.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = m, this.W = new Array(64);
          }
          n2.inherits(v, y), t2.exports = v, v.blockSize = 512, v.outSize = 256, v.hmacStrength = 192, v.padLength = 64, v.prototype._update = function(t3, e3) {
            for (var r3 = this.W, n3 = 0; n3 < 16; n3++)
              r3[n3] = t3[e3 + n3];
            for (; n3 < r3.length; n3++)
              r3[n3] = h(g(r3[n3 - 2]), r3[n3 - 7], p(r3[n3 - 15]), r3[n3 - 16]);
            var i2 = this.h[0], o2 = this.h[1], y2 = this.h[2], m2 = this.h[3], v2 = this.h[4], b = this.h[5], w = this.h[6], _ = this.h[7];
            for (s(this.k.length === r3.length), n3 = 0; n3 < r3.length; n3++) {
              var k = f(_, l(v2), u(v2, b, w), this.k[n3], r3[n3]), S = a(d(i2), c(i2, o2, y2));
              _ = w, w = b, b = v2, v2 = a(m2, k), m2 = y2, y2 = o2, o2 = i2, i2 = a(k, S);
            }
            this.h[0] = a(this.h[0], i2), this.h[1] = a(this.h[1], o2), this.h[2] = a(this.h[2], y2), this.h[3] = a(this.h[3], m2), this.h[4] = a(this.h[4], v2), this.h[5] = a(this.h[5], b), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
          }, v.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h, "big") : n2.split32(this.h, "big");
          };
        }, 80772: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(45900);
          function o() {
            if (!(this instanceof o))
              return new o();
            i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
          }
          n2.inherits(o, i), t2.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h.slice(0, 12), "big") : n2.split32(this.h.slice(0, 12), "big");
          };
        }, 45900: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436), i = r2(95772), o = r2(79746), s = n2.rotr64_hi, a = n2.rotr64_lo, h = n2.shr64_hi, f = n2.shr64_lo, u = n2.sum64, c = n2.sum64_hi, d = n2.sum64_lo, l = n2.sum64_4_hi, p = n2.sum64_4_lo, g = n2.sum64_5_hi, y = n2.sum64_5_lo, m = i.BlockHash, v = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
          function b() {
            if (!(this instanceof b))
              return new b();
            m.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = v, this.W = new Array(160);
          }
          function w(t3, e3, r3, n3, i2) {
            var o2 = t3 & r3 ^ ~t3 & i2;
            return o2 < 0 && (o2 += 4294967296), o2;
          }
          function _(t3, e3, r3, n3, i2, o2) {
            var s2 = e3 & n3 ^ ~e3 & o2;
            return s2 < 0 && (s2 += 4294967296), s2;
          }
          function k(t3, e3, r3, n3, i2) {
            var o2 = t3 & r3 ^ t3 & i2 ^ r3 & i2;
            return o2 < 0 && (o2 += 4294967296), o2;
          }
          function S(t3, e3, r3, n3, i2, o2) {
            var s2 = e3 & n3 ^ e3 & o2 ^ n3 & o2;
            return s2 < 0 && (s2 += 4294967296), s2;
          }
          function A(t3, e3) {
            var r3 = s(t3, e3, 28) ^ s(e3, t3, 2) ^ s(e3, t3, 7);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          function x(t3, e3) {
            var r3 = a(t3, e3, 28) ^ a(e3, t3, 2) ^ a(e3, t3, 7);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          function M(t3, e3) {
            var r3 = a(t3, e3, 14) ^ a(t3, e3, 18) ^ a(e3, t3, 9);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          function E(t3, e3) {
            var r3 = s(t3, e3, 1) ^ s(t3, e3, 8) ^ h(t3, e3, 7);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          function B(t3, e3) {
            var r3 = a(t3, e3, 1) ^ a(t3, e3, 8) ^ f(t3, e3, 7);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          function I(t3, e3) {
            var r3 = a(t3, e3, 19) ^ a(e3, t3, 29) ^ f(t3, e3, 6);
            return r3 < 0 && (r3 += 4294967296), r3;
          }
          n2.inherits(b, m), t2.exports = b, b.blockSize = 1024, b.outSize = 512, b.hmacStrength = 192, b.padLength = 128, b.prototype._prepareBlock = function(t3, e3) {
            for (var r3 = this.W, n3 = 0; n3 < 32; n3++)
              r3[n3] = t3[e3 + n3];
            for (; n3 < r3.length; n3 += 2) {
              var i2 = (y2 = r3[n3 - 4], m2 = r3[n3 - 3], v2 = void 0, (v2 = s(y2, m2, 19) ^ s(m2, y2, 29) ^ h(y2, m2, 6)) < 0 && (v2 += 4294967296), v2), o2 = I(r3[n3 - 4], r3[n3 - 3]), a2 = r3[n3 - 14], f2 = r3[n3 - 13], u2 = E(r3[n3 - 30], r3[n3 - 29]), c2 = B(r3[n3 - 30], r3[n3 - 29]), d2 = r3[n3 - 32], g2 = r3[n3 - 31];
              r3[n3] = l(i2, o2, a2, f2, u2, c2, d2, g2), r3[n3 + 1] = p(i2, o2, a2, f2, u2, c2, d2, g2);
            }
            var y2, m2, v2;
          }, b.prototype._update = function(t3, e3) {
            this._prepareBlock(t3, e3);
            var r3, n3, i2, a2 = this.W, h2 = this.h[0], f2 = this.h[1], l2 = this.h[2], p2 = this.h[3], m2 = this.h[4], v2 = this.h[5], b2 = this.h[6], E2 = this.h[7], B2 = this.h[8], I2 = this.h[9], P = this.h[10], T = this.h[11], R = this.h[12], O = this.h[13], C = this.h[14], j = this.h[15];
            o(this.k.length === a2.length);
            for (var N = 0; N < a2.length; N += 2) {
              var D = C, L = j, F = (i2 = void 0, (i2 = s(r3 = B2, n3 = I2, 14) ^ s(r3, n3, 18) ^ s(n3, r3, 9)) < 0 && (i2 += 4294967296), i2), q = M(B2, I2), U = w(B2, 0, P, 0, R), V = _(0, I2, 0, T, 0, O), z = this.k[N], H = this.k[N + 1], K = a2[N], W = a2[N + 1], G = g(D, L, F, q, U, V, z, H, K, W), Y = y(D, L, F, q, U, V, z, H, K, W);
              D = A(h2, f2), L = x(h2, f2), F = k(h2, 0, l2, 0, m2), q = S(0, f2, 0, p2, 0, v2);
              var J = c(D, L, F, q), X = d(D, L, F, q);
              C = R, j = O, R = P, O = T, P = B2, T = I2, B2 = c(b2, E2, G, Y), I2 = d(E2, E2, G, Y), b2 = m2, E2 = v2, m2 = l2, v2 = p2, l2 = h2, p2 = f2, h2 = c(G, Y, J, X), f2 = d(G, Y, J, X);
            }
            u(this.h, 0, h2, f2), u(this.h, 2, l2, p2), u(this.h, 4, m2, v2), u(this.h, 6, b2, E2), u(this.h, 8, B2, I2), u(this.h, 10, P, T), u(this.h, 12, R, O), u(this.h, 14, C, j);
          }, b.prototype._digest = function(t3) {
            return "hex" === t3 ? n2.toHex32(this.h, "big") : n2.split32(this.h, "big");
          };
        }, 37038: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(26436).rotr32;
          function i(t3, e3, r3) {
            return t3 & e3 ^ ~t3 & r3;
          }
          function o(t3, e3, r3) {
            return t3 & e3 ^ t3 & r3 ^ e3 & r3;
          }
          function s(t3, e3, r3) {
            return t3 ^ e3 ^ r3;
          }
          e2.ft_1 = function(t3, e3, r3, n3) {
            return 0 === t3 ? i(e3, r3, n3) : 1 === t3 || 3 === t3 ? s(e3, r3, n3) : 2 === t3 ? o(e3, r3, n3) : void 0;
          }, e2.ch32 = i, e2.maj32 = o, e2.p32 = s, e2.s0_256 = function(t3) {
            return n2(t3, 2) ^ n2(t3, 13) ^ n2(t3, 22);
          }, e2.s1_256 = function(t3) {
            return n2(t3, 6) ^ n2(t3, 11) ^ n2(t3, 25);
          }, e2.g0_256 = function(t3) {
            return n2(t3, 7) ^ n2(t3, 18) ^ t3 >>> 3;
          }, e2.g1_256 = function(t3) {
            return n2(t3, 17) ^ n2(t3, 19) ^ t3 >>> 10;
          };
        }, 26436: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(79746), i = r2(35717);
          function o(t3, e3) {
            return 55296 == (64512 & t3.charCodeAt(e3)) && !(e3 < 0 || e3 + 1 >= t3.length) && 56320 == (64512 & t3.charCodeAt(e3 + 1));
          }
          function s(t3) {
            return (t3 >>> 24 | t3 >>> 8 & 65280 | t3 << 8 & 16711680 | (255 & t3) << 24) >>> 0;
          }
          function a(t3) {
            return 1 === t3.length ? "0" + t3 : t3;
          }
          function h(t3) {
            return 7 === t3.length ? "0" + t3 : 6 === t3.length ? "00" + t3 : 5 === t3.length ? "000" + t3 : 4 === t3.length ? "0000" + t3 : 3 === t3.length ? "00000" + t3 : 2 === t3.length ? "000000" + t3 : 1 === t3.length ? "0000000" + t3 : t3;
          }
          e2.inherits = i, e2.toArray = function(t3, e3) {
            if (Array.isArray(t3))
              return t3.slice();
            if (!t3)
              return [];
            var r3 = [];
            if ("string" == typeof t3)
              if (e3) {
                if ("hex" === e3)
                  for ((t3 = t3.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t3 = "0" + t3), i2 = 0; i2 < t3.length; i2 += 2)
                    r3.push(parseInt(t3[i2] + t3[i2 + 1], 16));
              } else
                for (var n3 = 0, i2 = 0; i2 < t3.length; i2++) {
                  var s2 = t3.charCodeAt(i2);
                  s2 < 128 ? r3[n3++] = s2 : s2 < 2048 ? (r3[n3++] = s2 >> 6 | 192, r3[n3++] = 63 & s2 | 128) : o(t3, i2) ? (s2 = 65536 + ((1023 & s2) << 10) + (1023 & t3.charCodeAt(++i2)), r3[n3++] = s2 >> 18 | 240, r3[n3++] = s2 >> 12 & 63 | 128, r3[n3++] = s2 >> 6 & 63 | 128, r3[n3++] = 63 & s2 | 128) : (r3[n3++] = s2 >> 12 | 224, r3[n3++] = s2 >> 6 & 63 | 128, r3[n3++] = 63 & s2 | 128);
                }
            else
              for (i2 = 0; i2 < t3.length; i2++)
                r3[i2] = 0 | t3[i2];
            return r3;
          }, e2.toHex = function(t3) {
            for (var e3 = "", r3 = 0; r3 < t3.length; r3++)
              e3 += a(t3[r3].toString(16));
            return e3;
          }, e2.htonl = s, e2.toHex32 = function(t3, e3) {
            for (var r3 = "", n3 = 0; n3 < t3.length; n3++) {
              var i2 = t3[n3];
              "little" === e3 && (i2 = s(i2)), r3 += h(i2.toString(16));
            }
            return r3;
          }, e2.zero2 = a, e2.zero8 = h, e2.join32 = function(t3, e3, r3, i2) {
            var o2 = r3 - e3;
            n2(o2 % 4 == 0);
            for (var s2 = new Array(o2 / 4), a2 = 0, h2 = e3; a2 < s2.length; a2++, h2 += 4) {
              var f;
              f = "big" === i2 ? t3[h2] << 24 | t3[h2 + 1] << 16 | t3[h2 + 2] << 8 | t3[h2 + 3] : t3[h2 + 3] << 24 | t3[h2 + 2] << 16 | t3[h2 + 1] << 8 | t3[h2], s2[a2] = f >>> 0;
            }
            return s2;
          }, e2.split32 = function(t3, e3) {
            for (var r3 = new Array(4 * t3.length), n3 = 0, i2 = 0; n3 < t3.length; n3++, i2 += 4) {
              var o2 = t3[n3];
              "big" === e3 ? (r3[i2] = o2 >>> 24, r3[i2 + 1] = o2 >>> 16 & 255, r3[i2 + 2] = o2 >>> 8 & 255, r3[i2 + 3] = 255 & o2) : (r3[i2 + 3] = o2 >>> 24, r3[i2 + 2] = o2 >>> 16 & 255, r3[i2 + 1] = o2 >>> 8 & 255, r3[i2] = 255 & o2);
            }
            return r3;
          }, e2.rotr32 = function(t3, e3) {
            return t3 >>> e3 | t3 << 32 - e3;
          }, e2.rotl32 = function(t3, e3) {
            return t3 << e3 | t3 >>> 32 - e3;
          }, e2.sum32 = function(t3, e3) {
            return t3 + e3 >>> 0;
          }, e2.sum32_3 = function(t3, e3, r3) {
            return t3 + e3 + r3 >>> 0;
          }, e2.sum32_4 = function(t3, e3, r3, n3) {
            return t3 + e3 + r3 + n3 >>> 0;
          }, e2.sum32_5 = function(t3, e3, r3, n3, i2) {
            return t3 + e3 + r3 + n3 + i2 >>> 0;
          }, e2.sum64 = function(t3, e3, r3, n3) {
            var i2 = t3[e3], o2 = n3 + t3[e3 + 1] >>> 0, s2 = (o2 < n3 ? 1 : 0) + r3 + i2;
            t3[e3] = s2 >>> 0, t3[e3 + 1] = o2;
          }, e2.sum64_hi = function(t3, e3, r3, n3) {
            return (e3 + n3 >>> 0 < e3 ? 1 : 0) + t3 + r3 >>> 0;
          }, e2.sum64_lo = function(t3, e3, r3, n3) {
            return e3 + n3 >>> 0;
          }, e2.sum64_4_hi = function(t3, e3, r3, n3, i2, o2, s2, a2) {
            var h2 = 0, f = e3;
            return h2 += (f = f + n3 >>> 0) < e3 ? 1 : 0, h2 += (f = f + o2 >>> 0) < o2 ? 1 : 0, t3 + r3 + i2 + s2 + (h2 += (f = f + a2 >>> 0) < a2 ? 1 : 0) >>> 0;
          }, e2.sum64_4_lo = function(t3, e3, r3, n3, i2, o2, s2, a2) {
            return e3 + n3 + o2 + a2 >>> 0;
          }, e2.sum64_5_hi = function(t3, e3, r3, n3, i2, o2, s2, a2, h2, f) {
            var u = 0, c = e3;
            return u += (c = c + n3 >>> 0) < e3 ? 1 : 0, u += (c = c + o2 >>> 0) < o2 ? 1 : 0, u += (c = c + a2 >>> 0) < a2 ? 1 : 0, t3 + r3 + i2 + s2 + h2 + (u += (c = c + f >>> 0) < f ? 1 : 0) >>> 0;
          }, e2.sum64_5_lo = function(t3, e3, r3, n3, i2, o2, s2, a2, h2, f) {
            return e3 + n3 + o2 + a2 + f >>> 0;
          }, e2.rotr64_hi = function(t3, e3, r3) {
            return (e3 << 32 - r3 | t3 >>> r3) >>> 0;
          }, e2.rotr64_lo = function(t3, e3, r3) {
            return (t3 << 32 - r3 | e3 >>> r3) >>> 0;
          }, e2.shr64_hi = function(t3, e3, r3) {
            return t3 >>> r3;
          }, e2.shr64_lo = function(t3, e3, r3) {
            return (t3 << 32 - r3 | e3 >>> r3) >>> 0;
          };
        }, 35717: (t2) => {
          "function" == typeof Object.create ? t2.exports = function(t3, e2) {
            e2 && (t3.super_ = e2, t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
          } : t2.exports = function(t3, e2) {
            if (e2) {
              t3.super_ = e2;
              var r2 = function() {
              };
              r2.prototype = e2.prototype, t3.prototype = new r2(), t3.prototype.constructor = t3;
            }
          };
        }, 62318: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(35717), i = r2(3349), o = r2(89509).Buffer, s = new Array(16);
          function a() {
            i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
          }
          function h(t3, e3) {
            return t3 << e3 | t3 >>> 32 - e3;
          }
          function f(t3, e3, r3, n3, i2, o2, s2) {
            return h(t3 + (e3 & r3 | ~e3 & n3) + i2 + o2 | 0, s2) + e3 | 0;
          }
          function u(t3, e3, r3, n3, i2, o2, s2) {
            return h(t3 + (e3 & n3 | r3 & ~n3) + i2 + o2 | 0, s2) + e3 | 0;
          }
          function c(t3, e3, r3, n3, i2, o2, s2) {
            return h(t3 + (e3 ^ r3 ^ n3) + i2 + o2 | 0, s2) + e3 | 0;
          }
          function d(t3, e3, r3, n3, i2, o2, s2) {
            return h(t3 + (r3 ^ (e3 | ~n3)) + i2 + o2 | 0, s2) + e3 | 0;
          }
          n2(a, i), a.prototype._update = function() {
            for (var t3 = s, e3 = 0; e3 < 16; ++e3)
              t3[e3] = this._block.readInt32LE(4 * e3);
            var r3 = this._a, n3 = this._b, i2 = this._c, o2 = this._d;
            r3 = f(r3, n3, i2, o2, t3[0], 3614090360, 7), o2 = f(o2, r3, n3, i2, t3[1], 3905402710, 12), i2 = f(i2, o2, r3, n3, t3[2], 606105819, 17), n3 = f(n3, i2, o2, r3, t3[3], 3250441966, 22), r3 = f(r3, n3, i2, o2, t3[4], 4118548399, 7), o2 = f(o2, r3, n3, i2, t3[5], 1200080426, 12), i2 = f(i2, o2, r3, n3, t3[6], 2821735955, 17), n3 = f(n3, i2, o2, r3, t3[7], 4249261313, 22), r3 = f(r3, n3, i2, o2, t3[8], 1770035416, 7), o2 = f(o2, r3, n3, i2, t3[9], 2336552879, 12), i2 = f(i2, o2, r3, n3, t3[10], 4294925233, 17), n3 = f(n3, i2, o2, r3, t3[11], 2304563134, 22), r3 = f(r3, n3, i2, o2, t3[12], 1804603682, 7), o2 = f(o2, r3, n3, i2, t3[13], 4254626195, 12), i2 = f(i2, o2, r3, n3, t3[14], 2792965006, 17), r3 = u(r3, n3 = f(n3, i2, o2, r3, t3[15], 1236535329, 22), i2, o2, t3[1], 4129170786, 5), o2 = u(o2, r3, n3, i2, t3[6], 3225465664, 9), i2 = u(i2, o2, r3, n3, t3[11], 643717713, 14), n3 = u(n3, i2, o2, r3, t3[0], 3921069994, 20), r3 = u(r3, n3, i2, o2, t3[5], 3593408605, 5), o2 = u(o2, r3, n3, i2, t3[10], 38016083, 9), i2 = u(i2, o2, r3, n3, t3[15], 3634488961, 14), n3 = u(n3, i2, o2, r3, t3[4], 3889429448, 20), r3 = u(r3, n3, i2, o2, t3[9], 568446438, 5), o2 = u(o2, r3, n3, i2, t3[14], 3275163606, 9), i2 = u(i2, o2, r3, n3, t3[3], 4107603335, 14), n3 = u(n3, i2, o2, r3, t3[8], 1163531501, 20), r3 = u(r3, n3, i2, o2, t3[13], 2850285829, 5), o2 = u(o2, r3, n3, i2, t3[2], 4243563512, 9), i2 = u(i2, o2, r3, n3, t3[7], 1735328473, 14), r3 = c(r3, n3 = u(n3, i2, o2, r3, t3[12], 2368359562, 20), i2, o2, t3[5], 4294588738, 4), o2 = c(o2, r3, n3, i2, t3[8], 2272392833, 11), i2 = c(i2, o2, r3, n3, t3[11], 1839030562, 16), n3 = c(n3, i2, o2, r3, t3[14], 4259657740, 23), r3 = c(r3, n3, i2, o2, t3[1], 2763975236, 4), o2 = c(o2, r3, n3, i2, t3[4], 1272893353, 11), i2 = c(i2, o2, r3, n3, t3[7], 4139469664, 16), n3 = c(n3, i2, o2, r3, t3[10], 3200236656, 23), r3 = c(r3, n3, i2, o2, t3[13], 681279174, 4), o2 = c(o2, r3, n3, i2, t3[0], 3936430074, 11), i2 = c(i2, o2, r3, n3, t3[3], 3572445317, 16), n3 = c(n3, i2, o2, r3, t3[6], 76029189, 23), r3 = c(r3, n3, i2, o2, t3[9], 3654602809, 4), o2 = c(o2, r3, n3, i2, t3[12], 3873151461, 11), i2 = c(i2, o2, r3, n3, t3[15], 530742520, 16), r3 = d(r3, n3 = c(n3, i2, o2, r3, t3[2], 3299628645, 23), i2, o2, t3[0], 4096336452, 6), o2 = d(o2, r3, n3, i2, t3[7], 1126891415, 10), i2 = d(i2, o2, r3, n3, t3[14], 2878612391, 15), n3 = d(n3, i2, o2, r3, t3[5], 4237533241, 21), r3 = d(r3, n3, i2, o2, t3[12], 1700485571, 6), o2 = d(o2, r3, n3, i2, t3[3], 2399980690, 10), i2 = d(i2, o2, r3, n3, t3[10], 4293915773, 15), n3 = d(n3, i2, o2, r3, t3[1], 2240044497, 21), r3 = d(r3, n3, i2, o2, t3[8], 1873313359, 6), o2 = d(o2, r3, n3, i2, t3[15], 4264355552, 10), i2 = d(i2, o2, r3, n3, t3[6], 2734768916, 15), n3 = d(n3, i2, o2, r3, t3[13], 1309151649, 21), r3 = d(r3, n3, i2, o2, t3[4], 4149444226, 6), o2 = d(o2, r3, n3, i2, t3[11], 3174756917, 10), i2 = d(i2, o2, r3, n3, t3[2], 718787259, 15), n3 = d(n3, i2, o2, r3, t3[9], 3951481745, 21), this._a = this._a + r3 | 0, this._b = this._b + n3 | 0, this._c = this._c + i2 | 0, this._d = this._d + o2 | 0;
          }, a.prototype._digest = function() {
            this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
            var t3 = o.allocUnsafe(16);
            return t3.writeInt32LE(this._a, 0), t3.writeInt32LE(this._b, 4), t3.writeInt32LE(this._c, 8), t3.writeInt32LE(this._d, 12), t3;
          }, t2.exports = a;
        }, 63047: (t2, e2, r2) => {
          var n2 = r2(96240), i = r2(29931);
          function o(t3) {
            this.rand = t3 || new i.Rand();
          }
          t2.exports = o, o.create = function(t3) {
            return new o(t3);
          }, o.prototype._rand = function(t3) {
            var e3 = t3.bitLength(), r3 = this.rand.generate(Math.ceil(e3 / 8));
            r3[0] |= 3;
            var i2 = 7 & e3;
            return 0 !== i2 && (r3[r3.length - 1] >>= 7 - i2), new n2(r3);
          }, o.prototype.test = function(t3, e3, r3) {
            var i2 = t3.bitLength(), o2 = n2.mont(t3), s = new n2(1).toRed(o2);
            e3 || (e3 = Math.max(1, i2 / 48 | 0));
            for (var a = t3.subn(1), h = a.subn(1), f = 0; !a.testn(f); f++)
              ;
            for (var u = t3.shrn(f), c = a.toRed(o2); e3 > 0; e3--) {
              var d = this._rand(h);
              r3 && r3(d);
              var l = d.toRed(o2).redPow(u);
              if (0 !== l.cmp(s) && 0 !== l.cmp(c)) {
                for (var p = 1; p < f; p++) {
                  if (0 === (l = l.redSqr()).cmp(s))
                    return false;
                  if (0 === l.cmp(c))
                    break;
                }
                if (p === f)
                  return false;
              }
            }
            return true;
          }, o.prototype.getDivisor = function(t3, e3) {
            var r3 = t3.bitLength(), i2 = n2.mont(t3), o2 = new n2(1).toRed(i2);
            e3 || (e3 = Math.max(1, r3 / 48 | 0));
            for (var s = t3.subn(1), a = s.subn(1), h = 0; !s.testn(h); h++)
              ;
            for (var f = t3.shrn(h), u = s.toRed(i2); e3 > 0; e3--) {
              var c = this._rand(a), d = t3.gcd(c);
              if (0 !== d.cmpn(1))
                return d;
              var l = c.toRed(i2).redPow(f);
              if (0 !== l.cmp(o2) && 0 !== l.cmp(u)) {
                for (var p = 1; p < h; p++) {
                  if (0 === (l = l.redSqr()).cmp(o2))
                    return l.fromRed().subn(1).gcd(t3);
                  if (0 === l.cmp(u))
                    break;
                }
                if (p === h)
                  return (l = l.redSqr()).fromRed().subn(1).gcd(t3);
              }
            }
            return false;
          };
        }, 96240: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 79746: (t2) => {
          function e2(t3, e3) {
            if (!t3)
              throw new Error(e3 || "Assertion failed");
          }
          t2.exports = e2, e2.equal = function(t3, e3, r2) {
            if (t3 != e3)
              throw new Error(r2 || "Assertion failed: " + t3 + " != " + e3);
          };
        }, 70631: (t2, e2, r2) => {
          var n2 = "function" == typeof Map && Map.prototype, i = Object.getOwnPropertyDescriptor && n2 ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, o = n2 && i && "function" == typeof i.get ? i.get : null, s = n2 && Map.prototype.forEach, a = "function" == typeof Set && Set.prototype, h = Object.getOwnPropertyDescriptor && a ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, f = a && h && "function" == typeof h.get ? h.get : null, u = a && Set.prototype.forEach, c = "function" == typeof WeakMap && WeakMap.prototype ? WeakMap.prototype.has : null, d = "function" == typeof WeakSet && WeakSet.prototype ? WeakSet.prototype.has : null, l = "function" == typeof WeakRef && WeakRef.prototype ? WeakRef.prototype.deref : null, p = Boolean.prototype.valueOf, g = Object.prototype.toString, y = Function.prototype.toString, m = String.prototype.match, v = String.prototype.slice, b = String.prototype.replace, w = String.prototype.toUpperCase, _ = String.prototype.toLowerCase, k = RegExp.prototype.test, S = Array.prototype.concat, A = Array.prototype.join, x = Array.prototype.slice, M = Math.floor, E = "function" == typeof BigInt ? BigInt.prototype.valueOf : null, B = Object.getOwnPropertySymbols, I = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? Symbol.prototype.toString : null, P = "function" == typeof Symbol && "object" == typeof Symbol.iterator, T = "function" == typeof Symbol && Symbol.toStringTag && (Symbol.toStringTag, 1) ? Symbol.toStringTag : null, R = Object.prototype.propertyIsEnumerable, O = ("function" == typeof Reflect ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(t3) {
            return t3.__proto__;
          } : null);
          function C(t3, e3) {
            if (t3 === 1 / 0 || t3 === -1 / 0 || t3 != t3 || t3 && t3 > -1e3 && t3 < 1e3 || k.call(/e/, e3))
              return e3;
            var r3 = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
            if ("number" == typeof t3) {
              var n3 = t3 < 0 ? -M(-t3) : M(t3);
              if (n3 !== t3) {
                var i2 = String(n3), o2 = v.call(e3, i2.length + 1);
                return b.call(i2, r3, "$&_") + "." + b.call(b.call(o2, /([0-9]{3})/g, "$&_"), /_$/, "");
              }
            }
            return b.call(e3, r3, "$&_");
          }
          var j = r2(24654).custom, N = j && q(j) ? j : null;
          function D(t3, e3, r3) {
            var n3 = "double" === (r3.quoteStyle || e3) ? '"' : "'";
            return n3 + t3 + n3;
          }
          function L(t3) {
            return b.call(String(t3), /"/g, "&quot;");
          }
          function F(t3) {
            return !("[object Array]" !== z(t3) || T && "object" == typeof t3 && T in t3);
          }
          function q(t3) {
            if (P)
              return t3 && "object" == typeof t3 && t3 instanceof Symbol;
            if ("symbol" == typeof t3)
              return true;
            if (!t3 || "object" != typeof t3 || !I)
              return false;
            try {
              return I.call(t3), true;
            } catch (t4) {
            }
            return false;
          }
          t2.exports = function t3(e3, r3, n3, i2) {
            var a2 = r3 || {};
            if (V(a2, "quoteStyle") && "single" !== a2.quoteStyle && "double" !== a2.quoteStyle)
              throw new TypeError('option "quoteStyle" must be "single" or "double"');
            if (V(a2, "maxStringLength") && ("number" == typeof a2.maxStringLength ? a2.maxStringLength < 0 && a2.maxStringLength !== 1 / 0 : null !== a2.maxStringLength))
              throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
            var h2 = !V(a2, "customInspect") || a2.customInspect;
            if ("boolean" != typeof h2 && "symbol" !== h2)
              throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
            if (V(a2, "indent") && null !== a2.indent && "	" !== a2.indent && !(parseInt(a2.indent, 10) === a2.indent && a2.indent > 0))
              throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
            if (V(a2, "numericSeparator") && "boolean" != typeof a2.numericSeparator)
              throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
            var g2 = a2.numericSeparator;
            if (void 0 === e3)
              return "undefined";
            if (null === e3)
              return "null";
            if ("boolean" == typeof e3)
              return e3 ? "true" : "false";
            if ("string" == typeof e3)
              return K(e3, a2);
            if ("number" == typeof e3) {
              if (0 === e3)
                return 1 / 0 / e3 > 0 ? "0" : "-0";
              var w2 = String(e3);
              return g2 ? C(e3, w2) : w2;
            }
            if ("bigint" == typeof e3) {
              var k2 = String(e3) + "n";
              return g2 ? C(e3, k2) : k2;
            }
            var M2 = void 0 === a2.depth ? 5 : a2.depth;
            if (void 0 === n3 && (n3 = 0), n3 >= M2 && M2 > 0 && "object" == typeof e3)
              return F(e3) ? "[Array]" : "[Object]";
            var B2, j2 = function(t4, e4) {
              var r4;
              if ("	" === t4.indent)
                r4 = "	";
              else {
                if (!("number" == typeof t4.indent && t4.indent > 0))
                  return null;
                r4 = A.call(Array(t4.indent + 1), " ");
              }
              return { base: r4, prev: A.call(Array(e4 + 1), r4) };
            }(a2, n3);
            if (void 0 === i2)
              i2 = [];
            else if (H(i2, e3) >= 0)
              return "[Circular]";
            function U2(e4, r4, o2) {
              if (r4 && (i2 = x.call(i2)).push(r4), o2) {
                var s2 = { depth: a2.depth };
                return V(a2, "quoteStyle") && (s2.quoteStyle = a2.quoteStyle), t3(e4, s2, n3 + 1, i2);
              }
              return t3(e4, a2, n3 + 1, i2);
            }
            if ("function" == typeof e3) {
              var W2 = function(t4) {
                if (t4.name)
                  return t4.name;
                var e4 = m.call(y.call(t4), /^function\s*([\w$]+)/);
                return e4 ? e4[1] : null;
              }(e3), $ = Z(e3, U2);
              return "[Function" + (W2 ? ": " + W2 : " (anonymous)") + "]" + ($.length > 0 ? " { " + A.call($, ", ") + " }" : "");
            }
            if (q(e3)) {
              var Q = P ? b.call(String(e3), /^(Symbol\(.*\))_[^)]*$/, "$1") : I.call(e3);
              return "object" != typeof e3 || P ? Q : G(Q);
            }
            if ((B2 = e3) && "object" == typeof B2 && ("undefined" != typeof HTMLElement && B2 instanceof HTMLElement || "string" == typeof B2.nodeName && "function" == typeof B2.getAttribute)) {
              for (var tt = "<" + _.call(String(e3.nodeName)), et = e3.attributes || [], rt = 0; rt < et.length; rt++)
                tt += " " + et[rt].name + "=" + D(L(et[rt].value), "double", a2);
              return tt += ">", e3.childNodes && e3.childNodes.length && (tt += "..."), tt + "</" + _.call(String(e3.nodeName)) + ">";
            }
            if (F(e3)) {
              if (0 === e3.length)
                return "[]";
              var nt = Z(e3, U2);
              return j2 && !function(t4) {
                for (var e4 = 0; e4 < t4.length; e4++)
                  if (H(t4[e4], "\n") >= 0)
                    return false;
                return true;
              }(nt) ? "[" + X(nt, j2) + "]" : "[ " + A.call(nt, ", ") + " ]";
            }
            if (function(t4) {
              return !("[object Error]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3)) {
              var it = Z(e3, U2);
              return "cause" in e3 && !R.call(e3, "cause") ? "{ [" + String(e3) + "] " + A.call(S.call("[cause]: " + U2(e3.cause), it), ", ") + " }" : 0 === it.length ? "[" + String(e3) + "]" : "{ [" + String(e3) + "] " + A.call(it, ", ") + " }";
            }
            if ("object" == typeof e3 && h2) {
              if (N && "function" == typeof e3[N])
                return e3[N]();
              if ("symbol" !== h2 && "function" == typeof e3.inspect)
                return e3.inspect();
            }
            if (function(t4) {
              if (!o || !t4 || "object" != typeof t4)
                return false;
              try {
                o.call(t4);
                try {
                  f.call(t4);
                } catch (t5) {
                  return true;
                }
                return t4 instanceof Map;
              } catch (t5) {
              }
              return false;
            }(e3)) {
              var ot = [];
              return s.call(e3, function(t4, r4) {
                ot.push(U2(r4, e3, true) + " => " + U2(t4, e3));
              }), J("Map", o.call(e3), ot, j2);
            }
            if (function(t4) {
              if (!f || !t4 || "object" != typeof t4)
                return false;
              try {
                f.call(t4);
                try {
                  o.call(t4);
                } catch (t5) {
                  return true;
                }
                return t4 instanceof Set;
              } catch (t5) {
              }
              return false;
            }(e3)) {
              var st = [];
              return u.call(e3, function(t4) {
                st.push(U2(t4, e3));
              }), J("Set", f.call(e3), st, j2);
            }
            if (function(t4) {
              if (!c || !t4 || "object" != typeof t4)
                return false;
              try {
                c.call(t4, c);
                try {
                  d.call(t4, d);
                } catch (t5) {
                  return true;
                }
                return t4 instanceof WeakMap;
              } catch (t5) {
              }
              return false;
            }(e3))
              return Y("WeakMap");
            if (function(t4) {
              if (!d || !t4 || "object" != typeof t4)
                return false;
              try {
                d.call(t4, d);
                try {
                  c.call(t4, c);
                } catch (t5) {
                  return true;
                }
                return t4 instanceof WeakSet;
              } catch (t5) {
              }
              return false;
            }(e3))
              return Y("WeakSet");
            if (function(t4) {
              if (!l || !t4 || "object" != typeof t4)
                return false;
              try {
                return l.call(t4), true;
              } catch (t5) {
              }
              return false;
            }(e3))
              return Y("WeakRef");
            if (function(t4) {
              return !("[object Number]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3))
              return G(U2(Number(e3)));
            if (function(t4) {
              if (!t4 || "object" != typeof t4 || !E)
                return false;
              try {
                return E.call(t4), true;
              } catch (t5) {
              }
              return false;
            }(e3))
              return G(U2(E.call(e3)));
            if (function(t4) {
              return !("[object Boolean]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3))
              return G(p.call(e3));
            if (function(t4) {
              return !("[object String]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3))
              return G(U2(String(e3)));
            if (!function(t4) {
              return !("[object Date]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3) && !function(t4) {
              return !("[object RegExp]" !== z(t4) || T && "object" == typeof t4 && T in t4);
            }(e3)) {
              var at = Z(e3, U2), ht = O ? O(e3) === Object.prototype : e3 instanceof Object || e3.constructor === Object, ft = e3 instanceof Object ? "" : "null prototype", ut = !ht && T && Object(e3) === e3 && T in e3 ? v.call(z(e3), 8, -1) : ft ? "Object" : "", ct = (ht || "function" != typeof e3.constructor ? "" : e3.constructor.name ? e3.constructor.name + " " : "") + (ut || ft ? "[" + A.call(S.call([], ut || [], ft || []), ": ") + "] " : "");
              return 0 === at.length ? ct + "{}" : j2 ? ct + "{" + X(at, j2) + "}" : ct + "{ " + A.call(at, ", ") + " }";
            }
            return String(e3);
          };
          var U = Object.prototype.hasOwnProperty || function(t3) {
            return t3 in this;
          };
          function V(t3, e3) {
            return U.call(t3, e3);
          }
          function z(t3) {
            return g.call(t3);
          }
          function H(t3, e3) {
            if (t3.indexOf)
              return t3.indexOf(e3);
            for (var r3 = 0, n3 = t3.length; r3 < n3; r3++)
              if (t3[r3] === e3)
                return r3;
            return -1;
          }
          function K(t3, e3) {
            if (t3.length > e3.maxStringLength) {
              var r3 = t3.length - e3.maxStringLength, n3 = "... " + r3 + " more character" + (r3 > 1 ? "s" : "");
              return K(v.call(t3, 0, e3.maxStringLength), e3) + n3;
            }
            return D(b.call(b.call(t3, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, W), "single", e3);
          }
          function W(t3) {
            var e3 = t3.charCodeAt(0), r3 = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[e3];
            return r3 ? "\\" + r3 : "\\x" + (e3 < 16 ? "0" : "") + w.call(e3.toString(16));
          }
          function G(t3) {
            return "Object(" + t3 + ")";
          }
          function Y(t3) {
            return t3 + " { ? }";
          }
          function J(t3, e3, r3, n3) {
            return t3 + " (" + e3 + ") {" + (n3 ? X(r3, n3) : A.call(r3, ", ")) + "}";
          }
          function X(t3, e3) {
            if (0 === t3.length)
              return "";
            var r3 = "\n" + e3.prev + e3.base;
            return r3 + A.call(t3, "," + r3) + "\n" + e3.prev;
          }
          function Z(t3, e3) {
            var r3 = F(t3), n3 = [];
            if (r3) {
              n3.length = t3.length;
              for (var i2 = 0; i2 < t3.length; i2++)
                n3[i2] = V(t3, i2) ? e3(t3[i2], t3) : "";
            }
            var o2, s2 = "function" == typeof B ? B(t3) : [];
            if (P) {
              o2 = {};
              for (var a2 = 0; a2 < s2.length; a2++)
                o2["$" + s2[a2]] = s2[a2];
            }
            for (var h2 in t3)
              V(t3, h2) && (r3 && String(Number(h2)) === h2 && h2 < t3.length || P && o2["$" + h2] instanceof Symbol || (k.call(/[^\w$]/, h2) ? n3.push(e3(h2, t3) + ": " + e3(t3[h2], t3)) : n3.push(h2 + ": " + e3(t3[h2], t3))));
            if ("function" == typeof B)
              for (var f2 = 0; f2 < s2.length; f2++)
                R.call(t3, s2[f2]) && n3.push("[" + e3(s2[f2]) + "]: " + e3(t3[s2[f2]], t3));
            return n3;
          }
        }, 52818: (t2, e2, r2) => {
          var n2 = r2(39809), i = n2.define("RSAPrivateKey", function() {
            this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
          });
          e2.RSAPrivateKey = i;
          var o = n2.define("RSAPublicKey", function() {
            this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
          });
          e2.RSAPublicKey = o;
          var s = n2.define("SubjectPublicKeyInfo", function() {
            this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
          });
          e2.PublicKey = s;
          var a = n2.define("AlgorithmIdentifier", function() {
            this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
          }), h = n2.define("PrivateKeyInfo", function() {
            this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
          });
          e2.PrivateKey = h;
          var f = n2.define("EncryptedPrivateKeyInfo", function() {
            this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
          });
          e2.EncryptedPrivateKey = f;
          var u = n2.define("DSAPrivateKey", function() {
            this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
          });
          e2.DSAPrivateKey = u, e2.DSAparam = n2.define("DSAparam", function() {
            this.int();
          });
          var c = n2.define("ECPrivateKey", function() {
            this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(d), this.key("publicKey").optional().explicit(1).bitstr());
          });
          e2.ECPrivateKey = c;
          var d = n2.define("ECParameters", function() {
            this.choice({ namedCurve: this.objid() });
          });
          e2.signature = n2.define("signature", function() {
            this.seq().obj(this.key("r").int(), this.key("s").int());
          });
        }, 77631: (t2, e2, r2) => {
          var n2 = /Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m, i = /^-----BEGIN (.*) KEY-----\r?\n/m, o = /^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m, s = r2(13048), a = r2(44696);
          t2.exports = function(t3, e3) {
            var r3, h = t3.toString(), f = h.match(n2);
            if (f) {
              var u = "aes" + f[1], c = new Buffer(f[2], "hex"), d = new Buffer(f[3].replace(/\r?\n/g, ""), "base64"), l = s(e3, c.slice(0, 8), parseInt(f[1], 10)).key, p = [], g = a.createDecipheriv(u, l, c);
              p.push(g.update(d)), p.push(g.final()), r3 = Buffer.concat(p);
            } else {
              var y = h.match(o);
              r3 = new Buffer(y[2].replace(/\r?\n/g, ""), "base64");
            }
            return { tag: h.match(i)[1] + " KEY", data: r3 };
          };
        }, 70980: (t2, e2, r2) => {
          var n2 = r2(52818), i = r2(22562), o = r2(77631), s = r2(44696), a = r2(25632);
          function h(t3) {
            var e3;
            "object" != typeof t3 || Buffer.isBuffer(t3) || (e3 = t3.passphrase, t3 = t3.key), "string" == typeof t3 && (t3 = new Buffer(t3));
            var r3, h2, f = o(t3, e3), u = f.tag, c = f.data;
            switch (u) {
              case "PUBLIC KEY":
                switch (r3 = (h2 = n2.PublicKey.decode(c, "der")).algorithm.algorithm.join(".")) {
                  case "1.2.840.113549.1.1.1":
                    return n2.RSAPublicKey.decode(h2.subjectPublicKey.data, "der");
                  case "1.2.840.10045.2.1":
                    return h2.subjectPrivateKey = h2.subjectPublicKey, { type: "ec", data: h2 };
                  case "1.2.840.10040.4.1":
                    return h2.algorithm.params.pub_key = n2.DSAparam.decode(h2.subjectPublicKey.data, "der"), { type: "dsa", data: h2.algorithm.params };
                  default:
                    throw new Error("unknown key id " + r3);
                }
                throw new Error("unknown key type " + u);
              case "ENCRYPTED PRIVATE KEY":
                c = function(t4, e4) {
                  var r4 = t4.algorithm.decrypt.kde.kdeparams.salt, n3 = parseInt(t4.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), o2 = i[t4.algorithm.decrypt.cipher.algo.join(".")], h3 = t4.algorithm.decrypt.cipher.iv, f2 = t4.subjectPrivateKey, u2 = parseInt(o2.split("-")[1], 10) / 8, c2 = a.pbkdf2Sync(e4, r4, n3, u2), d = s.createDecipheriv(o2, c2, h3), l = [];
                  return l.push(d.update(f2)), l.push(d.final()), Buffer.concat(l);
                }(c = n2.EncryptedPrivateKey.decode(c, "der"), e3);
              case "PRIVATE KEY":
                switch (r3 = (h2 = n2.PrivateKey.decode(c, "der")).algorithm.algorithm.join(".")) {
                  case "1.2.840.113549.1.1.1":
                    return n2.RSAPrivateKey.decode(h2.subjectPrivateKey, "der");
                  case "1.2.840.10045.2.1":
                    return { curve: h2.algorithm.curve, privateKey: n2.ECPrivateKey.decode(h2.subjectPrivateKey, "der").privateKey };
                  case "1.2.840.10040.4.1":
                    return h2.algorithm.params.priv_key = n2.DSAparam.decode(h2.subjectPrivateKey, "der"), { type: "dsa", params: h2.algorithm.params };
                  default:
                    throw new Error("unknown key id " + r3);
                }
                throw new Error("unknown key type " + u);
              case "RSA PUBLIC KEY":
                return n2.RSAPublicKey.decode(c, "der");
              case "RSA PRIVATE KEY":
                return n2.RSAPrivateKey.decode(c, "der");
              case "DSA PRIVATE KEY":
                return { type: "dsa", params: n2.DSAPrivateKey.decode(c, "der") };
              case "EC PRIVATE KEY":
                return { curve: (c = n2.ECPrivateKey.decode(c, "der")).parameters.value, privateKey: c.privateKey };
              default:
                throw new Error("unknown key type " + u);
            }
          }
          t2.exports = h, h.signature = n2.signature;
        }, 25632: (t2, e2, r2) => {
          e2.pbkdf2 = r2(88638), e2.pbkdf2Sync = r2(91257);
        }, 88638: (t2, e2, r2) => {
          var n2, i = r2(89509).Buffer, o = r2(77357), s = r2(12368), a = r2(91257), h = r2(57777), f = r2.g.crypto && r2.g.crypto.subtle, u = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, c = [];
          function d(t3, e3, r3, n3, o2) {
            return f.importKey("raw", t3, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(t4) {
              return f.deriveBits({ name: "PBKDF2", salt: e3, iterations: r3, hash: { name: o2 } }, t4, n3 << 3);
            }).then(function(t4) {
              return i.from(t4);
            });
          }
          t2.exports = function(t3, e3, l, p, g, y) {
            "function" == typeof g && (y = g, g = void 0);
            var m = u[(g = g || "sha1").toLowerCase()];
            if (!m || "function" != typeof r2.g.Promise)
              return process.nextTick(function() {
                var r3;
                try {
                  r3 = a(t3, e3, l, p, g);
                } catch (t4) {
                  return y(t4);
                }
                y(null, r3);
              });
            if (o(l, p), t3 = h(t3, s, "Password"), e3 = h(e3, s, "Salt"), "function" != typeof y)
              throw new Error("No callback provided to pbkdf2");
            !function(t4, e4) {
              t4.then(function(t5) {
                process.nextTick(function() {
                  e4(null, t5);
                });
              }, function(t5) {
                process.nextTick(function() {
                  e4(t5);
                });
              });
            }(function(t4) {
              if (r2.g.process && !r2.g.process.browser)
                return Promise.resolve(false);
              if (!f || !f.importKey || !f.deriveBits)
                return Promise.resolve(false);
              if (void 0 !== c[t4])
                return c[t4];
              var e4 = d(n2 = n2 || i.alloc(8), n2, 10, 128, t4).then(function() {
                return true;
              }).catch(function() {
                return false;
              });
              return c[t4] = e4, e4;
            }(m).then(function(r3) {
              return r3 ? d(t3, e3, l, p, m) : a(t3, e3, l, p, g);
            }), y);
          };
        }, 12368: (t2) => {
          var e2;
          e2 = process.browser ? "utf-8" : process.version ? parseInt(process.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary" : "utf-8", t2.exports = e2;
        }, 77357: (t2) => {
          var e2 = Math.pow(2, 30) - 1;
          t2.exports = function(t3, r2) {
            if ("number" != typeof t3)
              throw new TypeError("Iterations not a number");
            if (t3 < 0)
              throw new TypeError("Bad iterations");
            if ("number" != typeof r2)
              throw new TypeError("Key length not a number");
            if (r2 < 0 || r2 > e2 || r2 != r2)
              throw new TypeError("Bad key length");
          };
        }, 91257: (t2, e2, r2) => {
          var n2 = r2(78028), i = r2(79785), o = r2(89072), s = r2(89509).Buffer, a = r2(77357), h = r2(12368), f = r2(57777), u = s.alloc(128), c = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
          function d(t3, e3, r3) {
            var a2 = function(t4) {
              return "rmd160" === t4 || "ripemd160" === t4 ? function(t5) {
                return new i().update(t5).digest();
              } : "md5" === t4 ? n2 : function(e4) {
                return o(t4).update(e4).digest();
              };
            }(t3), h2 = "sha512" === t3 || "sha384" === t3 ? 128 : 64;
            e3.length > h2 ? e3 = a2(e3) : e3.length < h2 && (e3 = s.concat([e3, u], h2));
            for (var f2 = s.allocUnsafe(h2 + c[t3]), d2 = s.allocUnsafe(h2 + c[t3]), l = 0; l < h2; l++)
              f2[l] = 54 ^ e3[l], d2[l] = 92 ^ e3[l];
            var p = s.allocUnsafe(h2 + r3 + 4);
            f2.copy(p, 0, 0, h2), this.ipad1 = p, this.ipad2 = f2, this.opad = d2, this.alg = t3, this.blocksize = h2, this.hash = a2, this.size = c[t3];
          }
          d.prototype.run = function(t3, e3) {
            return t3.copy(e3, this.blocksize), this.hash(e3).copy(this.opad, this.blocksize), this.hash(this.opad);
          }, t2.exports = function(t3, e3, r3, n3, i2) {
            a(r3, n3);
            var o2 = new d(i2 = i2 || "sha1", t3 = f(t3, h, "Password"), (e3 = f(e3, h, "Salt")).length), u2 = s.allocUnsafe(n3), l = s.allocUnsafe(e3.length + 4);
            e3.copy(l, 0, 0, e3.length);
            for (var p = 0, g = c[i2], y = Math.ceil(n3 / g), m = 1; m <= y; m++) {
              l.writeUInt32BE(m, e3.length);
              for (var v = o2.run(l, o2.ipad1), b = v, w = 1; w < r3; w++) {
                b = o2.run(b, o2.ipad2);
                for (var _ = 0; _ < g; _++)
                  v[_] ^= b[_];
              }
              v.copy(u2, p), p += g;
            }
            return u2;
          };
        }, 57777: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer;
          t2.exports = function(t3, e3, r3) {
            if (n2.isBuffer(t3))
              return t3;
            if ("string" == typeof t3)
              return n2.from(t3, e3);
            if (ArrayBuffer.isView(t3))
              return n2.from(t3.buffer);
            throw new TypeError(r3 + " must be a string, a Buffer, a typed array or a DataView");
          };
        }, 7900: (t2, e2, r2) => {
          e2.publicEncrypt = r2(16559), e2.privateDecrypt = r2(26138), e2.privateEncrypt = function(t3, r3) {
            return e2.publicEncrypt(t3, r3, true);
          }, e2.publicDecrypt = function(t3, r3) {
            return e2.privateDecrypt(t3, r3, true);
          };
        }, 99199: (t2, e2, r2) => {
          var n2 = r2(23482);
          function i(t3) {
            var e3 = new Buffer(4);
            return e3.writeUInt32BE(t3, 0), e3;
          }
          t2.exports = function(t3, e3) {
            for (var r3, o = new Buffer(""), s = 0; o.length < e3; )
              r3 = i(s++), o = Buffer.concat([o, n2("sha1").update(t3).update(r3).digest()]);
            return o.slice(0, e3);
          };
        }, 92144: function(t2, e2, r2) {
          !function(t3, e3) {
            "use strict";
            function r3(t4, e4) {
              if (!t4)
                throw new Error(e4 || "Assertion failed");
            }
            function n2(t4, e4) {
              t4.super_ = e4;
              var r4 = function() {
              };
              r4.prototype = e4.prototype, t4.prototype = new r4(), t4.prototype.constructor = t4;
            }
            function i(t4, e4, r4) {
              if (null !== t4 && "object" == typeof t4 && Array.isArray(t4.words))
                return t4;
              this.sign = false, this.words = null, this.length = 0, this.red = null, "le" !== e4 && "be" !== e4 || (r4 = e4, e4 = 10), null !== t4 && this._init(t4 || 0, e4 || 10, r4 || "be");
            }
            function o(t4, e4, r4) {
              for (var n3 = 0, i2 = Math.min(t4.length, r4), o2 = e4; o2 < i2; o2++) {
                var s2 = t4.charCodeAt(o2) - 48;
                n3 <<= 4, n3 |= s2 >= 49 && s2 <= 54 ? s2 - 49 + 10 : s2 >= 17 && s2 <= 22 ? s2 - 17 + 10 : 15 & s2;
              }
              return n3;
            }
            function s(t4, e4, r4, n3) {
              for (var i2 = 0, o2 = Math.min(t4.length, r4), s2 = e4; s2 < o2; s2++) {
                var a2 = t4.charCodeAt(s2) - 48;
                i2 *= n3, i2 += a2 >= 49 ? a2 - 49 + 10 : a2 >= 17 ? a2 - 17 + 10 : a2;
              }
              return i2;
            }
            "object" == typeof t3 ? t3.exports = i : e3.BN = i, i.BN = i, i.wordSize = 26, i.prototype._init = function(t4, e4, n3) {
              if ("number" == typeof t4)
                return this._initNumber(t4, e4, n3);
              if ("object" == typeof t4)
                return this._initArray(t4, e4, n3);
              "hex" === e4 && (e4 = 16), r3(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
              var i2 = 0;
              "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && i2++, 16 === e4 ? this._parseHex(t4, i2) : this._parseBase(t4, e4, i2), "-" === t4[0] && (this.sign = true), this.strip(), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initNumber = function(t4, e4, n3) {
              t4 < 0 && (this.sign = true, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r3(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
            }, i.prototype._initArray = function(t4, e4, n3) {
              if (r3("number" == typeof t4.length), t4.length <= 0)
                return this.words = [0], this.length = 1, this;
              this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
              for (var i2 = 0; i2 < this.length; i2++)
                this.words[i2] = 0;
              var o2 = 0;
              if ("be" === n3) {
                i2 = t4.length - 1;
                for (var s2 = 0; i2 >= 0; i2 -= 3) {
                  var a2 = t4[i2] | t4[i2 - 1] << 8 | t4[i2 - 2] << 16;
                  this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
                }
              } else if ("le" === n3)
                for (i2 = 0, s2 = 0; i2 < t4.length; i2 += 3)
                  a2 = t4[i2] | t4[i2 + 1] << 8 | t4[i2 + 2] << 16, this.words[s2] |= a2 << o2 & 67108863, this.words[s2 + 1] = a2 >>> 26 - o2 & 67108863, (o2 += 24) >= 26 && (o2 -= 26, s2++);
              return this.strip();
            }, i.prototype._parseHex = function(t4, e4) {
              this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
              for (var r4 = 0; r4 < this.length; r4++)
                this.words[r4] = 0;
              for (var n3 = 0, i2 = (r4 = t4.length - 6, 0); r4 >= e4; r4 -= 6) {
                var s2 = o(t4, r4, r4 + 6);
                this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303, (n3 += 24) >= 26 && (n3 -= 26, i2++);
              }
              r4 + 6 !== e4 && (s2 = o(t4, e4, r4 + 6), this.words[i2] |= s2 << n3 & 67108863, this.words[i2 + 1] |= s2 >>> 26 - n3 & 4194303), this.strip();
            }, i.prototype._parseBase = function(t4, e4, r4) {
              this.words = [0], this.length = 1;
              for (var n3 = 0, i2 = 1; i2 <= 67108863; i2 *= e4)
                n3++;
              n3--, i2 = i2 / e4 | 0;
              for (var o2 = t4.length - r4, a2 = o2 % n3, h2 = Math.min(o2, o2 - a2) + r4, f2 = 0, u2 = r4; u2 < h2; u2 += n3)
                f2 = s(t4, u2, u2 + n3, e4), this.imuln(i2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              if (0 !== a2) {
                var c2 = 1;
                for (f2 = s(t4, u2, t4.length, e4), u2 = 0; u2 < a2; u2++)
                  c2 *= e4;
                this.imuln(c2), this.words[0] + f2 < 67108864 ? this.words[0] += f2 : this._iaddn(f2);
              }
            }, i.prototype.copy = function(t4) {
              t4.words = new Array(this.length);
              for (var e4 = 0; e4 < this.length; e4++)
                t4.words[e4] = this.words[e4];
              t4.length = this.length, t4.sign = this.sign, t4.red = this.red;
            }, i.prototype.clone = function() {
              var t4 = new i(null);
              return this.copy(t4), t4;
            }, i.prototype.strip = function() {
              for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                this.length--;
              return this._normSign();
            }, i.prototype._normSign = function() {
              return 1 === this.length && 0 === this.words[0] && (this.sign = false), this;
            }, i.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var a = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], h = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            i.prototype.toString = function(t4, e4) {
              if (16 === (t4 = t4 || 10) || "hex" === t4) {
                for (var n3 = "", i2 = 0, o2 = (e4 = 0 | e4 || 1, 0), s2 = 0; s2 < this.length; s2++) {
                  var u2 = this.words[s2], c2 = (16777215 & (u2 << i2 | o2)).toString(16);
                  n3 = 0 != (o2 = u2 >>> 24 - i2 & 16777215) || s2 !== this.length - 1 ? a[6 - c2.length] + c2 + n3 : c2 + n3, (i2 += 2) >= 26 && (i2 -= 26, s2--);
                }
                for (0 !== o2 && (n3 = o2.toString(16) + n3); n3.length % e4 != 0; )
                  n3 = "0" + n3;
                return this.sign && (n3 = "-" + n3), n3;
              }
              if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
                var d2 = h[t4], l2 = f[t4], p2 = (n3 = "", this.clone());
                for (p2.sign = false; 0 !== p2.cmpn(0); ) {
                  var g2 = p2.modn(l2).toString(t4);
                  n3 = 0 !== (p2 = p2.idivn(l2)).cmpn(0) ? a[d2 - g2.length] + g2 + n3 : g2 + n3;
                }
                return 0 === this.cmpn(0) && (n3 = "0" + n3), this.sign && (n3 = "-" + n3), n3;
              }
              r3(false, "Base should be between 2 and 36");
            }, i.prototype.toJSON = function() {
              return this.toString(16);
            }, i.prototype.toArray = function(t4) {
              this.strip();
              var e4 = new Array(this.byteLength());
              e4[0] = 0;
              var r4 = this.clone();
              if ("le" !== t4)
                for (var n3 = 0; 0 !== r4.cmpn(0); n3++) {
                  var i2 = r4.andln(255);
                  r4.ishrn(8), e4[e4.length - n3 - 1] = i2;
                }
              else
                for (n3 = 0; 0 !== r4.cmpn(0); n3++)
                  i2 = r4.andln(255), r4.ishrn(8), e4[n3] = i2;
              return e4;
            }, Math.clz32 ? i.prototype._countBits = function(t4) {
              return 32 - Math.clz32(t4);
            } : i.prototype._countBits = function(t4) {
              var e4 = t4, r4 = 0;
              return e4 >= 4096 && (r4 += 13, e4 >>>= 13), e4 >= 64 && (r4 += 7, e4 >>>= 7), e4 >= 8 && (r4 += 4, e4 >>>= 4), e4 >= 2 && (r4 += 2, e4 >>>= 2), r4 + e4;
            }, i.prototype._zeroBits = function(t4) {
              if (0 === t4)
                return 26;
              var e4 = t4, r4 = 0;
              return 0 == (8191 & e4) && (r4 += 13, e4 >>>= 13), 0 == (127 & e4) && (r4 += 7, e4 >>>= 7), 0 == (15 & e4) && (r4 += 4, e4 >>>= 4), 0 == (3 & e4) && (r4 += 2, e4 >>>= 2), 0 == (1 & e4) && r4++, r4;
            }, i.prototype.bitLength = function() {
              var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
              return 26 * (this.length - 1) + e4;
            }, i.prototype.zeroBits = function() {
              if (0 === this.cmpn(0))
                return 0;
              for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
                var r4 = this._zeroBits(this.words[e4]);
                if (t4 += r4, 26 !== r4)
                  break;
              }
              return t4;
            }, i.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }, i.prototype.neg = function() {
              if (0 === this.cmpn(0))
                return this.clone();
              var t4 = this.clone();
              return t4.sign = !this.sign, t4;
            }, i.prototype.ior = function(t4) {
              for (this.sign = this.sign || t4.sign; this.length < t4.length; )
                this.words[this.length++] = 0;
              for (var e4 = 0; e4 < t4.length; e4++)
                this.words[e4] = this.words[e4] | t4.words[e4];
              return this.strip();
            }, i.prototype.or = function(t4) {
              return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
            }, i.prototype.iand = function(t4) {
              var e4;
              this.sign = this.sign && t4.sign, e4 = this.length > t4.length ? t4 : this;
              for (var r4 = 0; r4 < e4.length; r4++)
                this.words[r4] = this.words[r4] & t4.words[r4];
              return this.length = e4.length, this.strip();
            }, i.prototype.and = function(t4) {
              return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
            }, i.prototype.ixor = function(t4) {
              var e4, r4;
              this.sign = this.sign || t4.sign, this.length > t4.length ? (e4 = this, r4 = t4) : (e4 = t4, r4 = this);
              for (var n3 = 0; n3 < r4.length; n3++)
                this.words[n3] = e4.words[n3] ^ r4.words[n3];
              if (this !== e4)
                for (; n3 < e4.length; n3++)
                  this.words[n3] = e4.words[n3];
              return this.length = e4.length, this.strip();
            }, i.prototype.xor = function(t4) {
              return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
            }, i.prototype.setn = function(t4, e4) {
              r3("number" == typeof t4 && t4 >= 0);
              for (var n3 = t4 / 26 | 0, i2 = t4 % 26; this.length <= n3; )
                this.words[this.length++] = 0;
              return this.words[n3] = e4 ? this.words[n3] | 1 << i2 : this.words[n3] & ~(1 << i2), this.strip();
            }, i.prototype.iadd = function(t4) {
              if (this.sign && !t4.sign) {
                this.sign = false;
                var e4 = this.isub(t4);
                return this.sign = !this.sign, this._normSign();
              }
              if (!this.sign && t4.sign)
                return t4.sign = false, e4 = this.isub(t4), t4.sign = true, e4._normSign();
              var r4, n3;
              this.length > t4.length ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var i2 = 0, o2 = 0; o2 < n3.length; o2++)
                e4 = r4.words[o2] + n3.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              for (; 0 !== i2 && o2 < r4.length; o2++)
                e4 = r4.words[o2] + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
              if (this.length = r4.length, 0 !== i2)
                this.words[this.length] = i2, this.length++;
              else if (r4 !== this)
                for (; o2 < r4.length; o2++)
                  this.words[o2] = r4.words[o2];
              return this;
            }, i.prototype.add = function(t4) {
              if (t4.sign && !this.sign) {
                t4.sign = false;
                var e4 = this.sub(t4);
                return t4.sign = true, e4;
              }
              return !t4.sign && this.sign ? (this.sign = false, e4 = t4.sub(this), this.sign = true, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
            }, i.prototype.isub = function(t4) {
              if (t4.sign) {
                t4.sign = false;
                var e4 = this.iadd(t4);
                return t4.sign = true, e4._normSign();
              }
              if (this.sign)
                return this.sign = false, this.iadd(t4), this.sign = true, this._normSign();
              var r4, n3, i2 = this.cmp(t4);
              if (0 === i2)
                return this.sign = false, this.length = 1, this.words[0] = 0, this;
              i2 > 0 ? (r4 = this, n3 = t4) : (r4 = t4, n3 = this);
              for (var o2 = 0, s2 = 0; s2 < n3.length; s2++)
                o2 = (e4 = r4.words[s2] - n3.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              for (; 0 !== o2 && s2 < r4.length; s2++)
                o2 = (e4 = r4.words[s2] + o2) >> 26, this.words[s2] = 67108863 & e4;
              if (0 === o2 && s2 < r4.length && r4 !== this)
                for (; s2 < r4.length; s2++)
                  this.words[s2] = r4.words[s2];
              return this.length = Math.max(this.length, s2), r4 !== this && (this.sign = true), this.strip();
            }, i.prototype.sub = function(t4) {
              return this.clone().isub(t4);
            }, i.prototype._smallMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0; n3 < e4.length - 1; n3++) {
                for (var i2 = r4 >>> 26, o2 = 67108863 & r4, s2 = Math.min(n3, t4.length - 1), a2 = Math.max(0, n3 - this.length + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = (0 | this.words[h2]) * (0 | t4.words[a2]), u2 = 67108863 & f2;
                  o2 = 67108863 & (u2 = u2 + o2 | 0), i2 = (i2 = i2 + (f2 / 67108864 | 0) | 0) + (u2 >>> 26) | 0;
                }
                e4.words[n3] = o2, r4 = i2;
              }
              return 0 !== r4 ? e4.words[n3] = r4 : e4.length--, e4.strip();
            }, i.prototype._bigMulTo = function(t4, e4) {
              e4.sign = t4.sign !== this.sign, e4.length = this.length + t4.length;
              for (var r4 = 0, n3 = 0, i2 = 0; i2 < e4.length - 1; i2++) {
                var o2 = n3;
                n3 = 0;
                for (var s2 = 67108863 & r4, a2 = Math.min(i2, t4.length - 1), h2 = Math.max(0, i2 - this.length + 1); h2 <= a2; h2++) {
                  var f2 = i2 - h2, u2 = (0 | this.words[f2]) * (0 | t4.words[h2]), c2 = 67108863 & u2;
                  s2 = 67108863 & (c2 = c2 + s2 | 0), n3 += (o2 = (o2 = o2 + (u2 / 67108864 | 0) | 0) + (c2 >>> 26) | 0) >>> 26, o2 &= 67108863;
                }
                e4.words[i2] = s2, r4 = o2, o2 = n3;
              }
              return 0 !== r4 ? e4.words[i2] = r4 : e4.length--, e4.strip();
            }, i.prototype.mulTo = function(t4, e4) {
              return this.length + t4.length < 63 ? this._smallMulTo(t4, e4) : this._bigMulTo(t4, e4);
            }, i.prototype.mul = function(t4) {
              var e4 = new i(null);
              return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
            }, i.prototype.imul = function(t4) {
              if (0 === this.cmpn(0) || 0 === t4.cmpn(0))
                return this.words[0] = 0, this.length = 1, this;
              var e4 = this.length, r4 = t4.length;
              this.sign = t4.sign !== this.sign, this.length = this.length + t4.length, this.words[this.length - 1] = 0;
              for (var n3 = this.length - 2; n3 >= 0; n3--) {
                for (var i2 = 0, o2 = 0, s2 = Math.min(n3, r4 - 1), a2 = Math.max(0, n3 - e4 + 1); a2 <= s2; a2++) {
                  var h2 = n3 - a2, f2 = this.words[h2] * t4.words[a2], u2 = 67108863 & f2;
                  i2 += f2 / 67108864 | 0, o2 = 67108863 & (u2 += o2), i2 += u2 >>> 26;
                }
                this.words[n3] = o2, this.words[n3 + 1] += i2, i2 = 0;
              }
              for (i2 = 0, h2 = 1; h2 < this.length; h2++) {
                var c2 = this.words[h2] + i2;
                this.words[h2] = 67108863 & c2, i2 = c2 >>> 26;
              }
              return this.strip();
            }, i.prototype.imuln = function(t4) {
              r3("number" == typeof t4);
              for (var e4 = 0, n3 = 0; n3 < this.length; n3++) {
                var i2 = this.words[n3] * t4, o2 = (67108863 & i2) + (67108863 & e4);
                e4 >>= 26, e4 += i2 / 67108864 | 0, e4 += o2 >>> 26, this.words[n3] = 67108863 & o2;
              }
              return 0 !== e4 && (this.words[n3] = e4, this.length++), this;
            }, i.prototype.muln = function(t4) {
              return this.clone().imuln(t4);
            }, i.prototype.sqr = function() {
              return this.mul(this);
            }, i.prototype.isqr = function() {
              return this.mul(this);
            }, i.prototype.ishln = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 67108863 >>> 26 - e4 << 26 - e4;
              if (0 !== e4) {
                for (var o2 = 0, s2 = 0; s2 < this.length; s2++) {
                  var a2 = this.words[s2] & i2, h2 = this.words[s2] - a2 << e4;
                  this.words[s2] = h2 | o2, o2 = a2 >>> 26 - e4;
                }
                o2 && (this.words[s2] = o2, this.length++);
              }
              if (0 !== n3) {
                for (s2 = this.length - 1; s2 >= 0; s2--)
                  this.words[s2 + n3] = this.words[s2];
                for (s2 = 0; s2 < n3; s2++)
                  this.words[s2] = 0;
                this.length += n3;
              }
              return this.strip();
            }, i.prototype.ishrn = function(t4, e4, n3) {
              var i2;
              r3("number" == typeof t4 && t4 >= 0), i2 = e4 ? (e4 - e4 % 26) / 26 : 0;
              var o2 = t4 % 26, s2 = Math.min((t4 - o2) / 26, this.length), a2 = 67108863 ^ 67108863 >>> o2 << o2, h2 = n3;
              if (i2 -= s2, i2 = Math.max(0, i2), h2) {
                for (var f2 = 0; f2 < s2; f2++)
                  h2.words[f2] = this.words[f2];
                h2.length = s2;
              }
              if (0 === s2)
                ;
              else if (this.length > s2)
                for (this.length -= s2, f2 = 0; f2 < this.length; f2++)
                  this.words[f2] = this.words[f2 + s2];
              else
                this.words[0] = 0, this.length = 1;
              var u2 = 0;
              for (f2 = this.length - 1; f2 >= 0 && (0 !== u2 || f2 >= i2); f2--) {
                var c2 = this.words[f2];
                this.words[f2] = u2 << 26 - o2 | c2 >>> o2, u2 = c2 & a2;
              }
              return h2 && 0 !== u2 && (h2.words[h2.length++] = u2), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip(), this;
            }, i.prototype.shln = function(t4) {
              return this.clone().ishln(t4);
            }, i.prototype.shrn = function(t4) {
              return this.clone().ishrn(t4);
            }, i.prototype.testn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              return !(this.length <= n3 || !(this.words[n3] & i2));
            }, i.prototype.imaskn = function(t4) {
              r3("number" == typeof t4 && t4 >= 0);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26;
              if (r3(!this.sign, "imaskn works only with positive numbers"), 0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
                var i2 = 67108863 ^ 67108863 >>> e4 << e4;
                this.words[this.length - 1] &= i2;
              }
              return this.strip();
            }, i.prototype.maskn = function(t4) {
              return this.clone().imaskn(t4);
            }, i.prototype.iaddn = function(t4) {
              return r3("number" == typeof t4), t4 < 0 ? this.isubn(-t4) : this.sign ? 1 === this.length && this.words[0] < t4 ? (this.words[0] = t4 - this.words[0], this.sign = false, this) : (this.sign = false, this.isubn(t4), this.sign = true, this) : this._iaddn(t4);
            }, i.prototype._iaddn = function(t4) {
              this.words[0] += t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
                this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
              return this.length = Math.max(this.length, e4 + 1), this;
            }, i.prototype.isubn = function(t4) {
              if (r3("number" == typeof t4), t4 < 0)
                return this.iaddn(-t4);
              if (this.sign)
                return this.sign = false, this.iaddn(t4), this.sign = true, this;
              this.words[0] -= t4;
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
              return this.strip();
            }, i.prototype.addn = function(t4) {
              return this.clone().iaddn(t4);
            }, i.prototype.subn = function(t4) {
              return this.clone().isubn(t4);
            }, i.prototype.iabs = function() {
              return this.sign = false, this;
            }, i.prototype.abs = function() {
              return this.clone().iabs();
            }, i.prototype._ishlnsubmul = function(t4, e4, n3) {
              var i2 = t4.length + n3;
              if (this.words.length < i2) {
                for (var o2 = new Array(i2), s2 = 0; s2 < this.length; s2++)
                  o2[s2] = this.words[s2];
                this.words = o2;
              } else
                s2 = this.length;
              for (this.length = Math.max(this.length, i2); s2 < this.length; s2++)
                this.words[s2] = 0;
              var a2 = 0;
              for (s2 = 0; s2 < t4.length; s2++) {
                var h2 = this.words[s2 + n3] + a2, f2 = t4.words[s2] * e4;
                a2 = ((h2 -= 67108863 & f2) >> 26) - (f2 / 67108864 | 0), this.words[s2 + n3] = 67108863 & h2;
              }
              for (; s2 < this.length - n3; s2++)
                a2 = (h2 = this.words[s2 + n3] + a2) >> 26, this.words[s2 + n3] = 67108863 & h2;
              if (0 === a2)
                return this.strip();
              for (r3(-1 === a2), a2 = 0, s2 = 0; s2 < this.length; s2++)
                a2 = (h2 = -this.words[s2] + a2) >> 26, this.words[s2] = 67108863 & h2;
              return this.sign = true, this.strip();
            }, i.prototype._wordDiv = function(t4, e4) {
              var r4 = (this.length, t4.length), n3 = this.clone(), o2 = t4, s2 = o2.words[o2.length - 1];
              0 != (r4 = 26 - this._countBits(s2)) && (o2 = o2.shln(r4), n3.ishln(r4), s2 = o2.words[o2.length - 1]);
              var a2, h2 = n3.length - o2.length;
              if ("mod" !== e4) {
                (a2 = new i(null)).length = h2 + 1, a2.words = new Array(a2.length);
                for (var f2 = 0; f2 < a2.length; f2++)
                  a2.words[f2] = 0;
              }
              var u2 = n3.clone()._ishlnsubmul(o2, 1, h2);
              u2.sign || (n3 = u2, a2 && (a2.words[h2] = 1));
              for (var c2 = h2 - 1; c2 >= 0; c2--) {
                var d2 = 67108864 * n3.words[o2.length + c2] + n3.words[o2.length + c2 - 1];
                for (d2 = Math.min(d2 / s2 | 0, 67108863), n3._ishlnsubmul(o2, d2, c2); n3.sign; )
                  d2--, n3.sign = false, n3._ishlnsubmul(o2, 1, c2), 0 !== n3.cmpn(0) && (n3.sign = !n3.sign);
                a2 && (a2.words[c2] = d2);
              }
              return a2 && a2.strip(), n3.strip(), "div" !== e4 && 0 !== r4 && n3.ishrn(r4), { div: a2 || null, mod: n3 };
            }, i.prototype.divmod = function(t4, e4) {
              if (r3(0 !== t4.cmpn(0)), this.sign && !t4.sign) {
                var n3, o2 = this.neg().divmod(t4, e4);
                return "mod" !== e4 && (s2 = o2.div.neg()), "div" !== e4 && (n3 = 0 === o2.mod.cmpn(0) ? o2.mod : t4.sub(o2.mod)), { div: s2, mod: n3 };
              }
              var s2;
              return !this.sign && t4.sign ? (o2 = this.divmod(t4.neg(), e4), "mod" !== e4 && (s2 = o2.div.neg()), { div: s2, mod: o2.mod }) : this.sign && t4.sign ? this.neg().divmod(t4.neg(), e4) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new i(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new i(this.modn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new i(this.modn(t4.words[0])) } : this._wordDiv(t4, e4);
            }, i.prototype.div = function(t4) {
              return this.divmod(t4, "div").div;
            }, i.prototype.mod = function(t4) {
              return this.divmod(t4, "mod").mod;
            }, i.prototype.divRound = function(t4) {
              var e4 = this.divmod(t4);
              if (0 === e4.mod.cmpn(0))
                return e4.div;
              var r4 = e4.div.sign ? e4.mod.isub(t4) : e4.mod, n3 = t4.shrn(1), i2 = t4.andln(1), o2 = r4.cmp(n3);
              return o2 < 0 || 1 === i2 && 0 === o2 ? e4.div : e4.div.sign ? e4.div.isubn(1) : e4.div.iaddn(1);
            }, i.prototype.modn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = (1 << 26) % t4, n3 = 0, i2 = this.length - 1; i2 >= 0; i2--)
                n3 = (e4 * n3 + this.words[i2]) % t4;
              return n3;
            }, i.prototype.idivn = function(t4) {
              r3(t4 <= 67108863);
              for (var e4 = 0, n3 = this.length - 1; n3 >= 0; n3--) {
                var i2 = this.words[n3] + 67108864 * e4;
                this.words[n3] = i2 / t4 | 0, e4 = i2 % t4;
              }
              return this.strip();
            }, i.prototype.divn = function(t4) {
              return this.clone().idivn(t4);
            }, i.prototype.egcd = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = new i(0), h2 = new i(1), f2 = 0; e4.isEven() && n3.isEven(); )
                e4.ishrn(1), n3.ishrn(1), ++f2;
              for (var u2 = n3.clone(), c2 = e4.clone(); 0 !== e4.cmpn(0); ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() && s2.isEven() ? (o2.ishrn(1), s2.ishrn(1)) : (o2.iadd(u2).ishrn(1), s2.isub(c2).ishrn(1));
                for (; n3.isEven(); )
                  n3.ishrn(1), a2.isEven() && h2.isEven() ? (a2.ishrn(1), h2.ishrn(1)) : (a2.iadd(u2).ishrn(1), h2.isub(c2).ishrn(1));
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(a2), s2.isub(h2)) : (n3.isub(e4), a2.isub(o2), h2.isub(s2));
              }
              return { a: a2, b: h2, gcd: n3.ishln(f2) };
            }, i.prototype._invmp = function(t4) {
              r3(!t4.sign), r3(0 !== t4.cmpn(0));
              var e4 = this, n3 = t4.clone();
              e4 = e4.sign ? e4.mod(t4) : e4.clone();
              for (var o2 = new i(1), s2 = new i(0), a2 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1), o2.isEven() ? o2.ishrn(1) : o2.iadd(a2).ishrn(1);
                for (; n3.isEven(); )
                  n3.ishrn(1), s2.isEven() ? s2.ishrn(1) : s2.iadd(a2).ishrn(1);
                e4.cmp(n3) >= 0 ? (e4.isub(n3), o2.isub(s2)) : (n3.isub(e4), s2.isub(o2));
              }
              return 0 === e4.cmpn(1) ? o2 : s2;
            }, i.prototype.gcd = function(t4) {
              if (0 === this.cmpn(0))
                return t4.clone();
              if (0 === t4.cmpn(0))
                return this.clone();
              var e4 = this.clone(), r4 = t4.clone();
              e4.sign = false, r4.sign = false;
              for (var n3 = 0; e4.isEven() && r4.isEven(); n3++)
                e4.ishrn(1), r4.ishrn(1);
              for (; ; ) {
                for (; e4.isEven(); )
                  e4.ishrn(1);
                for (; r4.isEven(); )
                  r4.ishrn(1);
                var i2 = e4.cmp(r4);
                if (i2 < 0) {
                  var o2 = e4;
                  e4 = r4, r4 = o2;
                } else if (0 === i2 || 0 === r4.cmpn(1))
                  break;
                e4.isub(r4);
              }
              return r4.ishln(n3);
            }, i.prototype.invm = function(t4) {
              return this.egcd(t4).a.mod(t4);
            }, i.prototype.isEven = function() {
              return 0 == (1 & this.words[0]);
            }, i.prototype.isOdd = function() {
              return 1 == (1 & this.words[0]);
            }, i.prototype.andln = function(t4) {
              return this.words[0] & t4;
            }, i.prototype.bincn = function(t4) {
              r3("number" == typeof t4);
              var e4 = t4 % 26, n3 = (t4 - e4) / 26, i2 = 1 << e4;
              if (this.length <= n3) {
                for (var o2 = this.length; o2 < n3 + 1; o2++)
                  this.words[o2] = 0;
                return this.words[n3] |= i2, this.length = n3 + 1, this;
              }
              var s2 = i2;
              for (o2 = n3; 0 !== s2 && o2 < this.length; o2++) {
                var a2 = this.words[o2];
                s2 = (a2 += s2) >>> 26, a2 &= 67108863, this.words[o2] = a2;
              }
              return 0 !== s2 && (this.words[o2] = s2, this.length++), this;
            }, i.prototype.cmpn = function(t4) {
              var e4, r4 = t4 < 0;
              if (r4 && (t4 = -t4), this.sign && !r4)
                return -1;
              if (!this.sign && r4)
                return 1;
              if (t4 &= 67108863, this.strip(), this.length > 1)
                e4 = 1;
              else {
                var n3 = this.words[0];
                e4 = n3 === t4 ? 0 : n3 < t4 ? -1 : 1;
              }
              return this.sign && (e4 = -e4), e4;
            }, i.prototype.cmp = function(t4) {
              if (this.sign && !t4.sign)
                return -1;
              if (!this.sign && t4.sign)
                return 1;
              var e4 = this.ucmp(t4);
              return this.sign ? -e4 : e4;
            }, i.prototype.ucmp = function(t4) {
              if (this.length > t4.length)
                return 1;
              if (this.length < t4.length)
                return -1;
              for (var e4 = 0, r4 = this.length - 1; r4 >= 0; r4--) {
                var n3 = this.words[r4], i2 = t4.words[r4];
                if (n3 !== i2) {
                  n3 < i2 ? e4 = -1 : n3 > i2 && (e4 = 1);
                  break;
                }
              }
              return e4;
            }, i.red = function(t4) {
              return new y(t4);
            }, i.prototype.toRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), r3(!this.sign, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
            }, i.prototype.fromRed = function() {
              return r3(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
            }, i.prototype._forceRed = function(t4) {
              return this.red = t4, this;
            }, i.prototype.forceRed = function(t4) {
              return r3(!this.red, "Already a number in reduction context"), this._forceRed(t4);
            }, i.prototype.redAdd = function(t4) {
              return r3(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
            }, i.prototype.redIAdd = function(t4) {
              return r3(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
            }, i.prototype.redSub = function(t4) {
              return r3(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
            }, i.prototype.redISub = function(t4) {
              return r3(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
            }, i.prototype.redShl = function(t4) {
              return r3(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
            }, i.prototype.redMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
            }, i.prototype.redIMul = function(t4) {
              return r3(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
            }, i.prototype.redSqr = function() {
              return r3(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
            }, i.prototype.redISqr = function() {
              return r3(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
            }, i.prototype.redSqrt = function() {
              return r3(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
            }, i.prototype.redInvm = function() {
              return r3(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
            }, i.prototype.redNeg = function() {
              return r3(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
            }, i.prototype.redPow = function(t4) {
              return r3(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
            };
            var u = { k256: null, p224: null, p192: null, p25519: null };
            function c(t4, e4) {
              this.name = t4, this.p = new i(e4, 16), this.n = this.p.bitLength(), this.k = new i(1).ishln(this.n).isub(this.p), this.tmp = this._tmp();
            }
            function d() {
              c.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            function l() {
              c.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            function p() {
              c.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            function g() {
              c.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            function y(t4) {
              if ("string" == typeof t4) {
                var e4 = i._prime(t4);
                this.m = e4.p, this.prime = e4;
              } else
                this.m = t4, this.prime = null;
            }
            function m(t4) {
              y.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).ishln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv.sign = true, this.minv = this.minv.mod(this.r);
            }
            c.prototype._tmp = function() {
              var t4 = new i(null);
              return t4.words = new Array(Math.ceil(this.n / 13)), t4;
            }, c.prototype.ireduce = function(t4) {
              var e4, r4 = t4;
              do {
                this.split(r4, this.tmp), e4 = (r4 = (r4 = this.imulK(r4)).iadd(this.tmp)).bitLength();
              } while (e4 > this.n);
              var n3 = e4 < this.n ? -1 : r4.ucmp(this.p);
              return 0 === n3 ? (r4.words[0] = 0, r4.length = 1) : n3 > 0 ? r4.isub(this.p) : r4.strip(), r4;
            }, c.prototype.split = function(t4, e4) {
              t4.ishrn(this.n, 0, e4);
            }, c.prototype.imulK = function(t4) {
              return t4.imul(this.k);
            }, n2(d, c), d.prototype.split = function(t4, e4) {
              for (var r4 = 4194303, n3 = Math.min(t4.length, 9), i2 = 0; i2 < n3; i2++)
                e4.words[i2] = t4.words[i2];
              if (e4.length = n3, t4.length <= 9)
                return t4.words[0] = 0, void (t4.length = 1);
              var o2 = t4.words[9];
              for (e4.words[e4.length++] = o2 & r4, i2 = 10; i2 < t4.length; i2++) {
                var s2 = t4.words[i2];
                t4.words[i2 - 10] = (s2 & r4) << 4 | o2 >>> 22, o2 = s2;
              }
              t4.words[i2 - 10] = o2 >>> 22, t4.length -= 9;
            }, d.prototype.imulK = function(t4) {
              var e4;
              t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
              for (var r4 = 0, n3 = 0; n3 < t4.length; n3++) {
                var i2 = t4.words[n3];
                e4 = 64 * i2, e4 += (r4 += 977 * i2) / 67108864 | 0, r4 &= 67108863, t4.words[n3] = r4, r4 = e4;
              }
              return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
            }, n2(l, c), n2(p, c), n2(g, c), g.prototype.imulK = function(t4) {
              for (var e4 = 0, r4 = 0; r4 < t4.length; r4++) {
                var n3 = 19 * t4.words[r4] + e4, i2 = 67108863 & n3;
                n3 >>>= 26, t4.words[r4] = i2, e4 = n3;
              }
              return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
            }, i._prime = function(t4) {
              if (u[t4])
                return u[t4];
              var e4;
              if ("k256" === t4)
                e4 = new d();
              else if ("p224" === t4)
                e4 = new l();
              else if ("p192" === t4)
                e4 = new p();
              else {
                if ("p25519" !== t4)
                  throw new Error("Unknown prime " + t4);
                e4 = new g();
              }
              return u[t4] = e4, e4;
            }, y.prototype._verify1 = function(t4) {
              r3(!t4.sign, "red works only with positives"), r3(t4.red, "red works only with red numbers");
            }, y.prototype._verify2 = function(t4, e4) {
              r3(!t4.sign && !e4.sign, "red works only with positives"), r3(t4.red && t4.red === e4.red, "red works only with red numbers");
            }, y.prototype.imod = function(t4) {
              return this.prime ? this.prime.ireduce(t4)._forceRed(this) : t4.mod(this.m)._forceRed(this);
            }, y.prototype.neg = function(t4) {
              var e4 = t4.clone();
              return e4.sign = !e4.sign, e4.iadd(this.m)._forceRed(this);
            }, y.prototype.add = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.add(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4._forceRed(this);
            }, y.prototype.iadd = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.iadd(e4);
              return r4.cmp(this.m) >= 0 && r4.isub(this.m), r4;
            }, y.prototype.sub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.sub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4._forceRed(this);
            }, y.prototype.isub = function(t4, e4) {
              this._verify2(t4, e4);
              var r4 = t4.isub(e4);
              return r4.cmpn(0) < 0 && r4.iadd(this.m), r4;
            }, y.prototype.shl = function(t4, e4) {
              return this._verify1(t4), this.imod(t4.shln(e4));
            }, y.prototype.imul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.imul(e4));
            }, y.prototype.mul = function(t4, e4) {
              return this._verify2(t4, e4), this.imod(t4.mul(e4));
            }, y.prototype.isqr = function(t4) {
              return this.imul(t4, t4);
            }, y.prototype.sqr = function(t4) {
              return this.mul(t4, t4);
            }, y.prototype.sqrt = function(t4) {
              if (0 === t4.cmpn(0))
                return t4.clone();
              var e4 = this.m.andln(3);
              if (r3(e4 % 2 == 1), 3 === e4) {
                var n3 = this.m.add(new i(1)).ishrn(2);
                return this.pow(t4, n3);
              }
              for (var o2 = this.m.subn(1), s2 = 0; 0 !== o2.cmpn(0) && 0 === o2.andln(1); )
                s2++, o2.ishrn(1);
              r3(0 !== o2.cmpn(0));
              var a2 = new i(1).toRed(this), h2 = a2.redNeg(), f2 = this.m.subn(1).ishrn(1), u2 = this.m.bitLength();
              for (u2 = new i(2 * u2 * u2).toRed(this); 0 !== this.pow(u2, f2).cmp(h2); )
                u2.redIAdd(h2);
              for (var c2 = this.pow(u2, o2), d2 = this.pow(t4, o2.addn(1).ishrn(1)), l2 = this.pow(t4, o2), p2 = s2; 0 !== l2.cmp(a2); ) {
                for (var g2 = l2, y2 = 0; 0 !== g2.cmp(a2); y2++)
                  g2 = g2.redSqr();
                r3(y2 < p2);
                var m2 = this.pow(c2, new i(1).ishln(p2 - y2 - 1));
                d2 = d2.redMul(m2), c2 = m2.redSqr(), l2 = l2.redMul(c2), p2 = y2;
              }
              return d2;
            }, y.prototype.invm = function(t4) {
              var e4 = t4._invmp(this.m);
              return e4.sign ? (e4.sign = false, this.imod(e4).redNeg()) : this.imod(e4);
            }, y.prototype.pow = function(t4, e4) {
              var r4 = [];
              if (0 === e4.cmpn(0))
                return new i(1);
              for (var n3 = e4.clone(); 0 !== n3.cmpn(0); )
                r4.push(n3.andln(1)), n3.ishrn(1);
              for (var o2 = t4, s2 = 0; s2 < r4.length && 0 === r4[s2]; s2++, o2 = this.sqr(o2))
                ;
              if (++s2 < r4.length)
                for (n3 = this.sqr(o2); s2 < r4.length; s2++, n3 = this.sqr(n3))
                  0 !== r4[s2] && (o2 = this.mul(o2, n3));
              return o2;
            }, y.prototype.convertTo = function(t4) {
              var e4 = t4.mod(this.m);
              return e4 === t4 ? e4.clone() : e4;
            }, y.prototype.convertFrom = function(t4) {
              var e4 = t4.clone();
              return e4.red = null, e4;
            }, i.mont = function(t4) {
              return new m(t4);
            }, n2(m, y), m.prototype.convertTo = function(t4) {
              return this.imod(t4.shln(this.shift));
            }, m.prototype.convertFrom = function(t4) {
              var e4 = this.imod(t4.mul(this.rinv));
              return e4.red = null, e4;
            }, m.prototype.imul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return t4.words[0] = 0, t4.length = 1, t4;
              var r4 = t4.imul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r4.isub(n3).ishrn(this.shift), o2 = i2;
              return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
            }, m.prototype.mul = function(t4, e4) {
              if (0 === t4.cmpn(0) || 0 === e4.cmpn(0))
                return new i(0)._forceRed(this);
              var r4 = t4.mul(e4), n3 = r4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), o2 = r4.isub(n3).ishrn(this.shift), s2 = o2;
              return o2.cmp(this.m) >= 0 ? s2 = o2.isub(this.m) : o2.cmpn(0) < 0 && (s2 = o2.iadd(this.m)), s2._forceRed(this);
            }, m.prototype.invm = function(t4) {
              return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
            };
          }(t2 = r2.nmd(t2), this);
        }, 26138: (t2, e2, r2) => {
          var n2 = r2(70980), i = r2(99199), o = r2(57859), s = r2(92144), a = r2(23663), h = r2(23482), f = r2(84818);
          t2.exports = function(t3, e3, r3) {
            var u;
            u = t3.padding ? t3.padding : r3 ? 1 : 4;
            var c, d = n2(t3), l = d.modulus.byteLength();
            if (e3.length > l || new s(e3).cmp(d.modulus) >= 0)
              throw new Error("decryption error");
            c = r3 ? f(new s(e3), d) : a(e3, d);
            var p = new Buffer(l - c.length);
            if (p.fill(0), c = Buffer.concat([p, c], l), 4 === u)
              return function(t4, e4) {
                t4.modulus;
                var r4 = t4.modulus.byteLength(), n3 = (e4.length, h("sha1").update(new Buffer("")).digest()), s2 = n3.length;
                if (0 !== e4[0])
                  throw new Error("decryption error");
                var a2 = e4.slice(1, s2 + 1), f2 = e4.slice(s2 + 1), u2 = o(a2, i(f2, s2)), c2 = o(f2, i(u2, r4 - s2 - 1));
                if (function(t5, e5) {
                  t5 = new Buffer(t5), e5 = new Buffer(e5);
                  var r5 = 0, n4 = t5.length;
                  t5.length !== e5.length && (r5++, n4 = Math.min(t5.length, e5.length));
                  for (var i2 = -1; ++i2 < n4; )
                    r5 += t5[i2] ^ e5[i2];
                  return r5;
                }(n3, c2.slice(0, s2)))
                  throw new Error("decryption error");
                for (var d2 = s2; 0 === c2[d2]; )
                  d2++;
                if (1 !== c2[d2++])
                  throw new Error("decryption error");
                return c2.slice(d2);
              }(d, c);
            if (1 === u)
              return function(t4, e4, r4) {
                for (var n3 = e4.slice(0, 2), i2 = 2, o2 = 0; 0 !== e4[i2++]; )
                  if (i2 >= e4.length) {
                    o2++;
                    break;
                  }
                var s2 = e4.slice(2, i2 - 1);
                if (e4.slice(i2 - 1, i2), ("0002" !== n3.toString("hex") && !r4 || "0001" !== n3.toString("hex") && r4) && o2++, s2.length < 8 && o2++, o2)
                  throw new Error("decryption error");
                return e4.slice(i2);
              }(0, c, r3);
            if (3 === u)
              return c;
            throw new Error("unknown padding");
          };
        }, 16559: (t2, e2, r2) => {
          var n2 = r2(70980), i = r2(61798), o = r2(23482), s = r2(99199), a = r2(57859), h = r2(92144), f = r2(84818), u = r2(23663);
          t2.exports = function(t3, e3, r3) {
            var c;
            c = t3.padding ? t3.padding : r3 ? 1 : 4;
            var d, l = n2(t3);
            if (4 === c)
              d = function(t4, e4) {
                var r4 = t4.modulus.byteLength(), n3 = e4.length, f2 = o("sha1").update(new Buffer("")).digest(), u2 = f2.length, c2 = 2 * u2;
                if (n3 > r4 - c2 - 2)
                  throw new Error("message too long");
                var d2 = new Buffer(r4 - n3 - c2 - 2);
                d2.fill(0);
                var l2 = r4 - u2 - 1, p = i(u2), g = a(Buffer.concat([f2, d2, new Buffer([1]), e4], l2), s(p, l2)), y = a(p, s(g, u2));
                return new h(Buffer.concat([new Buffer([0]), y, g], r4));
              }(l, e3);
            else if (1 === c)
              d = function(t4, e4, r4) {
                var n3, o2 = e4.length, s2 = t4.modulus.byteLength();
                if (o2 > s2 - 11)
                  throw new Error("message too long");
                return r4 ? (n3 = new Buffer(s2 - o2 - 3)).fill(255) : n3 = function(t5, e5) {
                  for (var r5, n4 = new Buffer(t5), o3 = 0, s3 = i(2 * t5), a2 = 0; o3 < t5; )
                    a2 === s3.length && (s3 = i(2 * t5), a2 = 0), (r5 = s3[a2++]) && (n4[o3++] = r5);
                  return n4;
                }(s2 - o2 - 3), new h(Buffer.concat([new Buffer([0, r4 ? 1 : 2]), n3, new Buffer([0]), e4], s2));
              }(l, e3, r3);
            else {
              if (3 !== c)
                throw new Error("unknown padding");
              if ((d = new h(e3)).cmp(l.modulus) >= 0)
                throw new Error("data too long for modulus");
            }
            return r3 ? u(d, l) : f(d, l);
          };
        }, 84818: (t2, e2, r2) => {
          var n2 = r2(92144);
          t2.exports = function(t3, e3) {
            return new Buffer(t3.toRed(n2.mont(e3.modulus)).redPow(new n2(e3.publicExponent)).fromRed().toArray());
          };
        }, 57859: (t2) => {
          t2.exports = function(t3, e2) {
            for (var r2 = t3.length, n2 = -1; ++n2 < r2; )
              t3[n2] ^= e2[n2];
            return t3;
          };
        }, 13815: function(t2, e2, r2) {
          var n2;
          n2 = function() {
            return function() {
              var t3 = function(t4, e4, r4, n4, i2, o2) {
                for (var s2 = function(t5, e5) {
                  var r5 = t5.toString(16);
                  return r5.length < 2 && (r5 = "0" + r5), e5 && (r5 = r5.toUpperCase()), r5;
                }, a2 = e4; a2 <= r4; a2++)
                  i2[o2++] = s2(t4[a2], n4);
                return i2;
              }, e3 = function(t4, e4, r4, n4, i2) {
                for (var o2 = e4; o2 <= r4; o2 += 2)
                  n4[i2++] = parseInt(t4.substr(o2, 2), 16);
              }, r3 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#".split(""), n3 = [0, 68, 0, 84, 83, 82, 72, 0, 75, 76, 70, 65, 0, 63, 62, 69, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64, 0, 73, 66, 74, 71, 81, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 0, 78, 67, 0, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 79, 0, 80, 0, 0], i = function(t4, e4) {
                var r4 = { ibits: 8, obits: 8, obigendian: true };
                for (var n4 in e4)
                  void 0 !== r4[n4] && (r4[n4] = e4[n4]);
                for (var i2, o2, s2, a2 = [], h2 = 0, f2 = 0, u2 = 0, c2 = t4.length; 0 === f2 && (o2 = t4.charCodeAt(h2++)), i2 = o2 >> r4.ibits - (f2 + 8) & 255, f2 = (f2 + 8) % r4.ibits, r4.obigendian ? 0 === u2 ? s2 = i2 << r4.obits - 8 : s2 |= i2 << r4.obits - 8 - u2 : 0 === u2 ? s2 = i2 : s2 |= i2 << u2, !(0 == (u2 = (u2 + 8) % r4.obits) && (a2.push(s2), h2 >= c2)); )
                  ;
                return a2;
              }, o = function(t4, e4) {
                var r4 = { ibits: 32, ibigendian: true };
                for (var n4 in e4)
                  void 0 !== r4[n4] && (r4[n4] = e4[n4]);
                var i2 = "", o2 = 4294967295;
                r4.ibits < 32 && (o2 = (1 << r4.ibits) - 1);
                for (var s2 = t4.length, a2 = 0; a2 < s2; a2++)
                  for (var h2 = t4[a2] & o2, f2 = 0; f2 < r4.ibits; f2 += 8)
                    r4.ibigendian ? i2 += String.fromCharCode(h2 >> r4.ibits - 8 - f2 & 255) : i2 += String.fromCharCode(h2 >> f2 & 255);
                return i2;
              }, s = 256, a = function(t4, e4, r4, n4, i2, o2, s2, a2) {
                return [a2, s2, o2, i2, n4, r4, e4, t4];
              }, h = function() {
                return a(0, 0, 0, 0, 0, 0, 0, 0);
              }, f = function(t4) {
                return t4.slice(0);
              }, u = function(t4) {
                for (var e4 = h(), r4 = 0; r4 < 8; r4++)
                  e4[r4] = Math.floor(t4 % s), t4 /= s;
                return e4;
              }, c = function(t4) {
                for (var e4 = 0, r4 = 7; r4 >= 0; r4--)
                  e4 *= s, e4 += t4[r4];
                return Math.floor(e4);
              }, d = function(t4, e4) {
                for (var r4 = 0, n4 = 0; n4 < 8; n4++)
                  r4 += t4[n4] + e4[n4], t4[n4] = Math.floor(r4 % s), r4 = Math.floor(r4 / s);
                return r4;
              }, l = function(t4, e4) {
                for (var r4 = 0, n4 = 0; n4 < 8; n4++)
                  r4 += t4[n4] * e4, t4[n4] = Math.floor(r4 % s), r4 = Math.floor(r4 / s);
                return r4;
              }, p = function(t4, e4) {
                for (var r4 = 0; r4 < 8; r4++)
                  t4[r4] &= e4[r4];
                return t4;
              }, g = function(t4, e4) {
                var r4 = h();
                if (e4 % 8 != 0)
                  throw new Error("ui64_rorn: only bit rotations supported with a multiple of digit bits");
                for (var n4 = Math.floor(e4 / 8), i2 = 0; i2 < n4; i2++) {
                  for (var o2 = 6; o2 >= 0; o2--)
                    r4[o2 + 1] = r4[o2];
                  for (r4[0] = t4[0], o2 = 0; o2 < 7; o2++)
                    t4[o2] = t4[o2 + 1];
                  t4[o2] = 0;
                }
                return c(r4);
              }, y = function(t4, e4) {
                if (e4 > 64)
                  throw new Error("ui64_ror: invalid number of bits to shift");
                var r4, n4 = new Array(16);
                for (r4 = 0; r4 < 8; r4++)
                  n4[r4 + 8] = t4[r4], n4[r4] = 0;
                var i2 = Math.floor(e4 / 8), o2 = e4 % 8;
                for (r4 = i2; r4 < 15; r4++)
                  n4[r4 - i2] = 255 & (n4[r4] >>> o2 | n4[r4 + 1] << 8 - o2);
                for (n4[15 - i2] = n4[15] >>> o2 & 255, r4 = 15 - i2 + 1; r4 < 16; r4++)
                  n4[r4] = 0;
                for (r4 = 0; r4 < 8; r4++)
                  t4[r4] = n4[r4 + 8];
                return n4.slice(0, 8);
              }, m = function(t4, e4) {
                for (var r4 = 0; r4 < 8; r4++)
                  t4[r4] ^= e4[r4];
              }, v = function(t4, e4) {
                var r4 = (65535 & t4) + (65535 & e4);
                return (t4 >> 16) + (e4 >> 16) + (r4 >> 16) << 16 | 65535 & r4;
              }, b = function(t4, e4) {
                return t4 << e4 & 4294967295 | t4 >>> 32 - e4 & 4294967295;
              }, w = function(t4) {
                return o(function(t5, e4) {
                  function r4(t6, e5, r5, n5) {
                    return t6 < 20 ? e5 & r5 | ~e5 & n5 : t6 < 40 ? e5 ^ r5 ^ n5 : t6 < 60 ? e5 & r5 | e5 & n5 | r5 & n5 : e5 ^ r5 ^ n5;
                  }
                  function n4(t6) {
                    return t6 < 20 ? 1518500249 : t6 < 40 ? 1859775393 : t6 < 60 ? -1894007588 : -899497514;
                  }
                  t5[e4 >> 5] |= 128 << 24 - e4 % 32, t5[15 + (e4 + 64 >> 9 << 4)] = e4;
                  for (var i2 = Array(80), o2 = 1732584193, s2 = -271733879, a2 = -1732584194, h2 = 271733878, f2 = -1009589776, u2 = 0; u2 < t5.length; u2 += 16) {
                    for (var c2 = o2, d2 = s2, l2 = a2, p2 = h2, g2 = f2, y2 = 0; y2 < 80; y2++) {
                      i2[y2] = y2 < 16 ? t5[u2 + y2] : b(i2[y2 - 3] ^ i2[y2 - 8] ^ i2[y2 - 14] ^ i2[y2 - 16], 1);
                      var m2 = v(v(b(o2, 5), r4(y2, s2, a2, h2)), v(v(f2, i2[y2]), n4(y2)));
                      f2 = h2, h2 = a2, a2 = b(s2, 30), s2 = o2, o2 = m2;
                    }
                    o2 = v(o2, c2), s2 = v(s2, d2), a2 = v(a2, l2), h2 = v(h2, p2), f2 = v(f2, g2);
                  }
                  return [o2, s2, a2, h2, f2];
                }(i(t4, { ibits: 8, obits: 32, obigendian: true }), 8 * t4.length), { ibits: 32, ibigendian: true });
              }, _ = function(t4) {
                return o(function(t5, e4) {
                  function r4(t6, e5, r5, n5, i3, o3) {
                    return v(b(v(v(e5, t6), v(n5, o3)), i3), r5);
                  }
                  function n4(t6, e5, n5, i3, o3, s3, a3) {
                    return r4(e5 & n5 | ~e5 & i3, t6, e5, o3, s3, a3);
                  }
                  function i2(t6, e5, n5, i3, o3, s3, a3) {
                    return r4(e5 & i3 | n5 & ~i3, t6, e5, o3, s3, a3);
                  }
                  function o2(t6, e5, n5, i3, o3, s3, a3) {
                    return r4(e5 ^ n5 ^ i3, t6, e5, o3, s3, a3);
                  }
                  function s2(t6, e5, n5, i3, o3, s3, a3) {
                    return r4(n5 ^ (e5 | ~i3), t6, e5, o3, s3, a3);
                  }
                  t5[e4 >> 5] |= 128 << e4 % 32, t5[14 + (e4 + 64 >>> 9 << 4)] = e4;
                  for (var a2 = 1732584193, h2 = -271733879, f2 = -1732584194, u2 = 271733878, c2 = 0; c2 < t5.length; c2 += 16) {
                    var d2 = a2, l2 = h2, p2 = f2, g2 = u2;
                    a2 = n4(a2, h2, f2, u2, t5[c2 + 0], 7, -680876936), u2 = n4(u2, a2, h2, f2, t5[c2 + 1], 12, -389564586), f2 = n4(f2, u2, a2, h2, t5[c2 + 2], 17, 606105819), h2 = n4(h2, f2, u2, a2, t5[c2 + 3], 22, -1044525330), a2 = n4(a2, h2, f2, u2, t5[c2 + 4], 7, -176418897), u2 = n4(u2, a2, h2, f2, t5[c2 + 5], 12, 1200080426), f2 = n4(f2, u2, a2, h2, t5[c2 + 6], 17, -1473231341), h2 = n4(h2, f2, u2, a2, t5[c2 + 7], 22, -45705983), a2 = n4(a2, h2, f2, u2, t5[c2 + 8], 7, 1770035416), u2 = n4(u2, a2, h2, f2, t5[c2 + 9], 12, -1958414417), f2 = n4(f2, u2, a2, h2, t5[c2 + 10], 17, -42063), h2 = n4(h2, f2, u2, a2, t5[c2 + 11], 22, -1990404162), a2 = n4(a2, h2, f2, u2, t5[c2 + 12], 7, 1804603682), u2 = n4(u2, a2, h2, f2, t5[c2 + 13], 12, -40341101), f2 = n4(f2, u2, a2, h2, t5[c2 + 14], 17, -1502002290), a2 = i2(a2, h2 = n4(h2, f2, u2, a2, t5[c2 + 15], 22, 1236535329), f2, u2, t5[c2 + 1], 5, -165796510), u2 = i2(u2, a2, h2, f2, t5[c2 + 6], 9, -1069501632), f2 = i2(f2, u2, a2, h2, t5[c2 + 11], 14, 643717713), h2 = i2(h2, f2, u2, a2, t5[c2 + 0], 20, -373897302), a2 = i2(a2, h2, f2, u2, t5[c2 + 5], 5, -701558691), u2 = i2(u2, a2, h2, f2, t5[c2 + 10], 9, 38016083), f2 = i2(f2, u2, a2, h2, t5[c2 + 15], 14, -660478335), h2 = i2(h2, f2, u2, a2, t5[c2 + 4], 20, -405537848), a2 = i2(a2, h2, f2, u2, t5[c2 + 9], 5, 568446438), u2 = i2(u2, a2, h2, f2, t5[c2 + 14], 9, -1019803690), f2 = i2(f2, u2, a2, h2, t5[c2 + 3], 14, -187363961), h2 = i2(h2, f2, u2, a2, t5[c2 + 8], 20, 1163531501), a2 = i2(a2, h2, f2, u2, t5[c2 + 13], 5, -1444681467), u2 = i2(u2, a2, h2, f2, t5[c2 + 2], 9, -51403784), f2 = i2(f2, u2, a2, h2, t5[c2 + 7], 14, 1735328473), a2 = o2(a2, h2 = i2(h2, f2, u2, a2, t5[c2 + 12], 20, -1926607734), f2, u2, t5[c2 + 5], 4, -378558), u2 = o2(u2, a2, h2, f2, t5[c2 + 8], 11, -2022574463), f2 = o2(f2, u2, a2, h2, t5[c2 + 11], 16, 1839030562), h2 = o2(h2, f2, u2, a2, t5[c2 + 14], 23, -35309556), a2 = o2(a2, h2, f2, u2, t5[c2 + 1], 4, -1530992060), u2 = o2(u2, a2, h2, f2, t5[c2 + 4], 11, 1272893353), f2 = o2(f2, u2, a2, h2, t5[c2 + 7], 16, -155497632), h2 = o2(h2, f2, u2, a2, t5[c2 + 10], 23, -1094730640), a2 = o2(a2, h2, f2, u2, t5[c2 + 13], 4, 681279174), u2 = o2(u2, a2, h2, f2, t5[c2 + 0], 11, -358537222), f2 = o2(f2, u2, a2, h2, t5[c2 + 3], 16, -722521979), h2 = o2(h2, f2, u2, a2, t5[c2 + 6], 23, 76029189), a2 = o2(a2, h2, f2, u2, t5[c2 + 9], 4, -640364487), u2 = o2(u2, a2, h2, f2, t5[c2 + 12], 11, -421815835), f2 = o2(f2, u2, a2, h2, t5[c2 + 15], 16, 530742520), a2 = s2(a2, h2 = o2(h2, f2, u2, a2, t5[c2 + 2], 23, -995338651), f2, u2, t5[c2 + 0], 6, -198630844), u2 = s2(u2, a2, h2, f2, t5[c2 + 7], 10, 1126891415), f2 = s2(f2, u2, a2, h2, t5[c2 + 14], 15, -1416354905), h2 = s2(h2, f2, u2, a2, t5[c2 + 5], 21, -57434055), a2 = s2(a2, h2, f2, u2, t5[c2 + 12], 6, 1700485571), u2 = s2(u2, a2, h2, f2, t5[c2 + 3], 10, -1894986606), f2 = s2(f2, u2, a2, h2, t5[c2 + 10], 15, -1051523), h2 = s2(h2, f2, u2, a2, t5[c2 + 1], 21, -2054922799), a2 = s2(a2, h2, f2, u2, t5[c2 + 8], 6, 1873313359), u2 = s2(u2, a2, h2, f2, t5[c2 + 15], 10, -30611744), f2 = s2(f2, u2, a2, h2, t5[c2 + 6], 15, -1560198380), h2 = s2(h2, f2, u2, a2, t5[c2 + 13], 21, 1309151649), a2 = s2(a2, h2, f2, u2, t5[c2 + 4], 6, -145523070), u2 = s2(u2, a2, h2, f2, t5[c2 + 11], 10, -1120210379), f2 = s2(f2, u2, a2, h2, t5[c2 + 2], 15, 718787259), h2 = s2(h2, f2, u2, a2, t5[c2 + 9], 21, -343485551), a2 = v(a2, d2), h2 = v(h2, l2), f2 = v(f2, p2), u2 = v(u2, g2);
                  }
                  return [a2, h2, f2, u2];
                }(i(t4, { ibits: 8, obits: 32, obigendian: false }), 8 * t4.length), { ibits: 32, ibigendian: false });
              }, k = function(t4) {
                this.mul = a(88, 81, 244, 45, 76, 149, 127, 45), this.inc = a(20, 5, 123, 126, 247, 103, 129, 79), this.mask = a(0, 0, 0, 0, 255, 255, 255, 255), this.state = f(this.inc), this.next(), p(this.state, this.mask), t4 = u(void 0 !== t4 ? t4 >>> 0 : 4294967295 * Math.random() >>> 0), function(t5, e4) {
                  for (var r4 = 0; r4 < 8; r4++)
                    t5[r4] |= e4[r4];
                }(this.state, t4), this.next();
              };
              k.prototype.next = function() {
                var t4 = f(this.state);
                (function(t5, e5) {
                  var r5, n5, i3, o2 = new Array(16);
                  for (r5 = 0; r5 < 16; r5++)
                    o2[r5] = 0;
                  for (r5 = 0; r5 < 8; r5++) {
                    for (i3 = 0, n5 = 0; n5 < 8; n5++)
                      i3 += t5[r5] * e5[n5] + o2[r5 + n5], o2[r5 + n5] = i3 % s, i3 /= s;
                    for (; n5 < 16 - r5; n5++)
                      i3 += o2[r5 + n5], o2[r5 + n5] = i3 % s, i3 /= s;
                  }
                  for (r5 = 0; r5 < 8; r5++)
                    t5[r5] = o2[r5];
                  o2.slice(8, 8);
                })(this.state, this.mul), d(this.state, this.inc);
                var e4 = f(t4);
                y(e4, 18), m(e4, t4), y(e4, 27);
                var r4 = f(t4);
                y(r4, 59), p(e4, this.mask);
                var n4 = c(r4), i2 = f(e4);
                return function(t5, e5) {
                  if (e5 > 64)
                    throw new Error("ui64_rol: invalid number of bits to shift");
                  var r5, n5 = new Array(16);
                  for (r5 = 0; r5 < 8; r5++)
                    n5[r5 + 8] = 0, n5[r5] = t5[r5];
                  var i3 = Math.floor(e5 / 8), o2 = e5 % 8;
                  for (r5 = 7 - i3; r5 > 0; r5--)
                    n5[r5 + i3] = 255 & (n5[r5] << o2 | n5[r5 - 1] >>> 8 - o2);
                  for (n5[0 + i3] = n5[0] << o2 & 255, r5 = 0 + i3 - 1; r5 >= 0; r5--)
                    n5[r5] = 0;
                  for (r5 = 0; r5 < 8; r5++)
                    t5[r5] = n5[r5];
                  n5.slice(8, 8);
                }(i2, 32 - n4), y(e4, n4), m(e4, i2), c(e4);
              };
              var S = new k(), A = function(t4, e4) {
                for (var r4 = [], n4 = 0; n4 < t4; n4++)
                  r4[n4] = S.next() % e4;
                return r4;
              }, x = 0, M = 0, E = function() {
                if (1 === arguments.length && "string" == typeof arguments[0])
                  this.parse.apply(this, arguments);
                else if (arguments.length >= 1 && "number" == typeof arguments[0])
                  this.make.apply(this, arguments);
                else {
                  if (arguments.length >= 1)
                    throw new Error("UUID: constructor: invalid arguments");
                  for (var t4 = 0; t4 < 16; t4++)
                    this[t4] = 0;
                }
              };
              return (E.prototype = "undefined" != typeof Uint8Array ? new Uint8Array(16) : Buffer ? Buffer.alloc(16) : new Array(16)).constructor = E, E.prototype.make = function(t4) {
                var e4, r4 = this;
                if (1 === t4) {
                  var n4 = new Date().getTime();
                  n4 !== x ? M = 0 : M++, x = n4;
                  var i2, o2 = u(n4);
                  l(o2, 1e4), d(o2, a(1, 178, 29, 210, 19, 129, 64, 0)), M > 0 && d(o2, u(M)), i2 = g(o2, 8), r4[3] = 255 & i2, i2 = g(o2, 8), r4[2] = 255 & i2, i2 = g(o2, 8), r4[1] = 255 & i2, i2 = g(o2, 8), r4[0] = 255 & i2, i2 = g(o2, 8), r4[5] = 255 & i2, i2 = g(o2, 8), r4[4] = 255 & i2, i2 = g(o2, 8), r4[7] = 255 & i2, i2 = g(o2, 8), r4[6] = 15 & i2;
                  var s2 = A(2, 255);
                  r4[8] = s2[0], r4[9] = s2[1];
                  var h2 = A(6, 255);
                  for (h2[0] |= 1, h2[0] |= 2, e4 = 0; e4 < 6; e4++)
                    r4[10 + e4] = h2[e4];
                } else if (4 === t4) {
                  var f2 = A(16, 255);
                  for (e4 = 0; e4 < 16; e4++)
                    this[e4] = f2[e4];
                } else {
                  if (3 !== t4 && 5 !== t4)
                    throw new Error("UUID: make: invalid version");
                  var c2 = "", p2 = "object" == typeof arguments[1] && arguments[1] instanceof E ? arguments[1] : new E().parse(arguments[1]);
                  for (e4 = 0; e4 < 16; e4++)
                    c2 += String.fromCharCode(p2[e4]);
                  c2 += arguments[2];
                  var y2 = 3 === t4 ? _(c2) : w(c2);
                  for (e4 = 0; e4 < 16; e4++)
                    r4[e4] = y2.charCodeAt(e4);
                }
                return r4[6] &= 15, r4[6] |= t4 << 4, r4[8] &= 63, r4[8] |= 128, r4;
              }, E.prototype.format = function(e4) {
                var n4, i2;
                return "z85" === e4 ? n4 = function(t4, e5) {
                  if (e5 % 4 != 0)
                    throw new Error("z85_encode: invalid input length (multiple of 4 expected)");
                  for (var n5 = "", i3 = 0, o2 = 0; i3 < e5; )
                    if (o2 = 256 * o2 + t4[i3++], i3 % 4 == 0) {
                      for (var s2 = 52200625; s2 >= 1; ) {
                        var a2 = Math.floor(o2 / s2) % 85;
                        n5 += r3[a2], s2 /= 85;
                      }
                      o2 = 0;
                    }
                  return n5;
                }(this, 16) : "b16" === e4 ? (i2 = Array(32), t3(this, 0, 15, true, i2, 0), n4 = i2.join("")) : void 0 !== e4 && "std" !== e4 || (i2 = new Array(36), t3(this, 0, 3, false, i2, 0), i2[8] = "-", t3(this, 4, 5, false, i2, 9), i2[13] = "-", t3(this, 6, 7, false, i2, 14), i2[18] = "-", t3(this, 8, 9, false, i2, 19), i2[23] = "-", t3(this, 10, 15, false, i2, 24), n4 = i2.join("")), n4;
              }, E.prototype.toString = function(t4) {
                return this.format(t4);
              }, E.prototype.toJSON = function() {
                return this.format("std");
              }, E.prototype.parse = function(t4, r4) {
                if ("string" != typeof t4)
                  throw new Error("UUID: parse: invalid argument (type string expected)");
                if ("z85" === r4)
                  !function(t5, e4) {
                    var r5 = t5.length;
                    if (r5 % 5 != 0)
                      throw new Error("z85_decode: invalid input length (multiple of 5 expected)");
                    void 0 === e4 && (e4 = new Array(4 * r5 / 5));
                    for (var i3 = 0, o2 = 0, s2 = 0; i3 < r5; ) {
                      var a2 = t5.charCodeAt(i3++) - 32;
                      if (a2 < 0 || a2 >= n3.length)
                        break;
                      if (s2 = 85 * s2 + n3[a2], i3 % 5 == 0) {
                        for (var h2 = 16777216; h2 >= 1; )
                          e4[o2++] = Math.trunc(s2 / h2 % 256), h2 /= 256;
                        s2 = 0;
                      }
                    }
                  }(t4, this);
                else if ("b16" === r4)
                  e3(t4, 0, 35, this, 0);
                else if (void 0 === r4 || "std" === r4) {
                  var i2 = { nil: "00000000-0000-0000-0000-000000000000", "ns:DNS": "6ba7b810-9dad-11d1-80b4-00c04fd430c8", "ns:URL": "6ba7b811-9dad-11d1-80b4-00c04fd430c8", "ns:OID": "6ba7b812-9dad-11d1-80b4-00c04fd430c8", "ns:X500": "6ba7b814-9dad-11d1-80b4-00c04fd430c8" };
                  if (void 0 !== i2[t4])
                    t4 = i2[t4];
                  else if (!t4.match(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/))
                    throw new Error('UUID: parse: invalid string representation (expected "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")');
                  e3(t4, 0, 7, this, 0), e3(t4, 9, 12, this, 4), e3(t4, 14, 17, this, 6), e3(t4, 19, 22, this, 8), e3(t4, 24, 35, this, 10);
                }
                return this;
              }, E.prototype.export = function() {
                for (var t4 = Array(16), e4 = 0; e4 < 16; e4++)
                  t4[e4] = this[e4];
                return t4;
              }, E.prototype.import = function(t4) {
                if (!("object" == typeof t4 && t4 instanceof Array))
                  throw new Error("UUID: import: invalid argument (type Array expected)");
                if (16 !== t4.length)
                  throw new Error("UUID: import: invalid argument (Array of length 16 expected)");
                for (var e4 = 0; e4 < 16; e4++) {
                  if ("number" != typeof t4[e4])
                    throw new Error("UUID: import: invalid array element #" + e4 + " (type Number expected)");
                  if (!isFinite(t4[e4]) || Math.floor(t4[e4]) !== t4[e4])
                    throw new Error("UUID: import: invalid array element #" + e4 + " (Number with integer value expected)");
                  if (!(t4[e4] >= 0 && t4[e4] <= 255))
                    throw new Error("UUID: import: invalid array element #" + e4 + " (Number with integer value in range 0...255 expected)");
                  this[e4] = t4[e4];
                }
                return this;
              }, E.prototype.compare = function(t4) {
                if ("object" != typeof t4)
                  throw new Error("UUID: compare: invalid argument (type UUID expected)");
                if (!(t4 instanceof E))
                  throw new Error("UUID: compare: invalid argument (type UUID expected)");
                for (var e4 = 0; e4 < 16; e4++) {
                  if (this[e4] < t4[e4])
                    return -1;
                  if (this[e4] > t4[e4])
                    return 1;
                }
                return 0;
              }, E.prototype.equal = function(t4) {
                return 0 === this.compare(t4);
              }, E.prototype.fold = function(t4) {
                if (void 0 === t4)
                  throw new Error("UUID: fold: invalid argument (number of fold operations expected)");
                if (t4 < 1 || t4 > 4)
                  throw new Error("UUID: fold: invalid argument (1-4 fold operations expected)");
                for (var e4 = 16 / Math.pow(2, t4), r4 = new Array(e4), n4 = 0; n4 < e4; n4++) {
                  for (var i2 = 0, o2 = 0; n4 + o2 < 16; o2 += e4)
                    i2 ^= this[n4 + o2];
                  r4[n4] = i2;
                }
                return r4;
              }, E.PCG = k, E;
            }();
          }.call(e2, r2, e2, t2), void 0 === n2 || (t2.exports = n2);
        }, 55798: (t2) => {
          "use strict";
          var e2 = String.prototype.replace, r2 = /%20/g, n2 = "RFC3986";
          t2.exports = { default: n2, formatters: { RFC1738: function(t3) {
            return e2.call(t3, r2, "+");
          }, RFC3986: function(t3) {
            return String(t3);
          } }, RFC1738: "RFC1738", RFC3986: n2 };
        }, 80129: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(58261), i = r2(55235), o = r2(55798);
          t2.exports = { formats: o, parse: i, stringify: n2 };
        }, 55235: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(12769), i = Object.prototype.hasOwnProperty, o = Array.isArray, s = { allowDots: false, allowPrototypes: false, allowSparse: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decoder: n2.decode, delimiter: "&", depth: 5, ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, a = function(t3) {
            return t3.replace(/&#(\d+);/g, function(t4, e3) {
              return String.fromCharCode(parseInt(e3, 10));
            });
          }, h = function(t3, e3) {
            return t3 && "string" == typeof t3 && e3.comma && t3.indexOf(",") > -1 ? t3.split(",") : t3;
          }, f = function(t3, e3, r3, n3) {
            if (t3) {
              var o2 = r3.allowDots ? t3.replace(/\.([^.[]+)/g, "[$1]") : t3, s2 = /(\[[^[\]]*])/g, a2 = r3.depth > 0 && /(\[[^[\]]*])/.exec(o2), f2 = a2 ? o2.slice(0, a2.index) : o2, u = [];
              if (f2) {
                if (!r3.plainObjects && i.call(Object.prototype, f2) && !r3.allowPrototypes)
                  return;
                u.push(f2);
              }
              for (var c = 0; r3.depth > 0 && null !== (a2 = s2.exec(o2)) && c < r3.depth; ) {
                if (c += 1, !r3.plainObjects && i.call(Object.prototype, a2[1].slice(1, -1)) && !r3.allowPrototypes)
                  return;
                u.push(a2[1]);
              }
              return a2 && u.push("[" + o2.slice(a2.index) + "]"), function(t4, e4, r4, n4) {
                for (var i2 = n4 ? e4 : h(e4, r4), o3 = t4.length - 1; o3 >= 0; --o3) {
                  var s3, a3 = t4[o3];
                  if ("[]" === a3 && r4.parseArrays)
                    s3 = [].concat(i2);
                  else {
                    s3 = r4.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
                    var f3 = "[" === a3.charAt(0) && "]" === a3.charAt(a3.length - 1) ? a3.slice(1, -1) : a3, u2 = parseInt(f3, 10);
                    r4.parseArrays || "" !== f3 ? !isNaN(u2) && a3 !== f3 && String(u2) === f3 && u2 >= 0 && r4.parseArrays && u2 <= r4.arrayLimit ? (s3 = [])[u2] = i2 : "__proto__" !== f3 && (s3[f3] = i2) : s3 = { 0: i2 };
                  }
                  i2 = s3;
                }
                return i2;
              }(u, e3, r3, n3);
            }
          };
          t2.exports = function(t3, e3) {
            var r3 = function(t4) {
              if (!t4)
                return s;
              if (null !== t4.decoder && void 0 !== t4.decoder && "function" != typeof t4.decoder)
                throw new TypeError("Decoder has to be a function.");
              if (void 0 !== t4.charset && "utf-8" !== t4.charset && "iso-8859-1" !== t4.charset)
                throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
              var e4 = void 0 === t4.charset ? s.charset : t4.charset;
              return { allowDots: void 0 === t4.allowDots ? s.allowDots : !!t4.allowDots, allowPrototypes: "boolean" == typeof t4.allowPrototypes ? t4.allowPrototypes : s.allowPrototypes, allowSparse: "boolean" == typeof t4.allowSparse ? t4.allowSparse : s.allowSparse, arrayLimit: "number" == typeof t4.arrayLimit ? t4.arrayLimit : s.arrayLimit, charset: e4, charsetSentinel: "boolean" == typeof t4.charsetSentinel ? t4.charsetSentinel : s.charsetSentinel, comma: "boolean" == typeof t4.comma ? t4.comma : s.comma, decoder: "function" == typeof t4.decoder ? t4.decoder : s.decoder, delimiter: "string" == typeof t4.delimiter || n2.isRegExp(t4.delimiter) ? t4.delimiter : s.delimiter, depth: "number" == typeof t4.depth || false === t4.depth ? +t4.depth : s.depth, ignoreQueryPrefix: true === t4.ignoreQueryPrefix, interpretNumericEntities: "boolean" == typeof t4.interpretNumericEntities ? t4.interpretNumericEntities : s.interpretNumericEntities, parameterLimit: "number" == typeof t4.parameterLimit ? t4.parameterLimit : s.parameterLimit, parseArrays: false !== t4.parseArrays, plainObjects: "boolean" == typeof t4.plainObjects ? t4.plainObjects : s.plainObjects, strictNullHandling: "boolean" == typeof t4.strictNullHandling ? t4.strictNullHandling : s.strictNullHandling };
            }(e3);
            if ("" === t3 || null == t3)
              return r3.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
            for (var u = "string" == typeof t3 ? function(t4, e4) {
              var r4, f2 = {}, u2 = e4.ignoreQueryPrefix ? t4.replace(/^\?/, "") : t4, c2 = e4.parameterLimit === 1 / 0 ? void 0 : e4.parameterLimit, d2 = u2.split(e4.delimiter, c2), l2 = -1, p2 = e4.charset;
              if (e4.charsetSentinel)
                for (r4 = 0; r4 < d2.length; ++r4)
                  0 === d2[r4].indexOf("utf8=") && ("utf8=%E2%9C%93" === d2[r4] ? p2 = "utf-8" : "utf8=%26%2310003%3B" === d2[r4] && (p2 = "iso-8859-1"), l2 = r4, r4 = d2.length);
              for (r4 = 0; r4 < d2.length; ++r4)
                if (r4 !== l2) {
                  var g2, y, m = d2[r4], v = m.indexOf("]="), b = -1 === v ? m.indexOf("=") : v + 1;
                  -1 === b ? (g2 = e4.decoder(m, s.decoder, p2, "key"), y = e4.strictNullHandling ? null : "") : (g2 = e4.decoder(m.slice(0, b), s.decoder, p2, "key"), y = n2.maybeMap(h(m.slice(b + 1), e4), function(t5) {
                    return e4.decoder(t5, s.decoder, p2, "value");
                  })), y && e4.interpretNumericEntities && "iso-8859-1" === p2 && (y = a(y)), m.indexOf("[]=") > -1 && (y = o(y) ? [y] : y), i.call(f2, g2) ? f2[g2] = n2.combine(f2[g2], y) : f2[g2] = y;
                }
              return f2;
            }(t3, r3) : t3, c = r3.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, d = Object.keys(u), l = 0; l < d.length; ++l) {
              var p = d[l], g = f(p, u[p], r3, "string" == typeof t3);
              c = n2.merge(c, g, r3);
            }
            return true === r3.allowSparse ? c : n2.compact(c);
          };
        }, 58261: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(37478), i = r2(12769), o = r2(55798), s = Object.prototype.hasOwnProperty, a = { brackets: function(t3) {
            return t3 + "[]";
          }, comma: "comma", indices: function(t3, e3) {
            return t3 + "[" + e3 + "]";
          }, repeat: function(t3) {
            return t3;
          } }, h = Array.isArray, f = String.prototype.split, u = Array.prototype.push, c = function(t3, e3) {
            u.apply(t3, h(e3) ? e3 : [e3]);
          }, d = Date.prototype.toISOString, l = o.default, p = { addQueryPrefix: false, allowDots: false, charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encoder: i.encode, encodeValuesOnly: false, format: l, formatter: o.formatters[l], indices: false, serializeDate: function(t3) {
            return d.call(t3);
          }, skipNulls: false, strictNullHandling: false }, g = {}, y = function t3(e3, r3, o2, s2, a2, u2, d2, l2, y2, m, v, b, w, _, k) {
            for (var S, A = e3, x = k, M = 0, E = false; void 0 !== (x = x.get(g)) && !E; ) {
              var B = x.get(e3);
              if (M += 1, void 0 !== B) {
                if (B === M)
                  throw new RangeError("Cyclic object value");
                E = true;
              }
              void 0 === x.get(g) && (M = 0);
            }
            if ("function" == typeof d2 ? A = d2(r3, A) : A instanceof Date ? A = m(A) : "comma" === o2 && h(A) && (A = i.maybeMap(A, function(t4) {
              return t4 instanceof Date ? m(t4) : t4;
            })), null === A) {
              if (s2)
                return u2 && !w ? u2(r3, p.encoder, _, "key", v) : r3;
              A = "";
            }
            if ("string" == typeof (S = A) || "number" == typeof S || "boolean" == typeof S || "symbol" == typeof S || "bigint" == typeof S || i.isBuffer(A)) {
              if (u2) {
                var I = w ? r3 : u2(r3, p.encoder, _, "key", v);
                if ("comma" === o2 && w) {
                  for (var P = f.call(String(A), ","), T = "", R = 0; R < P.length; ++R)
                    T += (0 === R ? "" : ",") + b(u2(P[R], p.encoder, _, "value", v));
                  return [b(I) + "=" + T];
                }
                return [b(I) + "=" + b(u2(A, p.encoder, _, "value", v))];
              }
              return [b(r3) + "=" + b(String(A))];
            }
            var O, C = [];
            if (void 0 === A)
              return C;
            if ("comma" === o2 && h(A))
              O = [{ value: A.length > 0 ? A.join(",") || null : void 0 }];
            else if (h(d2))
              O = d2;
            else {
              var j = Object.keys(A);
              O = l2 ? j.sort(l2) : j;
            }
            for (var N = 0; N < O.length; ++N) {
              var D = O[N], L = "object" == typeof D && void 0 !== D.value ? D.value : A[D];
              if (!a2 || null !== L) {
                var F = h(A) ? "function" == typeof o2 ? o2(r3, D) : r3 : r3 + (y2 ? "." + D : "[" + D + "]");
                k.set(e3, M);
                var q = n2();
                q.set(g, k), c(C, t3(L, F, o2, s2, a2, u2, d2, l2, y2, m, v, b, w, _, q));
              }
            }
            return C;
          };
          t2.exports = function(t3, e3) {
            var r3, i2 = t3, f2 = function(t4) {
              if (!t4)
                return p;
              if (null !== t4.encoder && void 0 !== t4.encoder && "function" != typeof t4.encoder)
                throw new TypeError("Encoder has to be a function.");
              var e4 = t4.charset || p.charset;
              if (void 0 !== t4.charset && "utf-8" !== t4.charset && "iso-8859-1" !== t4.charset)
                throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
              var r4 = o.default;
              if (void 0 !== t4.format) {
                if (!s.call(o.formatters, t4.format))
                  throw new TypeError("Unknown format option provided.");
                r4 = t4.format;
              }
              var n3 = o.formatters[r4], i3 = p.filter;
              return ("function" == typeof t4.filter || h(t4.filter)) && (i3 = t4.filter), { addQueryPrefix: "boolean" == typeof t4.addQueryPrefix ? t4.addQueryPrefix : p.addQueryPrefix, allowDots: void 0 === t4.allowDots ? p.allowDots : !!t4.allowDots, charset: e4, charsetSentinel: "boolean" == typeof t4.charsetSentinel ? t4.charsetSentinel : p.charsetSentinel, delimiter: void 0 === t4.delimiter ? p.delimiter : t4.delimiter, encode: "boolean" == typeof t4.encode ? t4.encode : p.encode, encoder: "function" == typeof t4.encoder ? t4.encoder : p.encoder, encodeValuesOnly: "boolean" == typeof t4.encodeValuesOnly ? t4.encodeValuesOnly : p.encodeValuesOnly, filter: i3, format: r4, formatter: n3, serializeDate: "function" == typeof t4.serializeDate ? t4.serializeDate : p.serializeDate, skipNulls: "boolean" == typeof t4.skipNulls ? t4.skipNulls : p.skipNulls, sort: "function" == typeof t4.sort ? t4.sort : null, strictNullHandling: "boolean" == typeof t4.strictNullHandling ? t4.strictNullHandling : p.strictNullHandling };
            }(e3);
            "function" == typeof f2.filter ? i2 = (0, f2.filter)("", i2) : h(f2.filter) && (r3 = f2.filter);
            var u2, d2 = [];
            if ("object" != typeof i2 || null === i2)
              return "";
            u2 = e3 && e3.arrayFormat in a ? e3.arrayFormat : e3 && "indices" in e3 ? e3.indices ? "indices" : "repeat" : "indices";
            var l2 = a[u2];
            r3 || (r3 = Object.keys(i2)), f2.sort && r3.sort(f2.sort);
            for (var g2 = n2(), m = 0; m < r3.length; ++m) {
              var v = r3[m];
              f2.skipNulls && null === i2[v] || c(d2, y(i2[v], v, l2, f2.strictNullHandling, f2.skipNulls, f2.encode ? f2.encoder : null, f2.filter, f2.sort, f2.allowDots, f2.serializeDate, f2.format, f2.formatter, f2.encodeValuesOnly, f2.charset, g2));
            }
            var b = d2.join(f2.delimiter), w = true === f2.addQueryPrefix ? "?" : "";
            return f2.charsetSentinel && ("iso-8859-1" === f2.charset ? w += "utf8=%26%2310003%3B&" : w += "utf8=%E2%9C%93&"), b.length > 0 ? w + b : "";
          };
        }, 12769: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(55798), i = Object.prototype.hasOwnProperty, o = Array.isArray, s = function() {
            for (var t3 = [], e3 = 0; e3 < 256; ++e3)
              t3.push("%" + ((e3 < 16 ? "0" : "") + e3.toString(16)).toUpperCase());
            return t3;
          }(), a = function(t3, e3) {
            for (var r3 = e3 && e3.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, n3 = 0; n3 < t3.length; ++n3)
              void 0 !== t3[n3] && (r3[n3] = t3[n3]);
            return r3;
          };
          t2.exports = { arrayToObject: a, assign: function(t3, e3) {
            return Object.keys(e3).reduce(function(t4, r3) {
              return t4[r3] = e3[r3], t4;
            }, t3);
          }, combine: function(t3, e3) {
            return [].concat(t3, e3);
          }, compact: function(t3) {
            for (var e3 = [{ obj: { o: t3 }, prop: "o" }], r3 = [], n3 = 0; n3 < e3.length; ++n3)
              for (var i2 = e3[n3], s2 = i2.obj[i2.prop], a2 = Object.keys(s2), h = 0; h < a2.length; ++h) {
                var f = a2[h], u = s2[f];
                "object" == typeof u && null !== u && -1 === r3.indexOf(u) && (e3.push({ obj: s2, prop: f }), r3.push(u));
              }
            return function(t4) {
              for (; t4.length > 1; ) {
                var e4 = t4.pop(), r4 = e4.obj[e4.prop];
                if (o(r4)) {
                  for (var n4 = [], i3 = 0; i3 < r4.length; ++i3)
                    void 0 !== r4[i3] && n4.push(r4[i3]);
                  e4.obj[e4.prop] = n4;
                }
              }
            }(e3), t3;
          }, decode: function(t3, e3, r3) {
            var n3 = t3.replace(/\+/g, " ");
            if ("iso-8859-1" === r3)
              return n3.replace(/%[0-9a-f]{2}/gi, unescape);
            try {
              return decodeURIComponent(n3);
            } catch (t4) {
              return n3;
            }
          }, encode: function(t3, e3, r3, i2, o2) {
            if (0 === t3.length)
              return t3;
            var a2 = t3;
            if ("symbol" == typeof t3 ? a2 = Symbol.prototype.toString.call(t3) : "string" != typeof t3 && (a2 = String(t3)), "iso-8859-1" === r3)
              return escape(a2).replace(/%u[0-9a-f]{4}/gi, function(t4) {
                return "%26%23" + parseInt(t4.slice(2), 16) + "%3B";
              });
            for (var h = "", f = 0; f < a2.length; ++f) {
              var u = a2.charCodeAt(f);
              45 === u || 46 === u || 95 === u || 126 === u || u >= 48 && u <= 57 || u >= 65 && u <= 90 || u >= 97 && u <= 122 || o2 === n2.RFC1738 && (40 === u || 41 === u) ? h += a2.charAt(f) : u < 128 ? h += s[u] : u < 2048 ? h += s[192 | u >> 6] + s[128 | 63 & u] : u < 55296 || u >= 57344 ? h += s[224 | u >> 12] + s[128 | u >> 6 & 63] + s[128 | 63 & u] : (f += 1, u = 65536 + ((1023 & u) << 10 | 1023 & a2.charCodeAt(f)), h += s[240 | u >> 18] + s[128 | u >> 12 & 63] + s[128 | u >> 6 & 63] + s[128 | 63 & u]);
            }
            return h;
          }, isBuffer: function(t3) {
            return !(!t3 || "object" != typeof t3 || !(t3.constructor && t3.constructor.isBuffer && t3.constructor.isBuffer(t3)));
          }, isRegExp: function(t3) {
            return "[object RegExp]" === Object.prototype.toString.call(t3);
          }, maybeMap: function(t3, e3) {
            if (o(t3)) {
              for (var r3 = [], n3 = 0; n3 < t3.length; n3 += 1)
                r3.push(e3(t3[n3]));
              return r3;
            }
            return e3(t3);
          }, merge: function t3(e3, r3, n3) {
            if (!r3)
              return e3;
            if ("object" != typeof r3) {
              if (o(e3))
                e3.push(r3);
              else {
                if (!e3 || "object" != typeof e3)
                  return [e3, r3];
                (n3 && (n3.plainObjects || n3.allowPrototypes) || !i.call(Object.prototype, r3)) && (e3[r3] = true);
              }
              return e3;
            }
            if (!e3 || "object" != typeof e3)
              return [e3].concat(r3);
            var s2 = e3;
            return o(e3) && !o(r3) && (s2 = a(e3, n3)), o(e3) && o(r3) ? (r3.forEach(function(r4, o2) {
              if (i.call(e3, o2)) {
                var s3 = e3[o2];
                s3 && "object" == typeof s3 && r4 && "object" == typeof r4 ? e3[o2] = t3(s3, r4, n3) : e3.push(r4);
              } else
                e3[o2] = r4;
            }), e3) : Object.keys(r3).reduce(function(e4, o2) {
              var s3 = r3[o2];
              return i.call(e4, o2) ? e4[o2] = t3(e4[o2], s3, n3) : e4[o2] = s3, e4;
            }, s2);
          } };
        }, 61798: (t2, e2, r2) => {
          "use strict";
          var n2 = 65536, i = r2(89509).Buffer, o = r2.g.crypto || r2.g.msCrypto;
          o && o.getRandomValues ? t2.exports = function(t3, e3) {
            if (t3 > 4294967295)
              throw new RangeError("requested too many random bytes");
            var r3 = i.allocUnsafe(t3);
            if (t3 > 0)
              if (t3 > n2)
                for (var s = 0; s < t3; s += n2)
                  o.getRandomValues(r3.slice(s, s + n2));
              else
                o.getRandomValues(r3);
            return "function" == typeof e3 ? process.nextTick(function() {
              e3(null, r3);
            }) : r3;
          } : t2.exports = function() {
            throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
          };
        }, 79785: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(48764).Buffer, i = r2(35717), o = r2(3349), s = new Array(16), a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], h = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], f = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], u = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], c = [0, 1518500249, 1859775393, 2400959708, 2840853838], d = [1352829926, 1548603684, 1836072691, 2053994217, 0];
          function l() {
            o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
          }
          function p(t3, e3) {
            return t3 << e3 | t3 >>> 32 - e3;
          }
          function g(t3, e3, r3, n3, i2, o2, s2, a2) {
            return p(t3 + (e3 ^ r3 ^ n3) + o2 + s2 | 0, a2) + i2 | 0;
          }
          function y(t3, e3, r3, n3, i2, o2, s2, a2) {
            return p(t3 + (e3 & r3 | ~e3 & n3) + o2 + s2 | 0, a2) + i2 | 0;
          }
          function m(t3, e3, r3, n3, i2, o2, s2, a2) {
            return p(t3 + ((e3 | ~r3) ^ n3) + o2 + s2 | 0, a2) + i2 | 0;
          }
          function v(t3, e3, r3, n3, i2, o2, s2, a2) {
            return p(t3 + (e3 & n3 | r3 & ~n3) + o2 + s2 | 0, a2) + i2 | 0;
          }
          function b(t3, e3, r3, n3, i2, o2, s2, a2) {
            return p(t3 + (e3 ^ (r3 | ~n3)) + o2 + s2 | 0, a2) + i2 | 0;
          }
          i(l, o), l.prototype._update = function() {
            for (var t3 = s, e3 = 0; e3 < 16; ++e3)
              t3[e3] = this._block.readInt32LE(4 * e3);
            for (var r3 = 0 | this._a, n3 = 0 | this._b, i2 = 0 | this._c, o2 = 0 | this._d, l2 = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, k = 0 | this._c, S = 0 | this._d, A = 0 | this._e, x = 0; x < 80; x += 1) {
              var M, E;
              x < 16 ? (M = g(r3, n3, i2, o2, l2, t3[a[x]], c[0], f[x]), E = b(w, _, k, S, A, t3[h[x]], d[0], u[x])) : x < 32 ? (M = y(r3, n3, i2, o2, l2, t3[a[x]], c[1], f[x]), E = v(w, _, k, S, A, t3[h[x]], d[1], u[x])) : x < 48 ? (M = m(r3, n3, i2, o2, l2, t3[a[x]], c[2], f[x]), E = m(w, _, k, S, A, t3[h[x]], d[2], u[x])) : x < 64 ? (M = v(r3, n3, i2, o2, l2, t3[a[x]], c[3], f[x]), E = y(w, _, k, S, A, t3[h[x]], d[3], u[x])) : (M = b(r3, n3, i2, o2, l2, t3[a[x]], c[4], f[x]), E = g(w, _, k, S, A, t3[h[x]], d[4], u[x])), r3 = l2, l2 = o2, o2 = p(i2, 10), i2 = n3, n3 = M, w = A, A = S, S = p(k, 10), k = _, _ = E;
            }
            var B = this._b + i2 + S | 0;
            this._b = this._c + o2 + A | 0, this._c = this._d + l2 + w | 0, this._d = this._e + r3 + _ | 0, this._e = this._a + n3 + k | 0, this._a = B;
          }, l.prototype._digest = function() {
            this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
            var t3 = n2.alloc ? n2.alloc(20) : new n2(20);
            return t3.writeInt32LE(this._a, 0), t3.writeInt32LE(this._b, 4), t3.writeInt32LE(this._c, 8), t3.writeInt32LE(this._d, 12), t3.writeInt32LE(this._e, 16), t3;
          }, t2.exports = l;
        }, 89509: (t2, e2, r2) => {
          var n2 = r2(48764), i = n2.Buffer;
          function o(t3, e3) {
            for (var r3 in t3)
              e3[r3] = t3[r3];
          }
          function s(t3, e3, r3) {
            return i(t3, e3, r3);
          }
          i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t2.exports = n2 : (o(n2, e2), e2.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(t3, e3, r3) {
            if ("number" == typeof t3)
              throw new TypeError("Argument must not be a number");
            return i(t3, e3, r3);
          }, s.alloc = function(t3, e3, r3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            var n3 = i(t3);
            return void 0 !== e3 ? "string" == typeof r3 ? n3.fill(e3, r3) : n3.fill(e3) : n3.fill(0), n3;
          }, s.allocUnsafe = function(t3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            return i(t3);
          }, s.allocUnsafeSlow = function(t3) {
            if ("number" != typeof t3)
              throw new TypeError("Argument must be a number");
            return n2.SlowBuffer(t3);
          };
        }, 24189: (t2, e2, r2) => {
          var n2 = r2(89509).Buffer;
          function i(t3, e3) {
            this._block = n2.alloc(t3), this._finalSize = e3, this._blockSize = t3, this._len = 0;
          }
          i.prototype.update = function(t3, e3) {
            "string" == typeof t3 && (e3 = e3 || "utf8", t3 = n2.from(t3, e3));
            for (var r3 = this._block, i2 = this._blockSize, o = t3.length, s = this._len, a = 0; a < o; ) {
              for (var h = s % i2, f = Math.min(o - a, i2 - h), u = 0; u < f; u++)
                r3[h + u] = t3[a + u];
              a += f, (s += f) % i2 == 0 && this._update(r3);
            }
            return this._len += o, this;
          }, i.prototype.digest = function(t3) {
            var e3 = this._len % this._blockSize;
            this._block[e3] = 128, this._block.fill(0, e3 + 1), e3 >= this._finalSize && (this._update(this._block), this._block.fill(0));
            var r3 = 8 * this._len;
            if (r3 <= 4294967295)
              this._block.writeUInt32BE(r3, this._blockSize - 4);
            else {
              var n3 = (4294967295 & r3) >>> 0, i2 = (r3 - n3) / 4294967296;
              this._block.writeUInt32BE(i2, this._blockSize - 8), this._block.writeUInt32BE(n3, this._blockSize - 4);
            }
            this._update(this._block);
            var o = this._hash();
            return t3 ? o.toString(t3) : o;
          }, i.prototype._update = function() {
            throw new Error("_update must be implemented by subclass");
          }, t2.exports = i;
        }, 89072: (t2, e2, r2) => {
          var n2 = t2.exports = function(t3) {
            t3 = t3.toLowerCase();
            var e3 = n2[t3];
            if (!e3)
              throw new Error(t3 + " is not supported (we accept pull requests)");
            return new e3();
          };
          n2.sha = r2(74448), n2.sha1 = r2(18336), n2.sha224 = r2(48432), n2.sha256 = r2(67499), n2.sha384 = r2(51686), n2.sha512 = r2(87816);
        }, 74448: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(24189), o = r2(89509).Buffer, s = [1518500249, 1859775393, -1894007588, -899497514], a = new Array(80);
          function h() {
            this.init(), this._w = a, i.call(this, 64, 56);
          }
          function f(t3) {
            return t3 << 30 | t3 >>> 2;
          }
          function u(t3, e3, r3, n3) {
            return 0 === t3 ? e3 & r3 | ~e3 & n3 : 2 === t3 ? e3 & r3 | e3 & n3 | r3 & n3 : e3 ^ r3 ^ n3;
          }
          n2(h, i), h.prototype.init = function() {
            return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
          }, h.prototype._update = function(t3) {
            for (var e3, r3 = this._w, n3 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, a2 = 0 | this._d, h2 = 0 | this._e, c = 0; c < 16; ++c)
              r3[c] = t3.readInt32BE(4 * c);
            for (; c < 80; ++c)
              r3[c] = r3[c - 3] ^ r3[c - 8] ^ r3[c - 14] ^ r3[c - 16];
            for (var d = 0; d < 80; ++d) {
              var l = ~~(d / 20), p = 0 | ((e3 = n3) << 5 | e3 >>> 27) + u(l, i2, o2, a2) + h2 + r3[d] + s[l];
              h2 = a2, a2 = o2, o2 = f(i2), i2 = n3, n3 = p;
            }
            this._a = n3 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = a2 + this._d | 0, this._e = h2 + this._e | 0;
          }, h.prototype._hash = function() {
            var t3 = o.allocUnsafe(20);
            return t3.writeInt32BE(0 | this._a, 0), t3.writeInt32BE(0 | this._b, 4), t3.writeInt32BE(0 | this._c, 8), t3.writeInt32BE(0 | this._d, 12), t3.writeInt32BE(0 | this._e, 16), t3;
          }, t2.exports = h;
        }, 18336: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(24189), o = r2(89509).Buffer, s = [1518500249, 1859775393, -1894007588, -899497514], a = new Array(80);
          function h() {
            this.init(), this._w = a, i.call(this, 64, 56);
          }
          function f(t3) {
            return t3 << 5 | t3 >>> 27;
          }
          function u(t3) {
            return t3 << 30 | t3 >>> 2;
          }
          function c(t3, e3, r3, n3) {
            return 0 === t3 ? e3 & r3 | ~e3 & n3 : 2 === t3 ? e3 & r3 | e3 & n3 | r3 & n3 : e3 ^ r3 ^ n3;
          }
          n2(h, i), h.prototype.init = function() {
            return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
          }, h.prototype._update = function(t3) {
            for (var e3, r3 = this._w, n3 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, a2 = 0 | this._d, h2 = 0 | this._e, d = 0; d < 16; ++d)
              r3[d] = t3.readInt32BE(4 * d);
            for (; d < 80; ++d)
              r3[d] = (e3 = r3[d - 3] ^ r3[d - 8] ^ r3[d - 14] ^ r3[d - 16]) << 1 | e3 >>> 31;
            for (var l = 0; l < 80; ++l) {
              var p = ~~(l / 20), g = f(n3) + c(p, i2, o2, a2) + h2 + r3[l] + s[p] | 0;
              h2 = a2, a2 = o2, o2 = u(i2), i2 = n3, n3 = g;
            }
            this._a = n3 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = a2 + this._d | 0, this._e = h2 + this._e | 0;
          }, h.prototype._hash = function() {
            var t3 = o.allocUnsafe(20);
            return t3.writeInt32BE(0 | this._a, 0), t3.writeInt32BE(0 | this._b, 4), t3.writeInt32BE(0 | this._c, 8), t3.writeInt32BE(0 | this._d, 12), t3.writeInt32BE(0 | this._e, 16), t3;
          }, t2.exports = h;
        }, 48432: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(67499), o = r2(24189), s = r2(89509).Buffer, a = new Array(64);
          function h() {
            this.init(), this._w = a, o.call(this, 64, 56);
          }
          n2(h, i), h.prototype.init = function() {
            return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
          }, h.prototype._hash = function() {
            var t3 = s.allocUnsafe(28);
            return t3.writeInt32BE(this._a, 0), t3.writeInt32BE(this._b, 4), t3.writeInt32BE(this._c, 8), t3.writeInt32BE(this._d, 12), t3.writeInt32BE(this._e, 16), t3.writeInt32BE(this._f, 20), t3.writeInt32BE(this._g, 24), t3;
          }, t2.exports = h;
        }, 67499: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(24189), o = r2(89509).Buffer, s = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], a = new Array(64);
          function h() {
            this.init(), this._w = a, i.call(this, 64, 56);
          }
          function f(t3, e3, r3) {
            return r3 ^ t3 & (e3 ^ r3);
          }
          function u(t3, e3, r3) {
            return t3 & e3 | r3 & (t3 | e3);
          }
          function c(t3) {
            return (t3 >>> 2 | t3 << 30) ^ (t3 >>> 13 | t3 << 19) ^ (t3 >>> 22 | t3 << 10);
          }
          function d(t3) {
            return (t3 >>> 6 | t3 << 26) ^ (t3 >>> 11 | t3 << 21) ^ (t3 >>> 25 | t3 << 7);
          }
          function l(t3) {
            return (t3 >>> 7 | t3 << 25) ^ (t3 >>> 18 | t3 << 14) ^ t3 >>> 3;
          }
          n2(h, i), h.prototype.init = function() {
            return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
          }, h.prototype._update = function(t3) {
            for (var e3, r3 = this._w, n3 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, a2 = 0 | this._d, h2 = 0 | this._e, p = 0 | this._f, g = 0 | this._g, y = 0 | this._h, m = 0; m < 16; ++m)
              r3[m] = t3.readInt32BE(4 * m);
            for (; m < 64; ++m)
              r3[m] = 0 | (((e3 = r3[m - 2]) >>> 17 | e3 << 15) ^ (e3 >>> 19 | e3 << 13) ^ e3 >>> 10) + r3[m - 7] + l(r3[m - 15]) + r3[m - 16];
            for (var v = 0; v < 64; ++v) {
              var b = y + d(h2) + f(h2, p, g) + s[v] + r3[v] | 0, w = c(n3) + u(n3, i2, o2) | 0;
              y = g, g = p, p = h2, h2 = a2 + b | 0, a2 = o2, o2 = i2, i2 = n3, n3 = b + w | 0;
            }
            this._a = n3 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = a2 + this._d | 0, this._e = h2 + this._e | 0, this._f = p + this._f | 0, this._g = g + this._g | 0, this._h = y + this._h | 0;
          }, h.prototype._hash = function() {
            var t3 = o.allocUnsafe(32);
            return t3.writeInt32BE(this._a, 0), t3.writeInt32BE(this._b, 4), t3.writeInt32BE(this._c, 8), t3.writeInt32BE(this._d, 12), t3.writeInt32BE(this._e, 16), t3.writeInt32BE(this._f, 20), t3.writeInt32BE(this._g, 24), t3.writeInt32BE(this._h, 28), t3;
          }, t2.exports = h;
        }, 51686: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(87816), o = r2(24189), s = r2(89509).Buffer, a = new Array(160);
          function h() {
            this.init(), this._w = a, o.call(this, 128, 112);
          }
          n2(h, i), h.prototype.init = function() {
            return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
          }, h.prototype._hash = function() {
            var t3 = s.allocUnsafe(48);
            function e3(e4, r3, n3) {
              t3.writeInt32BE(e4, n3), t3.writeInt32BE(r3, n3 + 4);
            }
            return e3(this._ah, this._al, 0), e3(this._bh, this._bl, 8), e3(this._ch, this._cl, 16), e3(this._dh, this._dl, 24), e3(this._eh, this._el, 32), e3(this._fh, this._fl, 40), t3;
          }, t2.exports = h;
        }, 87816: (t2, e2, r2) => {
          var n2 = r2(35717), i = r2(24189), o = r2(89509).Buffer, s = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], a = new Array(160);
          function h() {
            this.init(), this._w = a, i.call(this, 128, 112);
          }
          function f(t3, e3, r3) {
            return r3 ^ t3 & (e3 ^ r3);
          }
          function u(t3, e3, r3) {
            return t3 & e3 | r3 & (t3 | e3);
          }
          function c(t3, e3) {
            return (t3 >>> 28 | e3 << 4) ^ (e3 >>> 2 | t3 << 30) ^ (e3 >>> 7 | t3 << 25);
          }
          function d(t3, e3) {
            return (t3 >>> 14 | e3 << 18) ^ (t3 >>> 18 | e3 << 14) ^ (e3 >>> 9 | t3 << 23);
          }
          function l(t3, e3) {
            return (t3 >>> 1 | e3 << 31) ^ (t3 >>> 8 | e3 << 24) ^ t3 >>> 7;
          }
          function p(t3, e3) {
            return (t3 >>> 1 | e3 << 31) ^ (t3 >>> 8 | e3 << 24) ^ (t3 >>> 7 | e3 << 25);
          }
          function g(t3, e3) {
            return (t3 >>> 19 | e3 << 13) ^ (e3 >>> 29 | t3 << 3) ^ t3 >>> 6;
          }
          function y(t3, e3) {
            return (t3 >>> 19 | e3 << 13) ^ (e3 >>> 29 | t3 << 3) ^ (t3 >>> 6 | e3 << 26);
          }
          function m(t3, e3) {
            return t3 >>> 0 < e3 >>> 0 ? 1 : 0;
          }
          n2(h, i), h.prototype.init = function() {
            return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
          }, h.prototype._update = function(t3) {
            for (var e3 = this._w, r3 = 0 | this._ah, n3 = 0 | this._bh, i2 = 0 | this._ch, o2 = 0 | this._dh, a2 = 0 | this._eh, h2 = 0 | this._fh, v = 0 | this._gh, b = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, k = 0 | this._cl, S = 0 | this._dl, A = 0 | this._el, x = 0 | this._fl, M = 0 | this._gl, E = 0 | this._hl, B = 0; B < 32; B += 2)
              e3[B] = t3.readInt32BE(4 * B), e3[B + 1] = t3.readInt32BE(4 * B + 4);
            for (; B < 160; B += 2) {
              var I = e3[B - 30], P = e3[B - 30 + 1], T = l(I, P), R = p(P, I), O = g(I = e3[B - 4], P = e3[B - 4 + 1]), C = y(P, I), j = e3[B - 14], N = e3[B - 14 + 1], D = e3[B - 32], L = e3[B - 32 + 1], F = R + N | 0, q = T + j + m(F, R) | 0;
              q = (q = q + O + m(F = F + C | 0, C) | 0) + D + m(F = F + L | 0, L) | 0, e3[B] = q, e3[B + 1] = F;
            }
            for (var U = 0; U < 160; U += 2) {
              q = e3[U], F = e3[U + 1];
              var V = u(r3, n3, i2), z = u(w, _, k), H = c(r3, w), K = c(w, r3), W = d(a2, A), G = d(A, a2), Y = s[U], J = s[U + 1], X = f(a2, h2, v), Z = f(A, x, M), $ = E + G | 0, Q = b + W + m($, E) | 0;
              Q = (Q = (Q = Q + X + m($ = $ + Z | 0, Z) | 0) + Y + m($ = $ + J | 0, J) | 0) + q + m($ = $ + F | 0, F) | 0;
              var tt = K + z | 0, et = H + V + m(tt, K) | 0;
              b = v, E = M, v = h2, M = x, h2 = a2, x = A, a2 = o2 + Q + m(A = S + $ | 0, S) | 0, o2 = i2, S = k, i2 = n3, k = _, n3 = r3, _ = w, r3 = Q + et + m(w = $ + tt | 0, $) | 0;
            }
            this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + k | 0, this._dl = this._dl + S | 0, this._el = this._el + A | 0, this._fl = this._fl + x | 0, this._gl = this._gl + M | 0, this._hl = this._hl + E | 0, this._ah = this._ah + r3 + m(this._al, w) | 0, this._bh = this._bh + n3 + m(this._bl, _) | 0, this._ch = this._ch + i2 + m(this._cl, k) | 0, this._dh = this._dh + o2 + m(this._dl, S) | 0, this._eh = this._eh + a2 + m(this._el, A) | 0, this._fh = this._fh + h2 + m(this._fl, x) | 0, this._gh = this._gh + v + m(this._gl, M) | 0, this._hh = this._hh + b + m(this._hl, E) | 0;
          }, h.prototype._hash = function() {
            var t3 = o.allocUnsafe(64);
            function e3(e4, r3, n3) {
              t3.writeInt32BE(e4, n3), t3.writeInt32BE(r3, n3 + 4);
            }
            return e3(this._ah, this._al, 0), e3(this._bh, this._bl, 8), e3(this._ch, this._cl, 16), e3(this._dh, this._dl, 24), e3(this._eh, this._el, 32), e3(this._fh, this._fl, 40), e3(this._gh, this._gl, 48), e3(this._hh, this._hl, 56), t3;
          }, t2.exports = h;
        }, 37478: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(40210), i = r2(21924), o = r2(70631), s = n2("%TypeError%"), a = n2("%WeakMap%", true), h = n2("%Map%", true), f = i("WeakMap.prototype.get", true), u = i("WeakMap.prototype.set", true), c = i("WeakMap.prototype.has", true), d = i("Map.prototype.get", true), l = i("Map.prototype.set", true), p = i("Map.prototype.has", true), g = function(t3, e3) {
            for (var r3, n3 = t3; null !== (r3 = n3.next); n3 = r3)
              if (r3.key === e3)
                return n3.next = r3.next, r3.next = t3.next, t3.next = r3, r3;
          };
          t2.exports = function() {
            var t3, e3, r3, n3 = { assert: function(t4) {
              if (!n3.has(t4))
                throw new s("Side channel does not contain " + o(t4));
            }, get: function(n4) {
              if (a && n4 && ("object" == typeof n4 || "function" == typeof n4)) {
                if (t3)
                  return f(t3, n4);
              } else if (h) {
                if (e3)
                  return d(e3, n4);
              } else if (r3)
                return function(t4, e4) {
                  var r4 = g(t4, e4);
                  return r4 && r4.value;
                }(r3, n4);
            }, has: function(n4) {
              if (a && n4 && ("object" == typeof n4 || "function" == typeof n4)) {
                if (t3)
                  return c(t3, n4);
              } else if (h) {
                if (e3)
                  return p(e3, n4);
              } else if (r3)
                return function(t4, e4) {
                  return !!g(t4, e4);
                }(r3, n4);
              return false;
            }, set: function(n4, i2) {
              a && n4 && ("object" == typeof n4 || "function" == typeof n4) ? (t3 || (t3 = new a()), u(t3, n4, i2)) : h ? (e3 || (e3 = new h()), l(e3, n4, i2)) : (r3 || (r3 = { key: {}, next: null }), function(t4, e4, r4) {
                var n5 = g(t4, e4);
                n5 ? n5.value = r4 : t4.next = { key: e4, next: t4.next, value: r4 };
              }(r3, n4, i2));
            } };
            return n3;
          };
        }, 32553: (t2, e2, r2) => {
          "use strict";
          var n2 = r2(89509).Buffer, i = n2.isEncoding || function(t3) {
            switch ((t3 = "" + t3) && t3.toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
              case "raw":
                return true;
              default:
                return false;
            }
          };
          function o(t3) {
            var e3;
            switch (this.encoding = function(t4) {
              var e4 = function(t5) {
                if (!t5)
                  return "utf8";
                for (var e5; ; )
                  switch (t5) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return t5;
                    default:
                      if (e5)
                        return;
                      t5 = ("" + t5).toLowerCase(), e5 = true;
                  }
              }(t4);
              if ("string" != typeof e4 && (n2.isEncoding === i || !i(t4)))
                throw new Error("Unknown encoding: " + t4);
              return e4 || t4;
            }(t3), this.encoding) {
              case "utf16le":
                this.text = h, this.end = f, e3 = 4;
                break;
              case "utf8":
                this.fillLast = a, e3 = 4;
                break;
              case "base64":
                this.text = u, this.end = c, e3 = 3;
                break;
              default:
                return this.write = d, void (this.end = l);
            }
            this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n2.allocUnsafe(e3);
          }
          function s(t3) {
            return t3 <= 127 ? 0 : t3 >> 5 == 6 ? 2 : t3 >> 4 == 14 ? 3 : t3 >> 3 == 30 ? 4 : t3 >> 6 == 2 ? -1 : -2;
          }
          function a(t3) {
            var e3 = this.lastTotal - this.lastNeed, r3 = function(t4, e4, r4) {
              if (128 != (192 & e4[0]))
                return t4.lastNeed = 0, "\uFFFD";
              if (t4.lastNeed > 1 && e4.length > 1) {
                if (128 != (192 & e4[1]))
                  return t4.lastNeed = 1, "\uFFFD";
                if (t4.lastNeed > 2 && e4.length > 2 && 128 != (192 & e4[2]))
                  return t4.lastNeed = 2, "\uFFFD";
              }
            }(this, t3);
            return void 0 !== r3 ? r3 : this.lastNeed <= t3.length ? (t3.copy(this.lastChar, e3, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t3.copy(this.lastChar, e3, 0, t3.length), void (this.lastNeed -= t3.length));
          }
          function h(t3, e3) {
            if ((t3.length - e3) % 2 == 0) {
              var r3 = t3.toString("utf16le", e3);
              if (r3) {
                var n3 = r3.charCodeAt(r3.length - 1);
                if (n3 >= 55296 && n3 <= 56319)
                  return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1], r3.slice(0, -1);
              }
              return r3;
            }
            return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t3[t3.length - 1], t3.toString("utf16le", e3, t3.length - 1);
          }
          function f(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            if (this.lastNeed) {
              var r3 = this.lastTotal - this.lastNeed;
              return e3 + this.lastChar.toString("utf16le", 0, r3);
            }
            return e3;
          }
          function u(t3, e3) {
            var r3 = (t3.length - e3) % 3;
            return 0 === r3 ? t3.toString("base64", e3) : (this.lastNeed = 3 - r3, this.lastTotal = 3, 1 === r3 ? this.lastChar[0] = t3[t3.length - 1] : (this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1]), t3.toString("base64", e3, t3.length - r3));
          }
          function c(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            return this.lastNeed ? e3 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e3;
          }
          function d(t3) {
            return t3.toString(this.encoding);
          }
          function l(t3) {
            return t3 && t3.length ? this.write(t3) : "";
          }
          e2.s = o, o.prototype.write = function(t3) {
            if (0 === t3.length)
              return "";
            var e3, r3;
            if (this.lastNeed) {
              if (void 0 === (e3 = this.fillLast(t3)))
                return "";
              r3 = this.lastNeed, this.lastNeed = 0;
            } else
              r3 = 0;
            return r3 < t3.length ? e3 ? e3 + this.text(t3, r3) : this.text(t3, r3) : e3 || "";
          }, o.prototype.end = function(t3) {
            var e3 = t3 && t3.length ? this.write(t3) : "";
            return this.lastNeed ? e3 + "\uFFFD" : e3;
          }, o.prototype.text = function(t3, e3) {
            var r3 = function(t4, e4, r4) {
              var n4 = e4.length - 1;
              if (n4 < r4)
                return 0;
              var i2 = s(e4[n4]);
              return i2 >= 0 ? (i2 > 0 && (t4.lastNeed = i2 - 1), i2) : --n4 < r4 || -2 === i2 ? 0 : (i2 = s(e4[n4])) >= 0 ? (i2 > 0 && (t4.lastNeed = i2 - 2), i2) : --n4 < r4 || -2 === i2 ? 0 : (i2 = s(e4[n4])) >= 0 ? (i2 > 0 && (2 === i2 ? i2 = 0 : t4.lastNeed = i2 - 3), i2) : 0;
            }(this, t3, e3);
            if (!this.lastNeed)
              return t3.toString("utf8", e3);
            this.lastTotal = r3;
            var n3 = t3.length - (r3 - this.lastNeed);
            return t3.copy(this.lastChar, 0, n3), t3.toString("utf8", e3, n3);
          }, o.prototype.fillLast = function(t3) {
            if (this.lastNeed <= t3.length)
              return t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
            t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t3.length), this.lastNeed -= t3.length;
          };
        }, 14999: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.decode = e2.decodeToHexData = e2.encodeBytesData = e2.encode = void 0;
          var n2 = r2(13550), i = r2(62989), o = r2(35986), s = r2(95506);
          function a(t3, e3) {
            var r3 = t3.byteLength, n3 = r3 - e3.length;
            if (n3 < 0)
              throw d(t3, e3.length, "Offset < 0");
            var i2 = new Uint8Array(r3);
            return i2.set(e3, "bytes" === t3.type ? 0 : n3), { result: Buffer.from(i2).toString("hex"), typeObj: t3 };
          }
          function h(t3, e3) {
            if ("string" != typeof e3 || !/^[0-9a-fA-F]+$/.test(e3))
              throw new Error("[Error] decode, params should be hex-string.");
            var r3 = t3.byteLength, n3 = e3.substring(0, 2 * r3), i2 = n3.length / 2;
            if (r3 !== i2)
              throw d(t3, i2, "Byte_Len !== Data_Len");
            var o2 = t3.actualByteLen, s2 = r3 - o2;
            if (i2 < s2)
              throw d(t3, o2, "Data_Len < Offset");
            return { result: "bytes" === t3.type ? n3.substring(0, n3.length - 2 * s2) : n3.substring(2 * s2), params: e3.substring(2 * i2), _params: n3 };
          }
          function f(t3, e3, r3) {
            var n3 = t3.type, i2 = t3.typeStr, a2 = t3.actualByteLen;
            switch (n3) {
              case "address":
                return (0, o.getAddressFromOriginalAddress)(e3);
              case "bool":
                return c("01" === e3 ? "1" : "0", "uint");
              case "number":
                return c(e3, i2, a2, r3);
              case "gid":
                return e3;
              case "tokenId":
                return function(t4) {
                  var e4 = (0, s.getTokenIdFromOriginalTokenId)(t4);
                  if (!e4)
                    throw new Error("[Error] Illegal tokenId. ".concat(t4));
                  return e4;
                }(e3);
            }
          }
          function u(t3, e3, r3) {
            var o2 = (0, s.isSafeInteger)(t3);
            if (-1 === o2)
              throw new Error("".concat(i.integerIllegal.message, ", number: ").concat(t3, ", type: ").concat(e3));
            if (0 === o2)
              throw new Error("".concat(i.unsafeInteger.message, ", number: ").concat(t3, ", type: ").concat(e3));
            var a2 = new n2(t3);
            if (a2.bitLength() > 8 * r3)
              throw new Error("[Error] Out of range: ".concat(t3, ", ").concat(e3));
            if (0 === e3.indexOf("uint")) {
              if (a2.cmp(new n2(0)) < 0)
                throw new Error("[Error] Uint shouldn't be a negative number ".concat(t3));
              return a2.toArray();
            }
            return a2.toTwos(256).toArray("be");
          }
          function c(t3, e3, r3, i2) {
            var o2 = new n2(t3, 16), s2 = new n2(i2, 16);
            if (0 === e3.indexOf("int") && (o2 = o2.fromTwos(r3 ? 8 * r3 : ""), s2 = s2.fromTwos(256)), s2.bitLength() > 8 * r3)
              throw new Error("[Error] Out of range: ".concat(i2, ", ").concat(e3));
            return o2.toString();
          }
          function d(t3, e3, r3) {
            return void 0 === r3 && (r3 = ""), new Error("[Error] Illegal length. ".concat(JSON.stringify(t3), ", data length: ").concat(e3, ", ").concat(r3));
          }
          e2.encode = function(t3, e3) {
            var r3 = function(t4, e4) {
              var r4, n3, i2 = t4.type, a2 = t4.typeStr, h2 = t4.actualByteLen;
              switch (i2) {
                case "address":
                  return r4 = e4, n3 = (0, o.getOriginalAddressFromAddress)(r4), Buffer.from(n3, "hex");
                case "bool":
                  return u(e4 ? "1" : "0", "uint");
                case "number":
                  return u(e4, a2, h2);
                case "gid":
                  return function(t5) {
                    if (!t5 || !/^[0-9a-fA-F]+$/.test(t5) || 20 !== t5.length)
                      throw new Error("[Error] Illegal gid. ".concat(t5));
                    return Buffer.from(t5, "hex");
                  }(e4);
                case "tokenId":
                  return function(t5) {
                    var e5 = (0, s.getOriginalTokenIdFromTokenId)(t5);
                    if (!e5)
                      throw new Error("[Error] Illegal tokenId. ".concat(t5));
                    return Buffer.from(e5, "hex");
                  }(e4);
              }
            }(t3, e3);
            return a(t3, r3);
          }, e2.encodeBytesData = a, e2.decodeToHexData = h, e2.decode = function(t3, e3) {
            var r3 = h(t3, e3);
            return { result: f(t3, r3.result, r3._params), params: r3.params };
          };
        }, 59417: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.decode = e2.encode = void 0;
          var n2 = r2(14999);
          function i(t3, e3) {
            return "string" === t3 ? Buffer.from(e3, "hex").toString("utf8") : e3;
          }
          e2.encode = function(t3, e3) {
            var r3 = function(t4, e4) {
              if ("string" != typeof e4)
                throw new Error("[Error] Illegal params. Should be string");
              if ("string" === t4)
                return Buffer.from(e4, "utf8");
              var r4 = /^0x[0-9a-fA-F]+$/.test(e4) && e4.length % 2 == 0, n3 = /^[0-9a-fA-F]+$/.test(e4) && e4.length % 2 == 0;
              if ("bytes" === t4 && !r4 && !n3)
                throw new Error("[Error] Illegal params. Should be hex-string.");
              return n3 ? Buffer.from(e4, "hex") : Buffer.from(e4.substring(2), "hex");
            }(t3.type, e3);
            if (t3.byteLength)
              return (0, n2.encodeBytesData)(t3, r3);
            var i2, o, s, a, h, f, u = (o = (i2 = r3).length, s = 32 * Math.ceil(o / 32), h = (a = (0, n2.encode)({ type: "number", typeStr: "uint", byteLength: 32 }, o).result).length / 2 + s, (f = new Uint8Array(h)).set(Buffer.from(a, "hex")), f.set(i2, a.length / 2), Buffer.from(f).toString("hex"));
            if ("bytes" === t3.type) {
              var c = 32 * Math.ceil(r3.length / 32);
              u = (0, n2.encode)({ type: "number", typeStr: "uint", byteLength: 32 }, c).result + u;
            }
            return { result: u, typeObj: t3 };
          }, e2.decode = function(t3, e3) {
            var r3 = t3.type;
            if (t3.byteLength) {
              var o = (0, n2.decodeToHexData)(t3, e3);
              return { result: i(t3.type, o.result), params: o.params };
            }
            var s = function(t4) {
              var e4 = (0, n2.decode)({ type: "number", typeStr: "uint", byteLength: 32 }, t4.substring(0, 64)).result, r4 = 32 * Math.ceil(e4 / 32);
              return { result: t4.substring(64, 64 + 2 * e4), params: t4.substring(64 + 2 * r4) };
            }("bytes" === r3 ? e3.substring(64) : e3);
            return { result: i(r3, s.result), params: s.params };
          };
        }, 65e3: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.decodeParameters = e2.decodeParameter = e2.encodeParameters = e2.encodeParameter = void 0;
          var n2 = r2(95506), i = r2(97955), o = r2(14999), s = r2(59417), a = { address: o.encode, gid: o.encode, tokenId: o.encode, number: o.encode, bool: o.encode, string: s.encode, bytes: s.encode }, h = { address: o.decode, gid: o.decode, tokenId: o.decode, number: o.decode, bool: o.decode, string: s.decode, bytes: s.decode };
          function f(t3, e3) {
            var r3 = (0, i.formatType)(t3);
            if (!r3.isArr && -1 === ["string", "boolean", "number"].indexOf(typeof e3))
              throw new Error("[Error] Illegal type or params. type: ".concat(r3.type, ", params: ").concat(e3));
            if (r3.isArr && !(0, n2.isArray)(e3))
              try {
                if (e3 = JSON.parse(e3), !(0, n2.isArray)(e3))
                  throw new Error("[Error] Illegal type or params. type: ".concat(r3.typeStr, ", params: ").concat(e3));
              } catch (t4) {
                throw new Error("[Error] Illegal type or params. type: ".concat(r3.typeStr, ", params: ").concat(e3));
              }
            return r3.isArr ? function(t4, e4) {
              var r4 = "", i2 = t4.arrLen, o2 = function(e5, s2) {
                void 0 === s2 && (s2 = 0), s2 !== i2.length - 1 ? (s2++, (0, n2.isArray)(e5) && e5.forEach(function(t5) {
                  o2(t5, s2);
                })) : r4 += function(t5, e6, r5) {
                  if (!r5 || e6 && r5.length !== Number(e6))
                    throw new Error("[Error] Params.length !== arr.length. Params: ".concat(JSON.stringify(r5), ". ").concat(JSON.stringify(t5)));
                  var n3 = "";
                  return r5.forEach(function(e7) {
                    var r6 = a[t5.type](t5, e7);
                    n3 += r6.result;
                  }), (e6 ? "" : a.number({ type: "number", typeStr: "uint", byteLength: 32, isArr: false }, r5.length).result) + n3;
                }(t4, i2[i2.length - s2 - 1], e5);
              };
              return o2(e4), { typeObj: t4, result: r4 };
            }(r3, e3) : a[r3.type](r3, e3);
          }
          function u(t3, e3) {
            var r3 = (0, i.formatType)(t3);
            return r3.isArr ? d(r3, e3) : h[r3.type](r3, e3).result;
          }
          function c(t3, e3, r3) {
            var n3 = r3;
            if (t3.isDynamic) {
              var i2 = r3.substring(0, 64);
              e3 = h.number({ type: "number", typeStr: "uint", byteLength: 32, isArr: false }, i2).result, n3 = r3.substring(64);
            }
            for (var o2 = [], s2 = 0; s2 < e3; s2++) {
              var a2 = h[t3.type](t3, n3);
              o2.push(a2.result), n3 = a2.params;
            }
            return { result: o2, params: n3 };
          }
          function d(t3, e3) {
            var r3 = t3.arrLen, n3 = function(i2, o2) {
              if (void 0 === i2 && (i2 = 0), r3.length <= 1 && i2 === r3.length || r3.length > 1 && i2 === r3.length - 1)
                return o2;
              var s2 = r3[i2], a2 = [];
              if (o2)
                for (var h2 = o2 && o2.length; h2; )
                  a2.push(o2.splice(0, s2)), h2 = o2 && o2.length;
              else {
                for (; e3; ) {
                  var f2 = c(t3, s2, e3);
                  e3 = f2.params, a2.push(f2.result);
                }
                a2 = a2.length > 1 ? a2 : a2[0];
              }
              return i2++, n3(i2, a2);
            };
            return n3();
          }
          e2.encodeParameter = f, e2.encodeParameters = function(t3, e3) {
            if ("string" == typeof e3 && (e3 = JSON.parse(e3)), !(0, n2.isArray)(t3))
              throw new Error("[Error] Illegal inputs. Inputs should be array.");
            if (!t3.length)
              return "";
            if (!(0, n2.isArray)(e3) || t3.length !== e3.length)
              throw new Error("[Error] Illegal params. Params should be array and the length should be equal to inputs.length");
            var r3 = [], i2 = [], o2 = 0;
            t3.forEach(function(t4, n3) {
              var s3 = f(t4, e3[n3]);
              if (!s3.typeObj.isDynamic)
                return o2 += s3.result.length, void r3.push(s3.result);
              var a2 = s3.result;
              "bytes" !== s3.typeObj.type || s3.typeObj.isArr || (a2 = a2.slice(64)), o2 += 64, r3.push(false), i2.push(a2);
            });
            var s2 = "", h2 = "";
            return r3.forEach(function(t4) {
              if (t4)
                s2 += t4;
              else {
                var e4 = (o2 + h2.length) / 2;
                s2 += a.number({ type: "number", typeStr: "uint", byteLength: 32, isArr: false }, e4).result, h2 += i2.shift();
              }
            }), s2 + h2;
          }, e2.decodeParameter = u, e2.decodeParameters = function(t3, e3) {
            if (!(0, n2.isArray)(t3))
              throw new Error("[Error] Illegal types. Should be array.");
            if (!e3)
              return null;
            var r3 = e3, o2 = [], s2 = [];
            t3.forEach(function(t4) {
              var e4 = (0, i.formatType)(t4);
              if (!e4.isDynamic && e4.isArr) {
                var n3 = 0;
                e4.arrLen.forEach(function(t5) {
                  n3 += t5 * e4.byteLength;
                });
                var a2 = r3.slice(0, 2 * n3);
                return r3 = r3.slice(2 * n3), void o2.push({ isDynamic: false, result: d(e4, a2) });
              }
              if (!e4.isDynamic) {
                var f3 = h[e4.type](e4, r3);
                return r3 = f3.params, void o2.push({ isDynamic: false, result: f3.result });
              }
              var u2 = h.number({ type: "number", typeStr: "uint", byteLength: 32, isArr: false }, r3), c3 = u2.result;
              r3 = u2.params, s2.push(2 * c3), o2.push({ isDynamic: true, typeObj: e4, index: 2 * c3 });
            });
            var f2 = [], c2 = 0;
            return o2.forEach(function(r4, n3) {
              if (r4.isDynamic) {
                var i2;
                if (i2 = c2 + 1 === s2.length ? e3.slice(r4.index) : e3.slice(r4.index, s2[c2 + 1]), "bytes" === r4.typeObj.type && !r4.typeObj.isArr) {
                  var o3 = 32 * Math.ceil(i2.length / 2 / 32);
                  i2 = a.number({ type: "number", typeStr: "uint", byteLength: 32 }, o3).result + i2;
                }
                c2++, f2.push(u(t3[n3], i2));
              } else
                f2.push(r4.result);
            }), f2;
          };
        }, 76440: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.getFunction = e2.encodeFunction = void 0;
          var n2 = r2(95506), i = r2(97955);
          function o(t3, e3) {
            if (!(0, n2.isArray)(t3) && (0, n2.isObject)(t3))
              return t3;
            if (1 !== t3.length && !e3)
              throw new Error("[Error] Param(s) missing, methodName.");
            return e3 || 1 !== t3.length ? t3.find(function(t4) {
              return t4.name === e3;
            }) : t3[0];
          }
          e2.encodeFunction = function(t3, e3) {
            var r3 = function(t4) {
              var e4 = /\w+\((\w\,\w)*|(\w*)\)/g;
              if (!(0, n2.isObject)(t4) && !e4.test(t4))
                throw new Error("[Error] Illegal jsonFunction. ".concat(JSON.stringify(t4)));
              if (e4.test(t4))
                return t4;
              if (t4.name && e4.test(t4.name))
                return t4.name;
              var r4 = (0, i.getTypes)(t4);
              return "".concat(t4.name, "(").concat(r4.join(","), ")");
            }((0, n2.isArray)(t3) ? o(t3, e3) : t3);
            return (0, n2.blake2bHex)(r3, null, 32);
          }, e2.getFunction = o;
        }, 90277: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.getAbiByName = e2.getAbiByType = e2.decodeLog = e2.decodeParameters = e2.encodeParameters = e2.decodeParameter = e2.encodeParameter = e2.encodeFunctionCall = e2.encodeFunctionSignature = e2.encodeLogSignature = void 0;
          var n2 = r2(95506), i = r2(76440), o = r2(65e3), s = r2(97955);
          function a(t3, e3) {
            return (0, i.encodeFunction)(t3, e3).slice(0, 8);
          }
          function h(t3, e3, r3) {
            try {
              if (r3 || !(0, n2.isArray)(t3) && (0, n2.isObject)(t3)) {
                var a2 = (0, i.getFunction)(t3, r3);
                t3 = (0, s.getTypes)(a2);
              }
            } catch (t4) {
            }
            return (0, o.encodeParameters)((0, s.getTypes)(t3), e3);
          }
          function f(t3, e3, r3) {
            try {
              if (r3 || !(0, n2.isArray)(t3) && (0, n2.isObject)(t3)) {
                var a2 = (0, i.getFunction)(t3, r3);
                t3 = (0, s.getTypes)(a2);
              }
            } catch (t4) {
            }
            return (0, o.decodeParameters)((0, s.getTypes)(t3), e3);
          }
          e2.encodeLogSignature = function(t3, e3) {
            return (0, i.encodeFunction)(t3, e3);
          }, e2.encodeFunctionSignature = a, e2.encodeFunctionCall = function(t3, e3, r3) {
            return a(t3, r3) + h(t3, e3, r3);
          }, e2.encodeParameter = function(t3, e3) {
            return (0, o.encodeParameter)(t3, e3).result;
          }, e2.decodeParameter = o.decodeParameter, e2.encodeParameters = h, e2.decodeParameters = f, e2.decodeLog = function(t3, r3, o2, s2) {
            void 0 === r3 && (r3 = "");
            var a2 = [], h2 = [], u = function(t4, e3) {
              try {
                var r4 = (0, i.getFunction)(t4, e3);
                r4 && (t4 = r4);
              } catch (t5) {
              }
              if (!(0, n2.isArray)(t4) && !(0, n2.isObject)(t4))
                throw new Error("[Error] decodeLog: Illegal inputs ".concat(JSON.stringify(t4), ". Should be Array or JsonInterface."));
              return (t4 = (0, n2.isArray)(t4) ? t4 : t4.inputs) || [];
            }(t3, s2), c = {}, d = t3.anonymous ? 0 : 1;
            u.forEach(function(t4, r4) {
              if (t4.indexed) {
                var n3 = ["bool", "int", "uint", "address", "fixed", "ufixed"].find(function(e3) {
                  return -1 !== t4.type.indexOf(e3);
                }) ? (0, e2.decodeParameter)(t4.type, o2[d]) : o2[d];
                d++, c[r4] = n3, t4.name && (c[t4.name] = n3);
              } else
                a2.push(t4), h2.push(t4.type);
            });
            var l = f(h2, r3), p = 0;
            return u.forEach(function(t4, e3) {
              t4.indexed || (c[e3] = l[p], t4.name && (c[t4.name] = l[p]), p++);
            }), c;
          }, e2.getAbiByType = function(t3, e3) {
            if (!t3 || !e3)
              return null;
            if (!(0, n2.isArray)(t3) && !(0, n2.isObject)(t3))
              throw new Error("jsonInterfaces need array or object ");
            return !(0, n2.isArray)(t3) && (0, n2.isObject)(t3) && t3.type === e3 ? t3 : t3.find(function(t4) {
              return t4.type === e3;
            }) || null;
          }, e2.getAbiByName = function(t3, e3) {
            if (!t3 || !e3)
              return null;
            if (!(0, n2.isArray)(t3) && !(0, n2.isObject)(t3))
              throw new Error("jsonInterfaces need array or object ");
            return !(0, n2.isArray)(t3) && (0, n2.isObject)(t3) && t3.name === e3 ? t3 : t3.find(function(t4) {
              return t4.name === e3;
            }) || null;
          };
        }, 97955: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.getTypes = e2.formatType = e2.validType = void 0;
          var n2 = r2(95506), i = new RegExp(/(\d+)/g), o = ["uint", "int", "address", "bool", "bytes", "string", "tokenId", "gid"];
          function s(t3) {
            if ("string" != typeof t3)
              throw new Error("[Error] Illegal type ".concat(JSON.stringify(t3), ". Should be type-string, like 'uint32'."));
            var e3 = /^\w+(\[\d*\])+$/g.test(t3), r3 = /^\w+\d*$/g.test(t3);
            if (!e3 && !r3)
              throw new Error("[Error] Illegal type. ".concat(t3));
            var n3, s2 = t3.match(/^[a-zA-Z]+/g), a = s2 && s2[0] ? s2[0] : "";
            if (!a || -1 === o.indexOf(a))
              throw new Error("[Error] Illegal type. ".concat(t3));
            a = a.indexOf("int") >= 0 ? "number" : a;
            var h = (n3 = e3 ? t3.split("[")[0].match(i) : t3.match(i)) ? n3[0] : 0;
            if ("bytes" === a && h && !(h > 0 && h <= 32))
              throw new Error("[Error] Illegal type. ".concat(t3, ": Binary type of\xA0M\xA0bytes,\xA00\xA0<\xA0M\xA0<=\xA032. Or dynamic sized byte sequence."));
            if ("number" === a && h && !(h > 0 && h <= 256 && h % 8 == 0))
              throw new Error("[Error] Illegal type. ".concat(t3, ": Unsigned integer type of\xA0M\xA0bits,\xA00\xA0<\xA0M\xA0<=\xA0256,\xA0M\xA0%\xA08\xA0==\xA00. e.g.\xA0uint32,\xA0uint8,\xA0uint256."));
            return { isArr: e3, type: a, size: h };
          }
          e2.formatType = function(t3) {
            var e3 = s(t3), r3 = e3.isArr, n3 = e3.type, i2 = e3.size, o2 = [], a = "string" === n3;
            if (r3) {
              var h = t3.split("[").slice(1);
              h.length > 1 && console.warn("Not support [][][] like ".concat(t3, ", now.")), h.forEach(function(t4) {
                var e4 = t4.match(/\d+/g), r4 = e4 && e4[0] ? e4[0] : 0;
                a = a || !r4, o2.push(r4);
              });
            }
            var f = i2 || 0;
            switch (n3) {
              case "number":
                f = i2 / 8 || 32;
                break;
              case "bool":
                f = 1;
                break;
              case "address":
                f = 21;
                break;
              case "gid":
              case "tokenId":
                f = 10;
            }
            return { typeStr: t3, type: n3, byteLength: 32 * Math.ceil(f / 32), actualByteLen: f, isArr: r3, arrLen: o2, isDynamic: a || "bytes" === n3 && !f };
          }, e2.validType = s, e2.getTypes = function(t3) {
            if ((0, n2.isArray)(t3)) {
              var e3 = [];
              return t3 && t3.forEach(function(t4) {
                var r4 = "string" == typeof t4 ? t4 : t4.type;
                s(r4), e3.push(r4);
              }), e3;
            }
            if (!(0, n2.isObject)(t3))
              throw new Error("[Error] Illegal types: ".concat(t3, ". Should be Array<string> or JsonInterface."));
            var r3 = [];
            return t3.inputs && t3.inputs.forEach(function(t4) {
              s(t4.type), r3.push(t4.type);
            }), r3;
          };
        }, 21228: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.Account = void 0;
          var n2 = r2(19548), i = r2(35986), o = r2(95506), s = r2(62989), a = r2(42497), h = r2(89148), f = function() {
            function t3(t4) {
              var e3 = (0, o.checkParams)({ address: t4 }, ["address"], [{ name: "address", func: i.isValidAddress }]);
              if (e3)
                throw e3;
              this.address = t4;
            }
            return t3.prototype.setProvider = function(t4) {
              return this.provider = t4, this;
            }, t3.prototype.setPrivateKey = function(t4) {
              var e3 = (0, o.checkParams)({ privateKey: t4 }, ["privateKey"], [{ name: "privateKey", func: o.isHexString }]);
              if (e3)
                throw e3;
              if ((0, i.createAddressByPrivateKey)(t4).address !== this.address)
                throw new Error("PrivateKey is wrong");
              return this.privateKey = t4, this;
            }, t3.prototype.receive = function(t4) {
              var e3 = t4.sendBlockHash, r3 = (0, o.checkParams)({ sendBlockHash: e3 }, ["sendBlockHash"]);
              if (r3)
                throw r3;
              return new a.default({ blockType: n2.BlockType.Response, address: this.address, sendBlockHash: e3 }, this.provider, this.privateKey);
            }, t3.prototype.send = function(t4) {
              var e3 = t4.toAddress, r3 = t4.tokenId, i2 = void 0 === r3 ? n2.Vite_TokenId : r3, s2 = t4.amount, h2 = void 0 === s2 ? "0" : s2, f2 = t4.data, u = (0, o.checkParams)({ toAddress: e3 }, ["toAddress"]);
              if (u)
                throw u;
              return new a.default({ blockType: n2.BlockType.TransferRequest, address: this.address, toAddress: e3, tokenId: i2, amount: h2, data: f2 }, this.provider, this.privateKey);
            }, t3.prototype.createContract = function(t4) {
              var e3 = t4.responseLatency, r3 = void 0 === e3 ? "0" : e3, i2 = t4.quotaMultiplier, f2 = void 0 === i2 ? "10" : i2, u = t4.randomDegree, c = void 0 === u ? "0" : u, d = t4.code, l = t4.abi, p = t4.params, g = (0, o.checkParams)({ abi: l, responseLatency: r3, quotaMultiplier: f2, randomDegree: c }, ["responseLatency", "quotaMultiplier", "randomDegree"], [{ name: "abi", func: function(t5) {
                return (0, o.isArray)(t5) || (0, o.isObject)(t5);
              } }]);
              if (g)
                throw g;
              if (Number(r3) < Number(c))
                throw { code: s.paramsConflict.code, message: "".concat(s.paramsConflict.message, " responseLatency and randomDegree, responseLatency must >= randomDegree") };
              var y = (0, h.getCreateContractData)({ abi: l, code: d, params: p, responseLatency: r3, quotaMultiplier: f2, randomDegree: c });
              return new a.default({ blockType: n2.BlockType.CreateContractRequest, address: this.address, data: y, fee: "10000000000000000000", tokenId: n2.Vite_TokenId }, this.provider, this.privateKey);
            }, t3.prototype.callContract = function(t4) {
              var e3 = t4.toAddress, r3 = t4.tokenId, s2 = void 0 === r3 ? n2.Vite_TokenId : r3, f2 = t4.amount, u = void 0 === f2 ? "0" : f2, c = t4.fee, d = void 0 === c ? "0" : c, l = t4.abi, p = t4.methodName, g = t4.params, y = void 0 === g ? [] : g, m = (0, o.checkParams)({ toAddress: e3, abi: l }, ["toAddress", "abi"], [{ name: "address", func: function(t5) {
                return (0, i.isValidAddress)(t5) === i.AddressType.Contract;
              } }]);
              if (m)
                throw m;
              return new a.default({ blockType: n2.BlockType.TransferRequest, address: this.address, toAddress: e3, tokenId: s2, amount: u, fee: d, data: (0, h.getCallContractData)({ abi: l, params: y, methodName: p }) }, this.provider, this.privateKey);
            }, t3.prototype.registerSBP = function(t4) {
              var e3 = t4.sbpName, r3 = t4.blockProducingAddress, s2 = t4.rewardWithdrawAddress, a2 = t4.amount, h2 = void 0 === a2 ? "1000000000000000000000000" : a2, f2 = (0, o.checkParams)({ blockProducingAddress: r3, sbpName: e3, rewardWithdrawAddress: s2 }, ["blockProducingAddress", "sbpName", "rewardWithdrawAddress"], [{ name: "sbpName", func: o.isValidSBPName }, { name: "blockProducingAddress", func: i.isValidAddress }, { name: "rewardWithdrawAddress", func: i.isValidAddress }]);
              if (f2)
                throw f2;
              return this.callContract({ abi: n2.Contracts.RegisterSBP.abi, toAddress: n2.Contracts.RegisterSBP.contractAddress, params: [e3, r3, s2], tokenId: n2.Vite_TokenId, amount: h2 });
            }, t3.prototype.updateSBPBlockProducingAddress = function(t4) {
              var e3 = t4.sbpName, r3 = t4.blockProducingAddress, s2 = (0, o.checkParams)({ blockProducingAddress: r3, sbpName: e3 }, ["blockProducingAddress", "sbpName"], [{ name: "sbpName", func: o.isValidSBPName }, { name: "blockProducingAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.UpdateSBPBlockProducingAddress.abi, toAddress: n2.Contracts.UpdateSBPBlockProducingAddress.contractAddress, params: [e3, r3] });
            }, t3.prototype.updateSBPRewardWithdrawAddress = function(t4) {
              var e3 = t4.sbpName, r3 = t4.rewardWithdrawAddress, s2 = (0, o.checkParams)({ rewardWithdrawAddress: r3, sbpName: e3 }, ["rewardWithdrawAddress", "sbpName"], [{ name: "sbpName", func: o.isValidSBPName }, { name: "rewardWithdrawAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.UpdateSBPRewardWithdrawAddress.abi, toAddress: n2.Contracts.UpdateSBPRewardWithdrawAddress.contractAddress, params: [e3, r3] });
            }, t3.prototype.revokeSBP = function(t4) {
              var e3 = t4.sbpName, r3 = (0, o.checkParams)({ sbpName: e3 }, ["sbpName"], [{ name: "sbpName", func: o.isValidSBPName }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.RevokeSBP.abi, toAddress: n2.Contracts.RevokeSBP.contractAddress, params: [e3] });
            }, t3.prototype.withdrawSBPReward = function(t4) {
              var e3 = t4.sbpName, r3 = t4.receiveAddress, s2 = (0, o.checkParams)({ sbpName: e3, receiveAddress: r3 }, ["sbpName", "receiveAddress"], [{ name: "sbpName", func: o.isValidSBPName }, { name: "receiveAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.WithdrawSBPReward.abi, toAddress: n2.Contracts.WithdrawSBPReward.contractAddress, params: [e3, r3] });
            }, t3.prototype.voteForSBP = function(t4) {
              var e3 = t4.sbpName, r3 = (0, o.checkParams)({ sbpName: e3 }, ["sbpName"], [{ name: "sbpName", func: o.isValidSBPName }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.VoteForSBP.abi, toAddress: n2.Contracts.VoteForSBP.contractAddress, params: [e3] });
            }, t3.prototype.cancelSBPVoting = function() {
              return this.callContract({ abi: n2.Contracts.CancelSBPVoting.abi, toAddress: n2.Contracts.CancelSBPVoting.contractAddress, params: [] });
            }, t3.prototype.stakeForQuota = function(t4) {
              var e3 = t4.beneficiaryAddress, r3 = t4.amount, s2 = (0, o.checkParams)({ beneficiaryAddress: e3, amount: r3 }, ["beneficiaryAddress", "amount"], [{ name: "beneficiaryAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.StakeForQuota.abi, toAddress: n2.Contracts.StakeForQuota.contractAddress, params: [e3], tokenId: n2.Vite_TokenId, amount: r3 });
            }, t3.prototype.stakeForQuota_V2 = function(t4) {
              var e3 = t4.beneficiaryAddress, r3 = t4.amount, s2 = (0, o.checkParams)({ beneficiaryAddress: e3, amount: r3 }, ["beneficiaryAddress", "amount"], [{ name: "beneficiaryAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.StakeForQuota_V2.abi, toAddress: n2.Contracts.StakeForQuota_V2.contractAddress, params: [e3], tokenId: n2.Vite_TokenId, amount: r3 });
            }, t3.prototype.cancelQuotaStake = function(t4) {
              var e3 = t4.id, r3 = (0, o.checkParams)({ id: e3 }, ["id"]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.CancelQuotaStake.abi, toAddress: n2.Contracts.CancelQuotaStake.contractAddress, params: [e3] });
            }, t3.prototype.cancelQuotaStake_V2 = function(t4) {
              var e3 = t4.beneficiaryAddress, r3 = t4.amount, s2 = (0, o.checkParams)({ beneficiaryAddress: e3, amount: r3 }, ["beneficiaryAddress", "amount"], [{ name: "beneficiaryAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.CancelQuotaStake_V2.abi, toAddress: n2.Contracts.CancelQuotaStake_V2.contractAddress, params: [e3, r3] });
            }, t3.prototype.issueToken = function(t4) {
              var e3 = t4.tokenName, r3 = t4.isReIssuable, i2 = t4.maxSupply, s2 = t4.isOwnerBurnOnly, a2 = t4.totalSupply, h2 = t4.decimals, f2 = t4.tokenSymbol, u = (0, o.checkParams)({ tokenName: e3, tokenSymbol: f2, decimals: h2 }, ["tokenName", "tokenSymbol", "decimals"]);
              if (u)
                throw u;
              return this.callContract({ abi: n2.Contracts.IssueToken.abi, toAddress: n2.Contracts.IssueToken.contractAddress, params: [r3, e3, f2, a2, h2, i2, s2], fee: "1000000000000000000000" });
            }, t3.prototype.reIssueToken = function(t4) {
              var e3 = t4.tokenId, r3 = t4.amount, s2 = t4.receiveAddress, a2 = (0, o.checkParams)({ tokenId: e3, amount: r3, receiveAddress: s2 }, ["tokenId", "amount", "receiveAddress"], [{ name: "receiveAddress", func: i.isValidAddress }, { name: "amount", func: o.isNonNegativeInteger, msg: "Amount must be an non-negative integer string." }]);
              if (a2)
                throw a2;
              return this.callContract({ abi: n2.Contracts.ReIssueToken.abi, toAddress: n2.Contracts.ReIssueToken.contractAddress, params: [e3, r3, s2], tokenId: e3 });
            }, t3.prototype.burnToken = function(t4) {
              var e3 = t4.tokenId, r3 = t4.amount, i2 = (0, o.checkParams)({ tokenId: e3, amount: r3 }, ["tokenId", "amount"]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.BurnToken.abi, toAddress: n2.Contracts.BurnToken.contractAddress, params: [], tokenId: e3, amount: r3 });
            }, t3.prototype.disableReIssueToken = function(t4) {
              var e3 = t4.tokenId, r3 = (0, o.checkParams)({ tokenId: e3 }, ["tokenId"]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DisableReIssue.abi, toAddress: n2.Contracts.DisableReIssue.contractAddress, params: [e3], tokenId: e3 });
            }, t3.prototype.transferTokenOwnership = function(t4) {
              var e3 = t4.newOwnerAddress, r3 = t4.tokenId, s2 = (0, o.checkParams)({ tokenId: r3, newOwnerAddress: e3 }, ["tokenId", "newOwnerAddress"], [{ name: "newOwnerAddress", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.TransferTokenOwnership.abi, toAddress: n2.Contracts.TransferTokenOwnership.contractAddress, params: [r3, e3], tokenId: r3 });
            }, t3.prototype.dexDeposit = function(t4) {
              var e3 = t4.tokenId, r3 = t4.amount, i2 = (0, o.checkParams)({ tokenId: e3, amount: r3 }, ["tokenId", "amount"]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.DexDeposit.abi, toAddress: n2.Contracts.DexDeposit.contractAddress, params: [], tokenId: e3, amount: r3 });
            }, t3.prototype.dexWithdraw = function(t4) {
              var e3 = t4.tokenId, r3 = t4.amount, i2 = (0, o.checkParams)({ tokenId: e3, amount: r3 }, ["tokenId", "amount"]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.DexWithdraw.abi, toAddress: n2.Contracts.DexWithdraw.contractAddress, params: [e3, r3], tokenId: e3 });
            }, t3.prototype.dexOpenNewMarket = function(t4) {
              var e3 = t4.tradeToken, r3 = t4.quoteToken, i2 = (0, o.checkParams)({ tradeToken: e3, quoteToken: r3 }, ["tradeToken", "quoteToken"], [{ name: "tradeToken", func: o.isValidTokenId }, { name: "quoteToken", func: o.isValidTokenId }]);
              if (i2)
                throw i2;
              return this.callContract({ toAddress: n2.Contracts.DexOpenNewMarket.contractAddress, abi: n2.Contracts.DexOpenNewMarket.abi, params: [e3, r3] });
            }, t3.prototype.dexPlaceOrder = function(t4) {
              var e3 = t4.tradeToken, r3 = t4.quoteToken, i2 = t4.side, s2 = t4.price, a2 = t4.quantity, h2 = t4.orderType, f2 = void 0 === h2 ? "0" : h2, u = (0, o.checkParams)({ tradeToken: e3, quoteToken: r3, side: i2, price: s2, quantity: a2 }, ["tradeToken", "quoteToken", "side", "price", "quantity"], [{ name: "tradeToken", func: o.isValidTokenId }, { name: "quoteToken", func: o.isValidTokenId }, { name: "side", func: function(t5) {
                return "1" === "".concat(t5) || "0" === "".concat(t5);
              } }]);
              if (u)
                throw u;
              return this.callContract({ abi: n2.Contracts.DexPlaceOrder.abi, toAddress: n2.Contracts.DexPlaceOrder.contractAddress, params: [e3, r3, i2, f2, s2, a2], tokenId: e3 });
            }, t3.prototype.dexCancelOrder = function(t4) {
              var e3 = t4.orderId, r3 = (0, o.checkParams)({ orderId: e3 }, ["orderId"], [{ name: "orderId", func: function(t5) {
                return (0, o.isHexString)(t5) || (0, o.isBase64String)(t5);
              } }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexCancelOrder.abi, toAddress: n2.Contracts.DexCancelOrder.contractAddress, params: ["0x".concat(e3)] });
            }, t3.prototype.dexStakeForMining = function(t4) {
              var e3 = t4.actionType, r3 = t4.amount, i2 = (0, o.checkParams)({ actionType: e3, amount: r3 }, ["actionType", "amount"], [{ name: "actionType", func: function(t5) {
                return 1 === Number(e3) || 2 === Number(e3);
              } }, { name: "amount", func: o.isNonNegativeInteger, msg: "Amount must be an non-negative integer string." }]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.DexStakeForMining.abi, toAddress: n2.Contracts.DexStakeForMining.contractAddress, params: [e3, r3] });
            }, t3.prototype.dexStakeForVIP = function(t4) {
              var e3 = t4.actionType, r3 = (0, o.checkParams)({ actionType: e3 }, ["actionType"], [{ name: "actionType", func: function(t5) {
                return 1 === Number(e3) || 2 === Number(e3);
              } }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexStakeForVIP.abi, toAddress: n2.Contracts.DexStakeForVIP.contractAddress, params: [e3] });
            }, t3.prototype.dexMarketAdminConfig = function(t4) {
              var e3 = t4.operationCode, r3 = t4.tradeToken, s2 = t4.quoteToken, a2 = t4.marketOwner, h2 = t4.takerFeeRate, f2 = t4.makerFeeRate, u = t4.stopMarket, c = void 0 !== u && u, d = (0, o.checkParams)({ operationCode: e3, tradeToken: r3, quoteToken: s2, marketOwner: a2, takerFeeRate: h2, makerFeeRate: f2 }, ["operationCode", "tradeToken", "quoteToken", "marketOwner", "takerFeeRate", "makerFeeRate"], [{ name: "tradeToken", func: o.isValidTokenId }, { name: "quoteToken", func: o.isValidTokenId }, { name: "marketOwner", func: i.isValidAddress }, { name: "operationCode", func: function(t5) {
                return t5 >= 1 && t5 <= 15;
              } }]);
              if (d)
                throw d;
              return this.callContract({ abi: n2.Contracts.DexMarketAdminConfig.abi, toAddress: n2.Contracts.DexMarketAdminConfig.contractAddress, params: [e3, r3, s2, a2, h2, f2, !!c], tokenId: s2 });
            }, t3.prototype.dexTransferTokenOwnership = function(t4) {
              var e3 = t4.tokenId, r3 = t4.newOwner, s2 = (0, o.checkParams)({ tokenId: e3, newOwner: r3 }, ["tokenId", "newOwner"], [{ name: "newOwner", func: i.isValidAddress }]);
              if (s2)
                throw s2;
              return this.callContract({ abi: n2.Contracts.DexTransferTokenOwnership.abi, toAddress: n2.Contracts.DexTransferTokenOwnership.contractAddress, params: [e3, r3], tokenId: e3 });
            }, t3.prototype.dexCreateNewInviter = function() {
              return this.callContract({ abi: n2.Contracts.DexCreateNewInviter.abi, toAddress: n2.Contracts.DexCreateNewInviter.contractAddress, params: [] });
            }, t3.prototype.dexBindInviteCode = function(t4) {
              var e3 = t4.code, r3 = (0, o.checkParams)({ code: e3 }, ["code"]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexBindInviteCode.abi, toAddress: n2.Contracts.DexBindInviteCode.contractAddress, params: [e3] });
            }, t3.prototype.dexStakeForSuperVIP = function(t4) {
              var e3 = t4.actionType, r3 = (0, o.checkParams)({ actionType: e3 }, ["actionType"], [{ name: "actionType", func: function(t5) {
                return 1 === Number(t5) || 2 === Number(t5);
              } }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexStakeForSuperVIP.abi, toAddress: n2.Contracts.DexStakeForSuperVIP.contractAddress, params: [e3] });
            }, t3.prototype.dexConfigMarketAgents = function(t4) {
              var e3 = t4.actionType, r3 = t4.agent, s2 = t4.tradeTokens, a2 = t4.quoteTokens, h2 = (0, o.checkParams)({ actionType: e3, agent: r3, tradeTokens: s2, quoteTokens: a2 }, ["actionType", "agent", "tradeTokens", "quoteTokens"], [{ name: "actionType", func: function(t5) {
                return 1 === Number(t5) || 2 === Number(t5);
              } }, { name: "agent", func: i.isValidAddress }, { name: "tradeTokens", func: function(t5) {
                for (var e4 = 0, r4 = t5; e4 < r4.length; e4++) {
                  var n3 = r4[e4];
                  if (!(0, o.isValidTokenId)(n3))
                    return false;
                }
                return true;
              } }, { name: "quoteTokens", func: function(t5) {
                for (var e4 = 0, r4 = t5; e4 < r4.length; e4++) {
                  var n3 = r4[e4];
                  if (!(0, o.isValidTokenId)(n3))
                    return false;
                }
                return true;
              } }]);
              if (h2)
                throw h2;
              return this.callContract({ abi: n2.Contracts.DexConfigMarketAgents.abi, toAddress: n2.Contracts.DexConfigMarketAgents.contractAddress, params: [e3, r3, s2, a2] });
            }, t3.prototype.dexLockVxForDividend = function(t4) {
              var e3 = t4.actionType, r3 = t4.amount, i2 = (0, o.checkParams)({ actionType: e3, amount: r3 }, ["actionType", "amount"], [{ name: "actionType", func: function(t5) {
                return 1 === Number(e3) || 2 === Number(e3);
              } }, { name: "amount", func: o.isNonNegativeInteger, msg: "Amount must be an non-negative integer string." }]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.DexLockVxForDividend.abi, toAddress: n2.Contracts.DexLockVxForDividend.contractAddress, params: [e3, r3] });
            }, t3.prototype.dexSwitchConfig = function(t4) {
              var e3 = t4.switchType, r3 = t4.enable, i2 = (0, o.checkParams)({ switchType: e3, enable: r3 }, ["switchType", "enable"]);
              if (i2)
                throw i2;
              return this.callContract({ abi: n2.Contracts.DexSwitchConfig.abi, toAddress: n2.Contracts.DexSwitchConfig.contractAddress, params: [e3, r3] });
            }, t3.prototype.dexStakeForPrincipalSVIP = function(t4) {
              var e3 = t4.principal, r3 = (0, o.checkParams)({ principal: e3 }, ["principal"], [{ name: "principal", func: i.isValidAddress }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexStakeForPrincipalSVIP.abi, toAddress: n2.Contracts.DexStakeForPrincipalSVIP.contractAddress, params: [e3] });
            }, t3.prototype.dexCancelStakeById = function(t4) {
              var e3 = t4.id, r3 = (0, o.checkParams)({ id: e3 }, ["id"], [{ name: "id", func: o.isHexString }]);
              if (r3)
                throw r3;
              return this.callContract({ abi: n2.Contracts.DexCancelStakeById.abi, toAddress: n2.Contracts.DexCancelStakeById.contractAddress, params: [e3] });
            }, t3;
          }();
          e2.Account = f, e2.default = f;
        }, 42497: function(t2, e2, r2) {
          "use strict";
          var n2 = this && this.__awaiter || function(t3, e3, r3, n3) {
            return new (r3 || (r3 = Promise))(function(i2, o2) {
              function s2(t4) {
                try {
                  h2(n3.next(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function a2(t4) {
                try {
                  h2(n3.throw(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function h2(t4) {
                var e4;
                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                  t5(e4);
                })).then(s2, a2);
              }
              h2((n3 = n3.apply(t3, e3 || [])).next());
            });
          }, i = this && this.__generator || function(t3, e3) {
            var r3, n3, i2, o2, s2 = { label: 0, sent: function() {
              if (1 & i2[0])
                throw i2[1];
              return i2[1];
            }, trys: [], ops: [] };
            return o2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function a2(o3) {
              return function(a3) {
                return function(o4) {
                  if (r3)
                    throw new TypeError("Generator is already executing.");
                  for (; s2; )
                    try {
                      if (r3 = 1, n3 && (i2 = 2 & o4[0] ? n3.return : o4[0] ? n3.throw || ((i2 = n3.return) && i2.call(n3), 0) : n3.next) && !(i2 = i2.call(n3, o4[1])).done)
                        return i2;
                      switch (n3 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                        case 0:
                        case 1:
                          i2 = o4;
                          break;
                        case 4:
                          return s2.label++, { value: o4[1], done: false };
                        case 5:
                          s2.label++, n3 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = s2.ops.pop(), s2.trys.pop();
                          continue;
                        default:
                          if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                            s2 = 0;
                            continue;
                          }
                          if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                            s2.label = o4[1];
                            break;
                          }
                          if (6 === o4[0] && s2.label < i2[1]) {
                            s2.label = i2[1], i2 = o4;
                            break;
                          }
                          if (i2 && s2.label < i2[2]) {
                            s2.label = i2[2], s2.ops.push(o4);
                            break;
                          }
                          i2[2] && s2.ops.pop(), s2.trys.pop();
                          continue;
                      }
                      o4 = e3.call(t3, s2);
                    } catch (t4) {
                      o4 = [6, t4], n3 = 0;
                    } finally {
                      r3 = i2 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return { value: o4[0] ? o4[1] : void 0, done: true };
                }([o3, a3]);
              };
            }
          };
          Object.defineProperty(e2, "__esModule", { value: true }), e2.AccountBlock = void 0;
          var o = r2(13550), s = r2(8442), a = r2(95506), h = r2(35986), f = r2(89148), u = r2(99603), c = function() {
            function t3(t4, e3, r3) {
              var n3 = t4.blockType, i2 = t4.address, o2 = t4.fee, s2 = t4.data, f2 = t4.sendBlockHash, c2 = t4.amount, d = t4.toAddress, l = t4.tokenId, p = (0, a.checkParams)({ blockType: n3, address: i2 }, ["blockType", "address"], [{ name: "blockType", func: function(t5) {
                return u.BlockType[t5];
              }, msg: "Don't have blockType ".concat(n3) }, { name: "address", func: h.isValidAddress }]);
              if (p)
                throw p;
              this.blockType = n3, this.address = i2, this.fee = o2, this.data = s2, this.sendBlockHash = f2, this.amount = c2, this.tokenId = l, this._toAddress = d, e3 && this.setProvider(e3), r3 && this.setPrivateKey(r3);
            }
            return Object.defineProperty(t3.prototype, "accountBlock", { get: function() {
              return { blockType: this.blockType, address: this.address, fee: "" === this.fee ? null : this.fee, data: "" === this.data ? null : this.data, sendBlockHash: "" === this.sendBlockHash ? null : this.sendBlockHash, toAddress: "" === this.toAddress ? null : this.toAddress, tokenId: "" === this.tokenId ? null : this.tokenId, amount: "" === this.amount ? null : this.amount, height: "" === this.height ? null : this.height, previousHash: "" === this.previousHash ? null : this.previousHash, difficulty: "" === this.difficulty ? null : this.difficulty, nonce: "" === this.nonce ? null : this.nonce, hash: "" === this.hash ? null : this.hash, publicKey: "" === this.publicKey ? null : this.publicKey, signature: "" === this.signature ? null : this.signature };
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "toAddress", { get: function() {
              return this.blockType !== u.BlockType.CreateContractRequest ? this._toAddress : this.previousHash && this.height ? (0, f.createContractAddress)({ address: this.address, height: this.height, previousHash: this.previousHash }) : "";
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "originalAddress", { get: function() {
              return (0, h.getOriginalAddressFromAddress)(this.address);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "blockTypeHex", { get: function() {
              return (0, f.getBlockTypeHex)(this.blockType);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "previousHashHex", { get: function() {
              return (0, f.getPreviousHashHex)(this.previousHash);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightHex", { get: function() {
              return (0, f.getHeightHex)(this.height);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "addressHex", { get: function() {
              return (0, f.getAddressHex)(this.address);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "toAddressHex", { get: function() {
              return (0, f.getToAddressHex)(this.toAddress);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "amountHex", { get: function() {
              return (0, f.getAmountHex)(this.amount);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "tokenIdHex", { get: function() {
              return (0, f.getTokenIdHex)(this.tokenId);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "sendBlockHashHex", { get: function() {
              return (0, f.getSendBlockHashHex)(this.sendBlockHash);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "dataHex", { get: function() {
              return (0, f.getDataHex)(this.data);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "feeHex", { get: function() {
              return (0, f.getFeeHex)(this.fee);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "nonceHex", { get: function() {
              return (0, f.getNonceHex)(this.nonce);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isRequestBlock", { get: function() {
              return (0, f.isRequestBlock)(this.blockType);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "isResponseBlock", { get: function() {
              return (0, f.isResponseBlock)(this.blockType);
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "hash", { get: function() {
              var t4 = { blockType: this.blockType, address: this.address, fee: this.fee, data: this.data, sendBlockHash: this.sendBlockHash, toAddress: this.toAddress, tokenId: this.tokenId, amount: this.amount, height: this.height, previousHash: this.previousHash, difficulty: this.difficulty, nonce: this.nonce };
              return (0, f.isValidAccountBlockWithoutHash)(t4) ? (0, f.getAccountBlockHash)(t4) : null;
            }, enumerable: false, configurable: true }), t3.prototype.setProvider = function(t4) {
              return this.provider = t4, this;
            }, t3.prototype.setPrivateKey = function(t4) {
              var e3 = (0, a.checkParams)({ privateKey: t4 }, ["privateKey"], [{ name: "privateKey", func: a.isHexString }]);
              if (e3)
                throw e3;
              if ((0, h.createAddressByPrivateKey)(t4).address !== this.address)
                throw new Error("PrivateKey is wrong");
              return this.privateKey = t4, this;
            }, t3.prototype.getPreviousAccountBlock = function() {
              return n2(this, void 0, void 0, function() {
                return i(this, function(t4) {
                  switch (t4.label) {
                    case 0:
                      return [4, this.provider.request("ledger_getLatestAccountBlock", this.address)];
                    case 1:
                      return [2, t4.sent()];
                  }
                });
              });
            }, t3.prototype.setHeight = function(t4) {
              return this.height = t4, this;
            }, t3.prototype.setPreviousHash = function(t4) {
              return this.previousHash = t4, this;
            }, t3.prototype.setPreviousAccountBlock = function(t4) {
              var e3 = t4 && t4.height ? t4.height : "";
              e3 = e3 ? new o(e3).add(new o(1)).toString() : "1", this.setHeight(e3);
              var r3 = t4 && t4.hash ? t4.hash : f.Default_Hash;
              return this.setPreviousHash(r3), this;
            }, t3.prototype.autoSetPreviousAccountBlock = function() {
              return n2(this, void 0, void 0, function() {
                var t4;
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return [4, this.getPreviousAccountBlock()];
                    case 1:
                      return t4 = e3.sent(), this.setPreviousAccountBlock(t4), [2, { height: this.height, previousHash: this.previousHash }];
                  }
                });
              });
            }, t3.prototype.getDifficulty = function() {
              return n2(this, void 0, void 0, function() {
                var t4;
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      if (t4 = (0, a.checkParams)(this.accountBlock, ["previousHash"]))
                        throw t4;
                      return [4, this.provider.request("ledger_getPoWDifficulty", { address: this.address, previousHash: this.previousHash, blockType: this.blockType, toAddress: this.toAddress, data: this.data })];
                    case 1:
                      return [2, e3.sent().difficulty];
                  }
                });
              });
            }, t3.prototype.setDifficulty = function(t4) {
              return this.difficulty = t4, this;
            }, t3.prototype.autoSetDifficulty = function() {
              return n2(this, void 0, void 0, function() {
                var t4;
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return [4, this.getDifficulty()];
                    case 1:
                      return t4 = e3.sent(), this.setDifficulty(t4), [2, this.difficulty];
                  }
                });
              });
            }, t3.prototype.getNonce = function() {
              return n2(this, void 0, void 0, function() {
                var t4, e3, r3;
                return i(this, function(n3) {
                  if (t4 = (0, a.checkParams)({ difficulty: this.difficulty, previousHash: this.previousHash }, ["difficulty", "previousHash"]))
                    throw t4;
                  return e3 = Buffer.from(this.originalAddress + this.previousHash, "hex"), r3 = s.blake2bHex(e3, null, 32), [2, this.provider.request("util_getPoWNonce", this.difficulty, r3)];
                });
              });
            }, t3.prototype.setNonce = function(t4) {
              return this.nonce = t4, this;
            }, t3.prototype.autoSetNonce = function() {
              return n2(this, void 0, void 0, function() {
                var t4;
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return this.difficulty ? [4, this.getNonce()] : [2, this.nonce];
                    case 1:
                      return t4 = e3.sent(), this.setNonce(t4), [2, this.nonce];
                  }
                });
              });
            }, t3.prototype.PoW = function(t4) {
              return n2(this, void 0, void 0, function() {
                var e3, r3;
                return i(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      return (r3 = t4) ? [3, 2] : [4, this.getDifficulty()];
                    case 1:
                      r3 = n3.sent(), n3.label = 2;
                    case 2:
                      return e3 = r3, this.setDifficulty(e3), [4, this.autoSetNonce()];
                    case 3:
                      return n3.sent(), [2, { difficulty: this.difficulty, nonce: this.nonce }];
                  }
                });
              });
            }, t3.prototype.setPublicKey = function(t4) {
              var e3 = (0, a.checkParams)({ publicKey: t4 }, ["publicKey"], [{ name: "publicKey", func: function(t5) {
                return (0, a.isHexString)(t5) || (0, a.isBase64String)(t5);
              }, msg: "PublicKey is Hex-string or Base64-string" }]);
              if (e3)
                throw e3;
              var r3 = (0, a.isHexString)(t4) ? t4 : Buffer.from("".concat(t4), "base64").toString("hex"), n3 = (0, a.isHexString)(t4) ? Buffer.from("".concat(t4), "hex").toString("base64") : t4, i2 = (0, h.getAddressFromPublicKey)(r3);
              if (this.address !== i2)
                throw new Error("PublicKey is wrong.");
              return this.publicKey = n3, this;
            }, t3.prototype.setSignature = function(t4) {
              var e3 = (0, a.checkParams)({ signature: t4 }, ["signature"], [{ name: "signature", func: function(t5) {
                return (0, a.isHexString)(t5) || (0, a.isBase64String)(t5);
              }, msg: "Signature is Hex-string or Base64-string" }]);
              if (e3)
                throw e3;
              return (0, a.isBase64String)(t4) ? (this.signature = t4, this) : (this.signature = Buffer.from(t4, "hex").toString("base64"), this);
            }, t3.prototype.sign = function(t4) {
              void 0 === t4 && (t4 = this.privateKey);
              var e3 = (0, f.signAccountBlock)(this.accountBlock, t4), r3 = e3.signature, n3 = e3.publicKey;
              return this.setPublicKey(n3), this.setSignature(r3), this;
            }, t3.prototype.send = function() {
              return n2(this, void 0, void 0, function() {
                var t4, e3;
                return i(this, function(r3) {
                  switch (r3.label) {
                    case 0:
                      if (t4 = (0, f.checkAccountBlock)(this.accountBlock))
                        throw t4;
                      r3.label = 1;
                    case 1:
                      return r3.trys.push([1, 3, , 4]), [4, this.provider.request("ledger_sendRawTransaction", this.accountBlock)];
                    case 2:
                      return [2, r3.sent() || this.accountBlock];
                    case 3:
                      throw (e3 = r3.sent()).acccountBlock = this.accountBlock, e3;
                    case 4:
                      return [2];
                  }
                });
              });
            }, t3.prototype.sendByPoW = function(t4) {
              return void 0 === t4 && (t4 = this.privateKey), n2(this, void 0, void 0, function() {
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return [4, this.PoW()];
                    case 1:
                      return e3.sent(), [2, this.sign(t4).send()];
                  }
                });
              });
            }, t3.prototype.autoSendByPoW = function(t4) {
              return void 0 === t4 && (t4 = this.privateKey), n2(this, void 0, void 0, function() {
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return [4, this.autoSetPreviousAccountBlock()];
                    case 1:
                      return e3.sent(), [4, this.PoW()];
                    case 2:
                      return e3.sent(), [2, this.sign(t4).send()];
                  }
                });
              });
            }, t3.prototype.autoSend = function(t4) {
              return void 0 === t4 && (t4 = this.privateKey), n2(this, void 0, void 0, function() {
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return [4, this.autoSetPreviousAccountBlock()];
                    case 1:
                      return e3.sent(), [2, this.sign(t4).send()];
                  }
                });
              });
            }, t3;
          }();
          e2.AccountBlock = c, e2.default = c;
        }, 45086: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.createAccountBlock = e2.utils = e2.ReceiveAccountBlockTask = e2.Account = e2.AccountBlock = void 0;
          var n2 = r2(95506), i = r2(42497), o = r2(21228), s = r2(56157), a = r2(89148);
          e2.AccountBlock = i.default, e2.Account = o.default, e2.ReceiveAccountBlockTask = s.ReceiveAccountBlockTask, e2.utils = a, e2.createAccountBlock = function(t3, e3) {
            var r3 = (0, n2.checkParams)({ methodName: t3, params: e3 }, ["methodName", "params"], [{ name: "methodName", func: function(e4) {
              return "string" == typeof t3;
            } }, { name: "params", func: n2.isObject }]);
            if (r3)
              throw r3;
            var i2 = new o.default(e3.address);
            if (!i2[t3])
              throw new Error("Don't support transaction type ".concat(t3));
            return i2[t3](e3);
          };
        }, 56157: function(t2, e2, r2) {
          "use strict";
          var n2 = this && this.__assign || function() {
            return n2 = Object.assign || function(t3) {
              for (var e3, r3 = 1, n3 = arguments.length; r3 < n3; r3++)
                for (var i2 in e3 = arguments[r3])
                  Object.prototype.hasOwnProperty.call(e3, i2) && (t3[i2] = e3[i2]);
              return t3;
            }, n2.apply(this, arguments);
          }, i = this && this.__awaiter || function(t3, e3, r3, n3) {
            return new (r3 || (r3 = Promise))(function(i2, o2) {
              function s2(t4) {
                try {
                  h2(n3.next(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function a2(t4) {
                try {
                  h2(n3.throw(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function h2(t4) {
                var e4;
                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                  t5(e4);
                })).then(s2, a2);
              }
              h2((n3 = n3.apply(t3, e3 || [])).next());
            });
          }, o = this && this.__generator || function(t3, e3) {
            var r3, n3, i2, o2, s2 = { label: 0, sent: function() {
              if (1 & i2[0])
                throw i2[1];
              return i2[1];
            }, trys: [], ops: [] };
            return o2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function a2(o3) {
              return function(a3) {
                return function(o4) {
                  if (r3)
                    throw new TypeError("Generator is already executing.");
                  for (; s2; )
                    try {
                      if (r3 = 1, n3 && (i2 = 2 & o4[0] ? n3.return : o4[0] ? n3.throw || ((i2 = n3.return) && i2.call(n3), 0) : n3.next) && !(i2 = i2.call(n3, o4[1])).done)
                        return i2;
                      switch (n3 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                        case 0:
                        case 1:
                          i2 = o4;
                          break;
                        case 4:
                          return s2.label++, { value: o4[1], done: false };
                        case 5:
                          s2.label++, n3 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = s2.ops.pop(), s2.trys.pop();
                          continue;
                        default:
                          if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                            s2 = 0;
                            continue;
                          }
                          if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                            s2.label = o4[1];
                            break;
                          }
                          if (6 === o4[0] && s2.label < i2[1]) {
                            s2.label = i2[1], i2 = o4;
                            break;
                          }
                          if (i2 && s2.label < i2[2]) {
                            s2.label = i2[2], s2.ops.push(o4);
                            break;
                          }
                          i2[2] && s2.ops.pop(), s2.trys.pop();
                          continue;
                      }
                      o4 = e3.call(t3, s2);
                    } catch (t4) {
                      o4 = [6, t4], n3 = 0;
                    } finally {
                      r3 = i2 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return { value: o4[0] ? o4[1] : void 0, done: true };
                }([o3, a3]);
              };
            }
          };
          Object.defineProperty(e2, "__esModule", { value: true }), e2.ReceiveAccountBlockTask = void 0;
          var s = r2(35986), a = r2(95506), h = r2(21228), f = function() {
            function t3(t4) {
              var e3 = t4.address, r3 = t4.provider, n3 = t4.privateKey, i2 = t4.sign, o2 = (0, a.checkParams)({ address: e3, provider: r3, privateKey: n3 }, ["address", "provider"], [{ name: "address", func: s.isValidAddress }, { name: "privateKey", func: function(t5) {
                return !(!i2 && !n3) && (null == t5 || (0, a.isHexString)(t5));
              } }]);
              if (o2)
                throw o2;
              this.address = e3, this.provider = r3, this.sign = i2, this.privateKey = n3, this._account = new h.default(e3), this._account.setProvider(r3), n3 && this._account.setPrivateKey(n3), this._timer = null, this.successCB = null, this.errorCB = null;
            }
            return t3.prototype.start = function(t4) {
              var e3 = this, r3 = void 0 === t4 ? { checkTime: 3e3, transactionNumber: 5 } : t4, n3 = r3.checkTime, s2 = void 0 === n3 ? 3e3 : n3, a2 = r3.transactionNumber, h2 = void 0 === a2 ? 5 : a2;
              this.stop();
              var f2 = function() {
                e3._timer = setTimeout(function() {
                  return i(e3, void 0, void 0, function() {
                    return o(this, function(t5) {
                      switch (t5.label) {
                        case 0:
                          return [4, this.receive(h2)];
                        case 1:
                          return t5.sent(), this._timer ? (f2(), [2]) : [2];
                      }
                    });
                  });
                }, s2);
              };
              f2();
            }, t3.prototype.stop = function() {
              this._timer && clearTimeout(this._timer), this._timer = null;
            }, t3.prototype.onError = function(t4) {
              this.errorCB = t4;
            }, t3.prototype.onSuccess = function(t4) {
              this.successCB = t4;
            }, t3.prototype.receive = function(t4) {
              return i(this, void 0, void 0, function() {
                var e3, r3, n3, i2, s2, a2, h2, f2, u, c;
                return o(this, function(o2) {
                  switch (o2.label) {
                    case 0:
                      e3 = null, o2.label = 1;
                    case 1:
                      return o2.trys.push([1, 3, , 4]), [4, this.getUnreceivedBlocks(t4)];
                    case 2:
                      return e3 = o2.sent(), [3, 4];
                    case 3:
                      return r3 = o2.sent(), this.emitError({ message: "Get unreceivedAccountBlocks error", error: r3 }), [2];
                    case 4:
                      if (!e3.length)
                        return this.emitSuccess({ message: "Don't have unreceivedAccountBlocks." }), [2];
                      n3 = [], i2 = 0, s2 = e3, o2.label = 5;
                    case 5:
                      if (!(i2 < s2.length))
                        return [3, 10];
                      a2 = s2[i2], h2 = n3.length ? n3[n3.length - 1] : null, f2 = a2.hash, u = null, o2.label = 6;
                    case 6:
                      return o2.trys.push([6, 8, , 9]), [4, this.receiveAccountBlockByPrevious({ sendBlockHash: a2.hash, previousAccountBlock: h2 })];
                    case 7:
                      return u = o2.sent(), n3.push(u), [3, 9];
                    case 8:
                      return c = o2.sent(), n3.length && this.emitSuccess({ message: "Receive accountBlock success", accountBlockList: n3 }), this.emitError({ message: "Receive accountBlock ".concat(f2, " error"), unreceivedHash: f2, error: c }), [2];
                    case 9:
                      return i2++, [3, 5];
                    case 10:
                      return this.emitSuccess({ message: "Receive accountBlock success", accountBlockList: n3 }), [2];
                  }
                });
              });
            }, t3.prototype.emitSuccess = function(t4) {
              this.successCB && this.successCB(n2({ status: "ok", timestamp: new Date().getTime() }, t4));
            }, t3.prototype.emitError = function(t4) {
              this.errorCB && this.errorCB(n2({ status: "error", timestamp: new Date().getTime() }, t4));
            }, t3.prototype.getUnreceivedBlocks = function(t4) {
              return i(this, void 0, void 0, function() {
                var e3;
                return o(this, function(r3) {
                  switch (r3.label) {
                    case 0:
                      return [4, this.provider.request("ledger_getUnreceivedBlocksByAddress", this.address, 0, t4)];
                    case 1:
                      return (e3 = r3.sent()) && e3.length ? [2, e3] : [2, []];
                  }
                });
              });
            }, t3.prototype.receiveAccountBlockByPrevious = function(t4) {
              var e3 = t4.sendBlockHash, r3 = t4.previousAccountBlock;
              return i(this, void 0, void 0, function() {
                var t5;
                return o(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      return t5 = this._account.receive({ sendBlockHash: e3 }), this.privateKey ? r3 ? (t5.setPreviousAccountBlock(r3), [2, t5.sendByPoW()]) : [2, t5.autoSendByPoW()] : [3, 1];
                    case 1:
                      return r3 ? (t5.setPreviousAccountBlock(r3), [3, 4]) : [3, 2];
                    case 2:
                      return [4, t5.autoSetPreviousAccountBlock()];
                    case 3:
                      n3.sent(), n3.label = 4;
                    case 4:
                      return [4, t5.PoW()];
                    case 5:
                      return n3.sent(), [4, this.sign(t5)];
                    case 6:
                      return n3.sent(), [2, t5.send()];
                  }
                });
              });
            }, t3;
          }();
          e2.ReceiveAccountBlockTask = f;
        }, 99603: (t2, e2) => {
          "use strict";
          var r2, n2;
          Object.defineProperty(e2, "__esModule", { value: true }), e2.BlockType = e2.TransactionType = void 0, (n2 = e2.TransactionType || (e2.TransactionType = {}))[n2.RegisterSBP = 1] = "RegisterSBP", n2[n2.UpdateSBPBlockProducingAddress = 2] = "UpdateSBPBlockProducingAddress", n2[n2.UpdateSBPRewardWithdrawAddress = 3] = "UpdateSBPRewardWithdrawAddress", n2[n2.RevokeSBP = 4] = "RevokeSBP", n2[n2.WithdrawSBPReward = 5] = "WithdrawSBPReward", n2[n2.VoteForSBP = 6] = "VoteForSBP", n2[n2.CancelSBPVoting = 7] = "CancelSBPVoting", n2[n2.StakeForQuota = 8] = "StakeForQuota", n2[n2.CancelQuotaStake = 9] = "CancelQuotaStake", n2[n2.IssueToken = 10] = "IssueToken", n2[n2.ReIssueToken = 11] = "ReIssueToken", n2[n2.BurnToken = 12] = "BurnToken", n2[n2.TransferTokenOwnership = 13] = "TransferTokenOwnership", n2[n2.DisableReIssue = 14] = "DisableReIssue", n2[n2.CreateContractRequest = 15] = "CreateContractRequest", n2[n2.TransferRequest = 16] = "TransferRequest", n2[n2.ReIssueRequest = 17] = "ReIssueRequest", n2[n2.Response = 18] = "Response", n2[n2.ResponseFail = 19] = "ResponseFail", n2[n2.RefundByContractRequest = 20] = "RefundByContractRequest", n2[n2.GenesisResponse = 21] = "GenesisResponse", n2[n2.RegisterSBP_V1 = 22] = "RegisterSBP_V1", n2[n2.UpdateSBPBlockProducingAddress_V1 = 23] = "UpdateSBPBlockProducingAddress_V1", n2[n2.UpdateSBPBlockProducingAddress_V2 = 24] = "UpdateSBPBlockProducingAddress_V2", n2[n2.RevokeSBP_V1 = 25] = "RevokeSBP_V1", n2[n2.RevokeSBP_V2 = 26] = "RevokeSBP_V2", n2[n2.WithdrawSBPReward_V1 = 27] = "WithdrawSBPReward_V1", n2[n2.WithdrawSBPReward_V2 = 28] = "WithdrawSBPReward_V2", n2[n2.VoteForSBP_V1 = 29] = "VoteForSBP_V1", n2[n2.CancelSBPVoting_V1 = 30] = "CancelSBPVoting_V1", n2[n2.StakeForQuota_V1 = 31] = "StakeForQuota_V1", n2[n2.StakeForQuota_V2 = 32] = "StakeForQuota_V2", n2[n2.CancelQuotaStake_V1 = 33] = "CancelQuotaStake_V1", n2[n2.CancelQuotaStake_V2 = 34] = "CancelQuotaStake_V2", n2[n2.IssueToken_V1 = 35] = "IssueToken_V1", n2[n2.ReIssueToken_V1 = 36] = "ReIssueToken_V1", n2[n2.TransferTokenOwnership_V1 = 37] = "TransferTokenOwnership_V1", n2[n2.DisableReIssue_V1 = 38] = "DisableReIssue_V1", n2[n2.DexDeposit_V1 = 39] = "DexDeposit_V1", n2[n2.DexWithdraw_V1 = 40] = "DexWithdraw_V1", n2[n2.DexPlaceOrder_V1 = 41] = "DexPlaceOrder_V1", n2[n2.DexCancelOrder_V1 = 42] = "DexCancelOrder_V1", n2[n2.DexOpenNewMarket_V1 = 43] = "DexOpenNewMarket_V1", n2[n2.DexStakeForMining_V1 = 44] = "DexStakeForMining_V1", n2[n2.DexStakeForVIP_V1 = 45] = "DexStakeForVIP_V1", n2[n2.DexBindInviteCode_V1 = 46] = "DexBindInviteCode_V1", n2[n2.DexCreateNewInviter_V1 = 47] = "DexCreateNewInviter_V1", n2[n2.DexTransferTokenOwnership_V1 = 48] = "DexTransferTokenOwnership_V1", n2[n2.DexMarketAdminConfig_V1 = 49] = "DexMarketAdminConfig_V1", n2[n2.DexStakeForSuperVIP_V1 = 50] = "DexStakeForSuperVIP_V1", n2[n2.DexConfigMarketAgents_V1 = 51] = "DexConfigMarketAgents_V1", n2[n2.DexDeposit = 52] = "DexDeposit", n2[n2.DexWithdraw = 53] = "DexWithdraw", n2[n2.DexPlaceOrder = 54] = "DexPlaceOrder", n2[n2.DexCancelOrder = 55] = "DexCancelOrder", n2[n2.DexOpenNewMarket = 56] = "DexOpenNewMarket", n2[n2.DexStakeForMining = 57] = "DexStakeForMining", n2[n2.DexStakeForVIP = 58] = "DexStakeForVIP", n2[n2.DexBindInviteCode = 59] = "DexBindInviteCode", n2[n2.DexCreateNewInviter = 60] = "DexCreateNewInviter", n2[n2.DexTransferTokenOwnership = 61] = "DexTransferTokenOwnership", n2[n2.DexMarketAdminConfig = 62] = "DexMarketAdminConfig", n2[n2.DexStakeForSuperVIP = 63] = "DexStakeForSuperVIP", n2[n2.DexConfigMarketAgents = 64] = "DexConfigMarketAgents", n2[n2.DexLockVxForDividend = 65] = "DexLockVxForDividend", n2[n2.DexSwitchConfig = 66] = "DexSwitchConfig", n2[n2.DexStakeForPrincipalSVIP = 67] = "DexStakeForPrincipalSVIP", n2[n2.DexCancelStakeById = 68] = "DexCancelStakeById", (r2 = e2.BlockType || (e2.BlockType = {}))[r2.CreateContractRequest = 1] = "CreateContractRequest", r2[r2.TransferRequest = 2] = "TransferRequest", r2[r2.ReIssueRequest = 3] = "ReIssueRequest", r2[r2.Response = 4] = "Response", r2[r2.ResponseFail = 5] = "ResponseFail", r2[r2.RefundByContractRequest = 6] = "RefundByContractRequest", r2[r2.GenesisResponse = 7] = "GenesisResponse";
        }, 89148: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.getTransactionType = e2.encodeContractList = e2.decodeAccountBlockDataByContract = e2.decodeContractAccountBlock = e2.signAccountBlock = e2.messageToData = e2.getCallContractData = e2.getCreateContractData = e2.getTriggeredSendBlockListHex = e2.getNonceHex = e2.getFeeHex = e2.getDataHex = e2.getSendBlockHashHex = e2.getTokenIdHex = e2.getAmountHex = e2.getToAddressHex = e2.getAddressHex = e2.getHeightHex = e2.getPreviousHashHex = e2.getBlockTypeHex = e2.getAccountBlockHash = e2.createContractAddress = e2.isResponseBlock = e2.isRequestBlock = e2.isValidAccountBlock = e2.isValidAccountBlockWithoutSignature = e2.isValidAccountBlockWithoutHash = e2.checkAccountBlock = e2.AccountBlockStatus = e2.Default_Contract_TransactionType = e2.Default_Hash = void 0;
          var n2, i = r2(13550), o = r2(8442), s = r2(62989), a = r2(19548), h = r2(90277), f = r2(35986), u = r2(95506), c = r2(99603);
          function d(t3, e3) {
            void 0 === e3 && (e3 = n2.Before_Hash);
            var r3 = (0, u.checkParams)(t3, ["blockType", "address", "height", "previousHash"], [{ name: "blockType", func: function(t4) {
              return c.BlockType[t4];
            }, msg: "Don't have blockType ".concat(t3.blockType) }, { name: "address", func: f.isValidAddress }, { name: "height", func: u.isNonNegativeInteger }, { name: "previousHash", func: u.isHexString }, { name: "sendBlockHash", func: u.isHexString }, { name: "toAddress", func: f.isValidAddress }, { name: "amount", func: u.isNonNegativeInteger, msg: "Amount must be an non-negative integer string." }, { name: "fee", func: u.isNonNegativeInteger, msg: "Fee must be an non-negative integer string." }, { name: "tokenId", func: u.isValidTokenId }, { name: "data", func: u.isBase64String }, { name: "hash", func: u.isHexString }, { name: "signature", func: u.isBase64String }, { name: "publicKey", func: u.isBase64String }]);
            if (r3)
              return r3;
            if (Number(t3.blockType) === c.BlockType.Response && !t3.sendBlockHash)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " SendBlockHash.") };
            if (l(t3.blockType) && !t3.toAddress)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " ToAddress.") };
            if (Number(t3.amount) && !t3.tokenId)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " TokenId.") };
            if (t3.difficulty && !t3.nonce || !t3.difficulty && t3.nonce)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " Difficulty and nonce is required at the same time.") };
            if (e3 === n2.Before_Hash)
              return null;
            if (!t3.hash)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " Hash.") };
            var i2 = p(t3);
            if (t3.hash !== i2)
              return { code: s.paramsFormat.code, message: "".concat(s.paramsFormat.message, " Hash is wrong.") };
            if (e3 === n2.Before_Signature)
              return null;
            if (!t3.publicKey)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " PublicKey.") };
            var o2 = (0, f.getAddressFromPublicKey)(Buffer.from(t3.publicKey, "base64").toString("hex"));
            if (t3.address !== o2)
              return { code: s.paramsFormat.code, message: "PublicKey is wrong." };
            if (!t3.signature)
              return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " Signature.") };
            var a2 = Buffer.from(t3.publicKey, "base64").toString("hex"), h2 = Buffer.from(t3.signature, "base64").toString("hex");
            return u.ed25519.verify(i2, h2, a2) ? null : { code: s.paramsFormat.code, message: "Signature is wrong." };
          }
          function l(t3) {
            return t3 === c.BlockType.CreateContractRequest || t3 === c.BlockType.TransferRequest || t3 === c.BlockType.RefundByContractRequest || t3 === c.BlockType.ReIssueRequest;
          }
          function p(t3) {
            var e3 = "";
            e3 += g(t3.blockType), e3 += y(t3.previousHash), e3 += m(t3.height), e3 += v(t3.address), l(t3.blockType) ? (e3 += v(t3.toAddress), e3 += b(t3.amount), e3 += w(t3.tokenId)) : e3 += _(t3.sendBlockHash), e3 += k(t3.data), e3 += S(t3.fee), e3 += t3.vmlogHash || "", e3 += A(t3.nonce), e3 += x(t3.triggeredSendBlockList);
            var r3 = Buffer.from(e3, "hex"), n3 = o.blake2b(r3, null, 32);
            return Buffer.from(n3).toString("hex");
          }
          function g(t3) {
            return Buffer.from([t3]).toString("hex");
          }
          function y(t3) {
            return t3 || e2.Default_Hash;
          }
          function m(t3) {
            return t3 ? Buffer.from(new i(t3).toArray("big", 8)).toString("hex") : "";
          }
          function v(t3) {
            return t3 ? (0, f.getOriginalAddressFromAddress)(t3) : "";
          }
          function b(t3) {
            return I(t3);
          }
          function w(t3) {
            return t3 && (0, u.getOriginalTokenIdFromTokenId)(t3) || "";
          }
          function _(t3) {
            return t3 || e2.Default_Hash;
          }
          function k(t3) {
            return t3 ? o.blake2bHex(Buffer.from(t3, "base64"), null, 32) : "";
          }
          function S(t3) {
            return I(t3);
          }
          function A(t3) {
            return B(t3 ? Buffer.from(t3, "base64") : "", 8);
          }
          function x(t3) {
            if (void 0 === t3 && (t3 = []), !t3)
              return "";
            var e3 = "";
            return t3.forEach(function(t4) {
              e3 += t4.hash;
            }), e3;
          }
          function M(t3) {
            var e3 = t3.data, r3 = t3.abi, n3 = t3.topics, i2 = void 0 === n3 ? [] : n3, o2 = t3.methodName, s2 = (0, u.checkParams)({ data: e3, abi: r3 }, ["data", "abi"], [{ name: "data", func: u.isBase64String }]);
            if (s2)
              throw s2;
            var a2 = Buffer.from(e3, "base64").toString("hex");
            return (0, h.encodeFunctionSignature)(r3, o2) !== a2.substring(0, 8) ? null : (0, h.decodeLog)(r3, a2.substring(8), i2, o2);
          }
          function E(t3) {
            var e3 = (0, u.checkParams)({ contractList: t3 }, ["contractList"], [{ name: "contractList", func: u.isObject }]);
            if (e3)
              throw e3;
            var r3 = {};
            for (var n3 in t3) {
              var i2 = t3[n3], o2 = i2.contractAddress, s2 = i2.abi, a2 = (0, u.checkParams)({ contractAddress: o2, abi: s2 }, ["contractAddress", "abi"], [{ name: "contractAddress", func: function(t4) {
                return (0, f.isValidAddress)(t4) === f.AddressType.Contract;
              } }]);
              if (a2)
                throw a2;
              var c2 = (0, h.encodeFunctionSignature)(s2), d2 = { transactionType: n3, contractAddress: o2, abi: s2 };
              r3["".concat(c2, "_").concat(o2)] = d2;
            }
            return r3;
          }
          function B(t3, e3) {
            if (t3 && e3 - t3.length < 0)
              return t3.toString("hex");
            var r3 = new Uint8Array(e3);
            return t3 && r3.set(t3, e3 - t3.length), Buffer.from(r3).toString("hex");
          }
          function I(t3) {
            var e3 = new i(t3);
            return B(t3 && !e3.isZero() ? e3.toArray("big") : "", 32);
          }
          e2.Default_Hash = "0000000000000000000000000000000000000000000000000000000000000000", e2.Default_Contract_TransactionType = E(a.Contracts), function(t3) {
            t3[t3.Before_Hash = 1] = "Before_Hash", t3[t3.Before_Signature = 2] = "Before_Signature", t3[t3.Complete = 3] = "Complete";
          }(n2 = e2.AccountBlockStatus || (e2.AccountBlockStatus = {})), e2.checkAccountBlock = d, e2.isValidAccountBlockWithoutHash = function(t3) {
            return !d(t3, n2.Before_Hash);
          }, e2.isValidAccountBlockWithoutSignature = function(t3) {
            return !d(t3, n2.Before_Signature);
          }, e2.isValidAccountBlock = function(t3) {
            return !d(t3, n2.Complete);
          }, e2.isRequestBlock = l, e2.isResponseBlock = function(t3) {
            return t3 === c.BlockType.Response || t3 === c.BlockType.ResponseFail || t3 === c.BlockType.GenesisResponse;
          }, e2.createContractAddress = function(t3) {
            var e3 = t3.address, r3 = t3.height, n3 = t3.previousHash, s2 = (0, u.checkParams)({ address: e3, height: r3, previousHash: n3 }, ["address", "height", "previousHash"], [{ name: "address", func: f.isValidAddress }, { name: "height", func: u.isNonNegativeInteger }, { name: "previousHash", func: u.isHexString }]);
            if (s2)
              throw s2;
            var a2 = Buffer.from((0, f.getOriginalAddressFromAddress)(e3), "hex"), h2 = Buffer.from(new i(r3).toArray("big", 8)), c2 = Buffer.from(n3, "hex"), d2 = a2.length + h2.length + c2.length, l2 = Buffer.concat([a2, h2, c2], d2), p2 = o.blake2b(l2, null, 20), g2 = new Uint8Array(21);
            return g2.set(p2), g2.set([1], 20), (0, f.getAddressFromOriginalAddress)(Buffer.from(g2).toString("hex"));
          }, e2.getAccountBlockHash = p, e2.getBlockTypeHex = g, e2.getPreviousHashHex = y, e2.getHeightHex = m, e2.getAddressHex = v, e2.getToAddressHex = function(t3) {
            return t3 ? (0, f.getOriginalAddressFromAddress)(t3) : "";
          }, e2.getAmountHex = b, e2.getTokenIdHex = w, e2.getSendBlockHashHex = _, e2.getDataHex = k, e2.getFeeHex = S, e2.getNonceHex = A, e2.getTriggeredSendBlockListHex = x, e2.getCreateContractData = function(t3) {
            var e3 = t3.abi, r3 = t3.code, n3 = t3.params, o2 = t3.responseLatency, s2 = void 0 === o2 ? "0" : o2, f2 = t3.quotaMultiplier, c2 = void 0 === f2 ? "10" : f2, d2 = t3.randomDegree, l2 = void 0 === d2 ? "0" : d2, p2 = (0, u.checkParams)({ responseLatency: s2, quotaMultiplier: c2, randomDegree: l2, code: r3 }, ["responseLatency", "quotaMultiplier", "randomDegree"], [{ name: "responseLatency", func: function(t4) {
              return Number(t4) >= 0 && Number(t4) <= 75;
            } }, { name: "quotaMultiplier", func: function(t4) {
              return Number(t4) >= 10 && Number(t4) <= 100;
            } }, { name: "randomDegree", func: function(t4) {
              return Number(t4) >= 0 && Number(t4) <= 75;
            } }, { name: "code", func: u.isHexString }]);
            if (p2)
              throw p2;
            var g2 = (0, h.getAbiByType)(e3, "constructor"), y2 = new i(s2).toArray(), m2 = new i(l2).toArray(), v2 = new i(c2).toArray(), b2 = "".concat(a.Delegate_Gid, "01").concat(Buffer.from(y2).toString("hex")).concat(Buffer.from(m2).toString("hex")).concat(Buffer.from(v2).toString("hex")).concat(r3);
            return g2 && (b2 += (0, h.encodeParameters)(g2, n3)), Buffer.from(b2, "hex").toString("base64");
          }, e2.getCallContractData = function(t3) {
            var e3 = t3.abi, r3 = t3.params, n3 = t3.methodName, i2 = (0, h.encodeFunctionCall)(e3, r3, n3);
            return Buffer.from(i2, "hex").toString("base64");
          }, e2.messageToData = function(t3) {
            if (!t3)
              return "";
            var e3 = Buffer.from(t3).toString("hex");
            return Buffer.from(e3, "hex").toString("base64");
          }, e2.signAccountBlock = function(t3, e3) {
            var r3 = (0, u.checkParams)({ privateKey: e3, accountBlock: t3 }, ["privateKey", "accountBlock"], [{ name: "privateKey", func: u.isHexString, msg: "PrivateKey is Hex-string" }]);
            if (r3)
              throw r3;
            var i2 = d(t3, n2.Before_Signature);
            if (i2)
              throw i2;
            var o2 = (0, f.createAddressByPrivateKey)(e3), s2 = o2.address, a2 = o2.publicKey;
            if (t3.address !== s2)
              throw new Error("PrivateKey is wrong.");
            var h2 = u.ed25519.sign(t3.hash, e3);
            return { signature: Buffer.from(h2, "hex").toString("base64"), publicKey: Buffer.from(a2, "hex").toString("base64") };
          }, e2.decodeContractAccountBlock = function(t3) {
            var e3 = t3.accountBlock, r3 = t3.contractAddress, n3 = t3.abi, i2 = t3.topics, o2 = void 0 === i2 ? [] : i2, s2 = t3.methodName, a2 = (0, u.checkParams)({ accountBlock: e3, contractAddress: r3, abi: n3 }, ["accountBlock", "contractAddress", "abi"], [{ name: "contractAddress", func: function(t4) {
              return (0, f.isValidAddress)(t4) === f.AddressType.Contract;
            } }]);
            if (a2)
              throw a2;
            return e3.blockType !== c.BlockType.TransferRequest || e3.toAddress !== r3 ? null : M({ data: e3.data, abi: n3, topics: o2, methodName: s2 });
          }, e2.decodeAccountBlockDataByContract = M, e2.encodeContractList = E, e2.getTransactionType = function(t3, r3) {
            var n3 = t3.toAddress, i2 = t3.data, o2 = t3.blockType, a2 = (0, u.checkParams)({ blockType: o2, toAddress: n3 }, ["blockType"], [{ name: "toAddress", func: f.isValidAddress }, { name: "blockType", func: function(t4) {
              return c.BlockType[t4];
            }, msg: "Don't have blockType ".concat(o2) }]);
            if (a2)
              throw a2;
            o2 = Number(o2);
            var h2 = { transactionType: c.BlockType[o2] };
            if (o2 !== c.BlockType.TransferRequest)
              return h2;
            if (!n3)
              throw new Error("".concat(s.paramsMissing.message, " ToAddress"));
            var d2 = Object.assign({}, r3 || {}, e2.Default_Contract_TransactionType), l2 = Buffer.from(i2 || "", "base64").toString("hex").slice(0, 8);
            return d2["".concat(l2, "_").concat(n3)] || h2;
          };
        }, 19548: (t2, e2) => {
          "use strict";
          var r2;
          Object.defineProperty(e2, "__esModule", { value: true }), e2.Contracts = e2.BlockType = e2.DexTrade_ContractAddress = e2.DexFund_ContractAddress = e2.TokenIssuance_ContractAddress = e2.ConsensusGroup_ContractAddress = e2.Staking_ContractAddress = e2.Delegate_Gid = e2.Snapshot_Gid = e2.VX_Token_Info = e2.VX_TokenId = e2.Vite_Token_Info = e2.Vite_TokenId = void 0, e2.Vite_TokenId = "tti_5649544520544f4b454e6e40", e2.Vite_Token_Info = { decimals: 18, tokenId: e2.Vite_TokenId, tokenName: "Vite Token", tokenSymbol: "VITE" }, e2.VX_TokenId = "tti_564954455820434f494e69b5", e2.VX_Token_Info = { decimals: 18, tokenId: e2.VX_TokenId, tokenName: "ViteX Coin", tokenSymbol: "VX" }, e2.Snapshot_Gid = "00000000000000000001", e2.Delegate_Gid = "00000000000000000002", e2.Staking_ContractAddress = "vite_0000000000000000000000000000000000000003f6af7459b9", e2.ConsensusGroup_ContractAddress = "vite_0000000000000000000000000000000000000004d28108e76b", e2.TokenIssuance_ContractAddress = "vite_000000000000000000000000000000000000000595292d996d", e2.DexFund_ContractAddress = "vite_0000000000000000000000000000000000000006e82b8ba657", e2.DexTrade_ContractAddress = "vite_00000000000000000000000000000000000000079710f19dc7", (r2 = e2.BlockType || (e2.BlockType = {}))[r2.CreateContractRequest = 1] = "CreateContractRequest", r2[r2.TransferRequest = 2] = "TransferRequest", r2[r2.ReIssueRequest = 3] = "ReIssueRequest", r2[r2.Response = 4] = "Response", r2[r2.ResponseFail = 5] = "ResponseFail", r2[r2.RefundByContractRequest = 6] = "RefundByContractRequest", r2[r2.GenesisResponse = 7] = "GenesisResponse", e2.Contracts = { RegisterSBP_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "Register", inputs: [{ name: "gid", type: "gid" }, { name: "sbpName", type: "string" }, { name: "blockProducingAddress", type: "address" }] } }, UpdateSBPBlockProducingAddress_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "UpdateRegistration", inputs: [{ name: "gid", type: "gid" }, { name: "name", type: "string" }, { name: "nodeAddr", type: "address" }] } }, UpdateSBPBlockProducingAddress_V2: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "UpdateBlockProducingAddress", inputs: [{ name: "gid", type: "gid" }, { name: "sbpName", type: "string" }, { name: "newBlockProducingAddress", type: "address" }] } }, RevokeSBP_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "CancelRegister", inputs: [{ name: "gid", type: "gid" }, { name: "name", type: "string" }] } }, RevokeSBP_V2: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "Revoke", inputs: [{ name: "gid", type: "gid" }, { name: "sbpName", type: "string" }] } }, WithdrawSBPReward_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "Reward", inputs: [{ name: "gid", type: "gid" }, { name: "name", type: "string" }, { name: "beneficialAddr", type: "address" }] } }, WithdrawSBPReward_V2: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "WithdrawReward", inputs: [{ name: "gid", type: "gid" }, { name: "sbpName", type: "string" }, { name: "receiveAddress", type: "address" }] } }, VoteForSBP_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "Vote", inputs: [{ name: "gid", type: "gid" }, { name: "sbpName", type: "string" }] } }, CancelSBPVoting_V1: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "CancelVote", inputs: [{ name: "gid", type: "gid" }] } }, StakeForQuota_V1: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "Pledge", inputs: [{ name: "beneficial", type: "address" }] } }, StakeForQuota_V2: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "Stake", inputs: [{ name: "beneficiary", type: "address" }] } }, CancelQuotaStake_V1: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "CancelPledge", inputs: [{ name: "beneficial", type: "address" }, { name: "amount", type: "uint256" }] } }, CancelQuotaStake_V2: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "CancelStake", inputs: [{ name: "beneficiary", type: "address" }, { name: "amount", type: "uint256" }] } }, IssueToken_V1: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "Mint", inputs: [{ name: "isReIssuable", type: "bool" }, { name: "tokenName", type: "string" }, { name: "tokenSymbol", type: "string" }, { name: "totalSupply", type: "uint256" }, { name: "decimals", type: "uint8" }, { name: "maxSupply", type: "uint256" }, { name: "ownerBurnOnly", type: "bool" }] } }, ReIssueToken_V1: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "Issue", inputs: [{ name: "tokenId", type: "tokenId" }, { name: "amount", type: "uint256" }, { name: "beneficial", type: "address" }] } }, TransferTokenOwnership_V1: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "TransferOwner", inputs: [{ name: "tokenId", type: "tokenId" }, { name: "newOwner", type: "address" }] } }, DisableReIssue_V1: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "ChangeTokenType", inputs: [{ name: "tokenId", type: "tokenId" }] } }, DexDeposit_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundUserDeposit", inputs: [] } }, DexWithdraw_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundUserWithdraw", inputs: [{ name: "token", type: "tokenId" }, { name: "amount", type: "uint256" }] } }, DexPlaceOrder_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundNewOrder", inputs: [{ name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }, { name: "side", type: "bool" }, { name: "orderType", type: "uint8" }, { name: "price", type: "string" }, { name: "quantity", type: "uint256" }] } }, DexCancelOrder_V1: { contractAddress: e2.DexTrade_ContractAddress, abi: { type: "function", name: "DexTradeCancelOrder", inputs: [{ name: "orderId", type: "bytes" }] } }, DexOpenNewMarket_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundNewMarket", inputs: [{ name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }] } }, DexStakeForMining_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundPledgeForVx", inputs: [{ name: "actionType", type: "uint8" }, { name: "amount", type: "uint256" }] } }, DexStakeForVIP_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundPledgeForVip", inputs: [{ name: "actionType", type: "uint8" }] } }, DexBindInviteCode_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundBindInviteCode", inputs: [{ name: "code", type: "uint32" }] } }, DexCreateNewInviter_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundNewInviter", inputs: [] } }, DexTransferTokenOwnership_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundTransferTokenOwner", inputs: [{ name: "token", type: "tokenId" }, { name: "owner", type: "address" }] } }, DexMarketAdminConfig_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundMarketOwnerConfig", inputs: [{ name: "operationCode", type: "uint8" }, { name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }, { name: "owner", type: "address" }, { name: "takerFeeRate", type: "int32" }, { name: "makerFeeRate", type: "int32" }, { name: "stopMarket", type: "bool" }] } }, DexStakeForSuperVIP_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundPledgeForSuperVip", inputs: [{ name: "actionType", type: "uint8" }] } }, DexConfigMarketAgents_V1: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "DexFundConfigMarketsAgent", inputs: [{ name: "actionType", type: "uint8" }, { name: "agent", type: "address" }, { name: "tradeTokens", type: "tokenId[]" }, { name: "quoteTokens", type: "tokenId[]" }] } }, RegisterSBP: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "RegisterSBP", inputs: [{ name: "sbpName", type: "string" }, { name: "blockProducingAddress", type: "address" }, { name: "rewardWithdrawAddress", type: "address" }] } }, UpdateSBPBlockProducingAddress: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "UpdateSBPBlockProducingAddress", inputs: [{ name: "sbpName", type: "string" }, { name: "blockProducingAddress", type: "address" }] } }, UpdateSBPRewardWithdrawAddress: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "UpdateSBPRewardWithdrawAddress", inputs: [{ name: "sbpName", type: "string" }, { name: "rewardWithdrawAddress", type: "address" }] } }, RevokeSBP: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "RevokeSBP", inputs: [{ name: "sbpName", type: "string" }] } }, WithdrawSBPReward: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "WithdrawSBPReward", inputs: [{ name: "sbpName", type: "string" }, { name: "receiveAddress", type: "address" }] } }, VoteForSBP: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "VoteForSBP", inputs: [{ name: "sbpName", type: "string" }] } }, CancelSBPVoting: { contractAddress: e2.ConsensusGroup_ContractAddress, abi: { type: "function", name: "CancelSBPVoting", inputs: [] } }, StakeForQuota: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "StakeForQuota", inputs: [{ name: "beneficiary", type: "address" }] } }, CancelQuotaStake: { contractAddress: e2.Staking_ContractAddress, abi: { type: "function", name: "CancelQuotaStaking", inputs: [{ name: "id", type: "bytes32" }] } }, IssueToken: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "IssueToken", inputs: [{ name: "isReIssuable", type: "bool" }, { name: "tokenName", type: "string" }, { name: "tokenSymbol", type: "string" }, { name: "totalSupply", type: "uint256" }, { name: "decimals", type: "uint8" }, { name: "maxSupply", type: "uint256" }, { name: "isOwnerBurnOnly", type: "bool" }] } }, ReIssueToken: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "ReIssue", inputs: [{ name: "tokenId", type: "tokenId" }, { name: "amount", type: "uint256" }, { name: "receiveAddress", type: "address" }] } }, BurnToken: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "Burn", inputs: [] } }, TransferTokenOwnership: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "TransferOwnership", inputs: [{ name: "tokenId", type: "tokenId" }, { name: "newOwner", type: "address" }] } }, DisableReIssue: { contractAddress: e2.TokenIssuance_ContractAddress, abi: { type: "function", name: "DisableReIssue", inputs: [{ name: "tokenId", type: "tokenId" }] } }, DexDeposit: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "Deposit", inputs: [] } }, DexWithdraw: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "Withdraw", inputs: [{ name: "token", type: "tokenId" }, { name: "amount", type: "uint256" }] } }, DexOpenNewMarket: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "OpenNewMarket", inputs: [{ name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }] } }, DexPlaceOrder: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "PlaceOrder", inputs: [{ name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }, { name: "side", type: "bool" }, { name: "orderType", type: "uint8" }, { name: "price", type: "string" }, { name: "quantity", type: "uint256" }] } }, DexCancelOrder: { contractAddress: e2.DexTrade_ContractAddress, abi: { type: "function", name: "CancelOrder", inputs: [{ name: "orderId", type: "bytes" }] } }, DexStakeForMining: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "StakeForMining", inputs: [{ name: "actionType", type: "uint8" }, { name: "amount", type: "uint256" }] } }, DexStakeForVIP: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "StakeForVIP", inputs: [{ name: "actionType", type: "uint8" }] } }, DexMarketAdminConfig: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "MarketAdminConfig", inputs: [{ name: "operationCode", type: "uint8" }, { name: "tradeToken", type: "tokenId" }, { name: "quoteToken", type: "tokenId" }, { name: "marketOwner", type: "address" }, { name: "takerFeeRate", type: "int32" }, { name: "makerFeeRate", type: "int32" }, { name: "stopMarket", type: "bool" }] } }, DexTransferTokenOwnership: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "TransferTokenOwnership", inputs: [{ name: "token", type: "tokenId" }, { name: "newOwner", type: "address" }] } }, DexCreateNewInviter: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "CreateNewInviter", inputs: [] } }, DexBindInviteCode: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "BindInviteCode", inputs: [{ name: "code", type: "uint32" }] } }, DexStakeForSuperVIP: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "StakeForSVIP", inputs: [{ name: "actionType", type: "uint8" }] } }, DexConfigMarketAgents: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "ConfigMarketAgents", inputs: [{ name: "actionType", type: "uint8" }, { name: "agent", type: "address" }, { name: "tradeTokens", type: "tokenId[]" }, { name: "quoteTokens", type: "tokenId[]" }] } }, DexLockVxForDividend: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "LockVxForDividend", inputs: [{ name: "actionType", type: "uint8" }, { name: "amount", type: "uint256" }] } }, DexSwitchConfig: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "SwitchConfig", inputs: [{ name: "switchType", type: "uint8" }, { name: "enable", type: "bool" }] } }, DexStakeForPrincipalSVIP: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "StakeForPrincipalSVIP", inputs: [{ name: "principal", type: "address" }] } }, DexCancelStakeById: { contractAddress: e2.DexFund_ContractAddress, abi: { type: "function", name: "CancelStakeById", inputs: [{ name: "id", type: "bytes32" }] } } };
        }, 62989: (t2, e2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.requestTimeout = e2.unsafeInteger = e2.integerIllegal = e2.addressMissing = e2.addressIllegal = e2.paramsConflict = e2.paramsFormat = e2.paramsMissing = void 0, e2.paramsMissing = { code: "100001", message: "Missing parameter(s)." }, e2.paramsFormat = { code: "100002", message: "Incorrect parameter format." }, e2.paramsConflict = { code: "100003", message: "Parameter conflict." }, e2.addressIllegal = { code: "200001", message: "Illegal address." }, e2.addressMissing = { code: "200002", message: "Address does not exist" }, e2.integerIllegal = { code: "200003", message: "Illegal integer" }, e2.unsafeInteger = { code: "200004", message: "Unsafe integer" }, e2.requestTimeout = { code: "300001", message: "Request timeout" };
        }, 85602: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2 = r2(62989), i = r2(95506), o = r2(21362), s = r2(70298), a = r2(93352), h = s.defaultScryptParams.n, f = s.defaultScryptParams.p, u = s.defaultScryptParams.r, c = s.defaultScryptParams.keyLen, d = [function(t3, e3, r3) {
            var n3 = t3.crypto, i2 = n3.scryptparams;
            return l(e3, { ciphername: n3.ciphername, nonce: n3.nonce, ciphertext: n3.ciphertext, scryptParams: i2 }, s.additionData, r3);
          }, function(t3, e3, r3) {
            return new Promise(function(n3, i2) {
              (0, o.encryptPwd)(e3, t3.scryptparams, r3).then(function(e4) {
                return n3(e4.toString("hex") === t3.encryptp);
              }).catch(function(t4) {
                i2(t4);
              });
            });
          }, function(t3, e3, r3) {
            var n3 = t3.crypto, i2 = { n: t3.scryptparams && t3.scryptparams.n || h, r: t3.scryptparams && t3.scryptparams.r || u, p: t3.scryptparams && t3.scryptparams.p || f, keylen: t3.scryptparams && t3.scryptparams.keylen || c, salt: t3.crypto.salt };
            return l(e3, { ciphername: n3.ciphername, nonce: n3.nonce, ciphertext: t3.encryptentropy, scryptParams: i2 }, null, r3);
          }, function(t3, e3, r3) {
            var n3 = t3.crypto, i2 = n3.scryptparams;
            return l(e3, { ciphername: n3.ciphername, nonce: n3.nonce, ciphertext: n3.ciphertext, scryptParams: i2 }, null, r3);
          }];
          function l(t3, e3, r3, n3) {
            var i2 = e3.ciphername, s2 = e3.nonce, a2 = e3.ciphertext, h2 = e3.scryptParams;
            return new Promise(function(e4, f2) {
              (0, o.encryptPwd)(t3, h2, n3).then(function(t4) {
                !function(t5, e5, n4) {
                  try {
                    e5((0, o.decipheriv)({ algorithm: i2, encryptPwd: t5, nonce: s2, encryptText: a2 }, r3));
                  } catch (t6) {
                    return n4(t6);
                  }
                }(t4, e4, f2);
              }).catch(function(t4) {
                f2(t4);
              });
            });
          }
          e2.default = function(t3, e3, r3) {
            var o2 = (0, i.checkParams)({ keystore: t3, pwd: e3 }, ["keystore", "pwd"]);
            if (o2)
              return Promise.reject(o2);
            var s2 = (0, a.default)(t3);
            return s2 ? s2.version ? d[Number(s2.version)](s2, e3, r3) : d[0](s2, e3, r3) : Promise.reject({ code: n2.paramsFormat.code, message: "".concat(n2.paramsFormat.message, " Illegal keystore.") });
          };
        }, 99397: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.encryptOldKeystore = e2.encryptV1ToV3 = e2.encrypt = void 0;
          var n2 = r2(13815), i = r2(95506), o = r2(35986), s = r2(62989), a = r2(93352), h = r2(21362), f = r2(70298), u = i.ed25519.random, c = f.defaultScryptParams.n, d = f.defaultScryptParams.p, l = f.defaultScryptParams.r, p = f.defaultScryptParams.keyLen;
          function g(t3, e3, r3) {
            var i2 = u(12), o2 = (0, h.cipheriv)({ rawText: t3, pwd: e3, nonce: i2, algorithm: f.algorithm }), s2 = { cipherName: f.algorithm, ciphertext: o2, Nonce: Buffer.from(i2).toString("hex"), KDF: f.scryptName, scryptParams: r3 }, a2 = { uuid: new n2(1).format(), crypto: s2, version: f.currentVersion, timestamp: new Date().getTime() };
            return JSON.stringify(a2).toLocaleLowerCase();
          }
          e2.encrypt = function(t3, e3, r3, n3) {
            var o2 = (0, i.checkParams)({ key: t3, pwd: e3 }, ["key", "pwd"]);
            if (o2)
              return Promise.reject(o2);
            var s2 = { n: r3 && r3.n ? r3.n : c, r: r3 && r3.r ? r3.r : l, p: r3 && r3.p ? r3.p : d, keylen: r3 && r3.keylen ? r3.keylen : p, salt: r3 && r3.salt ? r3.salt : Buffer.from(u()).toString("hex") };
            return new Promise(function(r4, i2) {
              (0, h.encryptPwd)(e3, s2, n3).then(function(e4) {
                !function(e5, r5, n4) {
                  try {
                    r5(g(t3, e5, s2));
                  } catch (t4) {
                    n4(t4);
                  }
                }(e4, r4, i2);
              }).catch(function(t4) {
                i2(t4);
              });
            });
          }, e2.encryptV1ToV3 = function(t3, e3) {
            var r3 = (0, i.checkParams)({ key: t3, keystore: e3 }, ["key", "keystore"]);
            if (r3)
              return console.error(new Error(r3.message)), false;
            var n3 = (0, a.default)(e3);
            if (!n3)
              return console.error(new Error("".concat(s.paramsFormat.message, " Illegal keystore."))), false;
            var o2 = n3.scryptparams, h2 = Buffer.from(n3.encryptp, "hex");
            try {
              return g(t3, h2, o2);
            } catch (r4) {
              return console.error(r4), false;
            }
          }, e2.encryptOldKeystore = function(t3, e3, r3) {
            var s2 = (0, i.checkParams)({ privKey: t3, pwd: e3 }, ["privKey", "pwd"]);
            if (s2)
              throw new Error(s2.message);
            var a2 = (0, o.createAddressByPrivateKey)(t3), g2 = { n: c, r: l, p: d, keylen: p, salt: Buffer.from(u()).toString("hex") };
            return new Promise(function(t4, i2) {
              (0, h.encryptPwd)(e3, g2, r3).then(function(e4) {
                !function(t5, e5) {
                  var r4 = u(12), i3 = (0, h.cipheriv)({ rawText: a2.privateKey, pwd: t5, nonce: r4, algorithm: f.algorithm }, f.additionData), o2 = { cipherName: f.algorithm, KDF: f.scryptName, ScryptParams: g2, CipherText: i3, Nonce: Buffer.from(r4).toString("hex") }, s3 = { hexAddress: a2.address, crypto: o2, id: new n2(1).format(), keystoreVersion: 1, timestamp: new Date().getTime() };
                  e5(JSON.stringify(s3).toLocaleLowerCase());
                }(e4, t4);
              }).catch(function(t5) {
                i2(t5);
              });
            });
          };
        }, 40098: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.encryptOldKeystore = e2.encryptV1ToV3 = e2.encrypt = e2.decrypt = e2.isValid = void 0;
          var n2 = r2(93352), i = r2(85602), o = r2(99397);
          e2.isValid = n2.default, e2.decrypt = i.default, e2.encrypt = o.encrypt, e2.encryptV1ToV3 = o.encryptV1ToV3, e2.encryptOldKeystore = o.encryptOldKeystore;
        }, 21362: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.encryptPwd = e2.decipheriv = e2.cipheriv = void 0;
          var n2 = r2(94385), i = "undefined" == typeof window ? r2(55835) : r2(44696);
          e2.cipheriv = function(t3, e3) {
            var r3 = t3.rawText, n3 = t3.pwd, o = t3.nonce, s = t3.algorithm, a = i.createCipheriv(s, n3, o);
            e3 && a.setAAD(e3);
            var h = a.update(Buffer.from(r3, "hex"), "utf8", "hex");
            return (h += a.final("hex")) + a.getAuthTag().toString("hex");
          }, e2.decipheriv = function(t3, e3) {
            var r3 = t3.algorithm, n3 = t3.encryptPwd, o = t3.nonce, s = t3.encryptText;
            void 0 === e3 && (e3 = "");
            var a = s.slice(0, s.length - 32), h = s.slice(s.length - 32), f = i.createDecipheriv(r3, n3, Buffer.from(o, "hex"));
            return f.setAuthTag(Buffer.from(h, "hex")), e3 && f.setAAD(e3), f.update(Buffer.from(a, "hex"), "utf8", "hex") + f.final("hex");
          }, e2.encryptPwd = function(t3, e3, r3) {
            var i2 = Buffer.from(e3.salt, "hex");
            return r3 ? r3(t3, Array.from(i2), Number(e3.n), Number(e3.r), Number(e3.p), Number(e3.keylen)) : Promise.resolve(n2(t3, Buffer.from(i2), Number(e3.n), Number(e3.r), Number(e3.p), Number(e3.keylen)));
          };
        }, 93352: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2 = r2(13815), i = r2(95506), o = r2(35986), s = r2(70298), a = [function(t3) {
            if (!(t3.id && t3.crypto && t3.hexaddress && (0, o.isValidAddress)(t3.hexaddress)))
              return false;
            var e3 = t3.crypto;
            if (e3.ciphername !== s.algorithm || !e3.ciphertext || !e3.nonce || e3.kdf !== s.scryptName || !e3.scryptparams)
              return false;
            var r3 = e3.scryptparams;
            return !!(r3.n && r3.p && r3.r && r3.keylen && r3.salt) && (new n2().parse(t3.id), Buffer.from(e3.ciphertext, "hex"), Buffer.from(e3.nonce, "hex"), Buffer.from(r3.salt, "hex"), t3);
          }, function(t3) {
            if (!t3.scryptparams || !t3.encryptp || !t3.version || 1 !== Number(t3.version))
              return false;
            var e3 = t3.scryptparams;
            return !!(e3.n && e3.r && e3.p && e3.keylen && e3.salt) && (Buffer.from(e3.salt, "hex"), t3);
          }, function(t3) {
            if (!t3.crypto || !t3.encryptentropy || !t3.version || 2 !== Number(t3.version))
              return false;
            var e3 = t3.crypto;
            return !(e3.ciphername !== s.algorithm || e3.kdf !== s.scryptName || !e3.nonce || !e3.salt && !e3.scryptparams) && !(!e3.salt && !e3.scryptparams.salt) && !(e3.scryptparams && !(e3.scryptparams.n && e3.scryptparams.p && e3.scryptparams.r && e3.scryptparams.keylen)) && (Buffer.from(t3.encryptentropy, "hex"), Buffer.from(e3.nonce, "hex"), Buffer.from(e3.salt, "hex"), t3);
          }, function(t3) {
            if (!t3.uuid || !t3.crypto || !t3.version || 3 !== Number(t3.version))
              return false;
            var e3 = t3.crypto;
            if (e3.ciphername !== s.algorithm || !e3.ciphertext || !e3.nonce || e3.kdf !== s.scryptName || !e3.scryptparams)
              return false;
            var r3 = e3.scryptparams;
            return !!(r3.n && r3.p && r3.r && r3.keylen && r3.salt) && (new n2().parse(t3.uuid), Buffer.from(e3.ciphertext, "hex"), Buffer.from(e3.nonce, "hex"), Buffer.from(r3.salt, "hex"), t3);
          }];
          e2.default = function(t3) {
            if ((0, i.checkParams)({ keystore: t3 }, ["keystore"]))
              return false;
            try {
              var e3 = JSON.parse(t3.toLowerCase());
              return !(!e3.version && !e3.keystoreversion) && !(e3.version && Number(e3.version) > s.currentVersion || e3.keystoreversion && 1 !== e3.keystoreversion) && (e3.version ? a[Number(e3.version)](e3) : a[0](e3));
            } catch (t4) {
              return false;
            }
          };
        }, 70298: (t2, e2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.currentVersion = e2.defaultScryptParams = e2.scryptName = e2.algorithm = e2.additionData = void 0, e2.additionData = Buffer.from("vite"), e2.algorithm = "aes-256-gcm", e2.scryptName = "scrypt", e2.defaultScryptParams = { n: 4096, p: 6, r: 8, keyLen: 32 }, e2.currentVersion = 3;
        }, 44890: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.random = e2.verify = e2.sign = e2.getPublicKey = e2.keyPair = void 0;
          var n2 = r2(91673), i = r2(95506);
          function o(t3) {
            var e3 = (0, i.checkParams)({ privKey: t3 }, ["privKey"]);
            if (e3)
              throw new Error(e3.message);
            var r3 = n2.sign.keyPair.fromSecretKey(t3);
            return Buffer.from(r3.publicKey);
          }
          e2.keyPair = function() {
            var t3 = n2.sign.keyPair();
            return { privateKey: Buffer.from(t3.secretKey), publicKey: Buffer.from(t3.publicKey) };
          }, e2.getPublicKey = o, e2.sign = function(t3, e3) {
            var r3 = (0, i.checkParams)({ hexStr: t3, privKey: e3 }, ["hexStr", "privKey"], [{ name: "hexStr", func: i.isHexString }, { name: "privKey", func: i.isHexString }]);
            if (r3)
              throw new Error(r3.message);
            var s = Buffer.from(e3, "hex"), a = Buffer.from(t3, "hex"), h = o(s), f = n2.sign.detached(a, s, h);
            return Buffer.from(f).toString("hex");
          }, e2.verify = function(t3, e3, r3) {
            var o2 = (0, i.checkParams)({ message: t3, signature: e3, publicKey: r3 }, ["message", "signature", "publicKey"], [{ name: "message", func: i.isHexString }, { name: "signature", func: i.isHexString }, { name: "publicKey", func: i.isHexString }]);
            if (o2)
              throw new Error(o2.message);
            var s = Buffer.from(r3, "hex"), a = Buffer.from(t3, "hex"), h = Buffer.from(e3, "hex");
            return n2.sign.detached.verify(a, h, s);
          }, e2.random = function(t3) {
            void 0 === t3 && (t3 = 32);
            var e3 = (0, i.checkParams)({ bytesLen: t3 }, ["bytesLen"]);
            if (e3)
              throw new Error(e3.message);
            return n2.randomBytes(t3);
          };
        }, 95506: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2._bn = e2._Buffer = e2.blake2bHex = e2.blake2b = e2.isBase64String = e2.isHexString = e2.isSafeInteger = e2.getBytesSize = e2.isObject = e2.isArray = e2.isInteger = e2.isNonNegativeInteger = e2.isValidSBPName = e2.getTokenIdFromOriginalTokenId = e2.getOriginalTokenIdFromTokenId = e2.isValidTokenId = e2.checkParams = e2.uriStringify = e2.ed25519 = void 0;
          var n2 = r2(13550), i = r2(80129), o = r2(8442), s = r2(62989), a = r2(44890);
          function h(t3, e3, r3) {
            if (void 0 === e3 && (e3 = []), void 0 === r3 && (r3 = []), !t3)
              return null;
            for (var n3 = function(e4) {
              return Object.prototype.hasOwnProperty.call(t3, e4) && void 0 !== t3[e4] && null !== t3[e4];
            }, i2 = 0, o2 = e3; i2 < o2.length; i2++)
              if (!n3(u2 = o2[i2]))
                return { code: s.paramsMissing.code, message: "".concat(s.paramsMissing.message, " ").concat(u2, ".") };
            for (var a2 = 0, h2 = r3; a2 < h2.length; a2++) {
              var f2 = h2[a2], u2 = f2.name, c = f2.func, d = f2.msg;
              if (u2 && c && n3(u2) && !c(t3[u2]))
                return { code: s.paramsFormat.code, message: "".concat(s.paramsFormat.message, " Illegal ").concat(u2, ". ").concat(d || "") };
            }
            return null;
          }
          function f(t3) {
            return (t3 = "".concat(t3)) && (/^[\-]{0,1}[1-9]\d*$/g.test(t3) || "0" === t3);
          }
          function u(t3) {
            return o.blake2bHex(Buffer.from(t3, "hex"), null, 2);
          }
          e2.ed25519 = a, e2.uriStringify = function(t3) {
            var e3 = t3.schema, r3 = t3.prefix, n3 = t3.target_address, o2 = t3.chain_id, s2 = t3.function_name, a2 = t3.params, h2 = e3 ? "".concat(e3, ":") : "vite:", f2 = void 0 === r3 ? "" : "".concat(r3, "-"), u2 = n3 || "", c = o2 ? "@".concat(o2) : "", d = s2 ? "/".concat(s2) : "";
            a2 && a2.data && (a2.data = a2.data.replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, ""));
            var l = a2 ? "?".concat((0, i.stringify)(a2, { encode: false })) : "";
            return "".concat(h2).concat(f2).concat(u2).concat(c).concat(d).concat(l);
          }, e2.checkParams = h, e2.isValidTokenId = function(t3) {
            if (0 !== t3.indexOf("tti_") || 28 !== t3.length)
              return false;
            var e3 = u(t3.slice(4, t3.length - 4));
            return t3.slice(t3.length - 4) === e3;
          }, e2.getOriginalTokenIdFromTokenId = function(t3) {
            var e3 = h({ tokenId: t3 }, ["tokenId"], [{ name: "tokenId", func: function(t4) {
              return 0 === t4.indexOf("tti_") && 28 === t4.length;
            } }]);
            if (e3)
              throw new Error(e3.message);
            return t3.slice(4, t3.length - 4);
          }, e2.getTokenIdFromOriginalTokenId = function(t3) {
            var e3 = h({ originalTokenId: t3 }, ["originalTokenId"], [{ name: "originalTokenId", func: function(t4) {
              return /^[0-9a-fA-F]+$/.test(t4) && 20 === t4.length;
            } }]);
            if (e3)
              throw new Error(e3.message);
            return "tti_".concat(t3).concat(u(t3));
          }, e2.isValidSBPName = function(t3) {
            return /^[a-zA-Z0-9_\.]+(\s{1}[a-zA-Z0-9_\.]+)*$/g.test(t3) && t3.length <= 40;
          }, e2.isNonNegativeInteger = function(t3) {
            return (t3 = "".concat(t3)) && (/(^[1-9]\d*$)/g.test(t3) || "0" === t3);
          }, e2.isInteger = f, e2.isArray = Array.isArray || function(t3) {
            return "[object Array]" === Object.prototype.toString.call(t3);
          }, e2.isObject = function(t3) {
            var e3 = typeof t3;
            return "function" === e3 || "object" === e3 && !!t3;
          }, e2.getBytesSize = function(t3, e3) {
            void 0 === e3 && (e3 = "utf8");
            var r3 = h({ str: t3 }, ["str"]);
            if (r3)
              throw new Error(r3.message);
            var n3, i2, o2, s2 = 0;
            if ("utf16" === e3) {
              for (i2 = 0, o2 = t3.length; i2 < o2; i2++)
                s2 += (n3 = t3.charCodeAt(i2)) <= 65535 ? 2 : 4;
              return s2;
            }
            for (i2 = 0, o2 = t3.length; i2 < o2; i2++)
              s2 += 0 <= (n3 = t3.charCodeAt(i2)) && n3 <= 127 ? 1 : 128 <= n3 && n3 <= 2047 ? 2 : 2048 <= n3 && n3 <= 55295 || 57344 <= n3 && n3 <= 65535 ? 3 : 4;
            return s2;
          }, e2.isSafeInteger = function(t3) {
            return "string" == typeof t3 ? f(t3) ? 1 : -1 : "number" != typeof t3 ? -1 : Number.isSafeInteger(t3) ? 1 : 0;
          }, e2.isHexString = function(t3) {
            return /^[0-9a-fA-F]+$/.test(t3);
          }, e2.isBase64String = function(t3) {
            return "" === t3 || /^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$/.test(t3);
          }, e2.blake2b = o.blake2b, e2.blake2bHex = o.blake2bHex, e2._Buffer = Buffer, e2._bn = n2;
        }, 74271: (t2, e2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var r2 = function() {
            function t3(t4, e3, r3) {
              this.id = t4, this.callback = null, this.provider = e3, this.isSubscribe = r3, this.timeLoop = null;
            }
            return t3.prototype.on = function(t4) {
              this.callback = t4;
            }, t3.prototype.off = function() {
              this.stopLoop(), this.provider.unsubscribe(this);
            }, t3.prototype.emit = function(t4) {
              this.callback && this.callback(t4);
            }, t3.prototype.startLoop = function(t4, e3) {
              var r3 = this;
              void 0 === e3 && (e3 = 2e3);
              var n2 = function() {
                r3.timeLoop = setTimeout(function() {
                  r3.provider.request("subscribe_getChangesByFilterId", r3.id).then(function(e4) {
                    t4 && t4(e4), n2();
                  }).catch(function() {
                    n2();
                  });
                }, e3);
              };
              n2();
            }, t3.prototype.stopLoop = function() {
              this.timeLoop && (clearTimeout(this.timeLoop), this.timeLoop = null, this.provider.request("subscribe_uninstallFilter", this.id));
            }, t3;
          }();
          e2.default = r2;
        }, 71769: function(t2, e2, r2) {
          "use strict";
          var n2, i = this && this.__extends || (n2 = function(t3, e3) {
            return n2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t4, e4) {
              t4.__proto__ = e4;
            } || function(t4, e4) {
              for (var r3 in e4)
                Object.prototype.hasOwnProperty.call(e4, r3) && (t4[r3] = e4[r3]);
            }, n2(t3, e3);
          }, function(t3, e3) {
            if ("function" != typeof e3 && null !== e3)
              throw new TypeError("Class extends value " + String(e3) + " is not a constructor or null");
            function r3() {
              this.constructor = t3;
            }
            n2(t3, e3), t3.prototype = null === e3 ? Object.create(e3) : (r3.prototype = e3.prototype, new r3());
          }), o = this && this.__awaiter || function(t3, e3, r3, n3) {
            return new (r3 || (r3 = Promise))(function(i2, o2) {
              function s2(t4) {
                try {
                  h2(n3.next(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function a2(t4) {
                try {
                  h2(n3.throw(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function h2(t4) {
                var e4;
                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                  t5(e4);
                })).then(s2, a2);
              }
              h2((n3 = n3.apply(t3, e3 || [])).next());
            });
          }, s = this && this.__generator || function(t3, e3) {
            var r3, n3, i2, o2, s2 = { label: 0, sent: function() {
              if (1 & i2[0])
                throw i2[1];
              return i2[1];
            }, trys: [], ops: [] };
            return o2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function a2(o3) {
              return function(a3) {
                return function(o4) {
                  if (r3)
                    throw new TypeError("Generator is already executing.");
                  for (; s2; )
                    try {
                      if (r3 = 1, n3 && (i2 = 2 & o4[0] ? n3.return : o4[0] ? n3.throw || ((i2 = n3.return) && i2.call(n3), 0) : n3.next) && !(i2 = i2.call(n3, o4[1])).done)
                        return i2;
                      switch (n3 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                        case 0:
                        case 1:
                          i2 = o4;
                          break;
                        case 4:
                          return s2.label++, { value: o4[1], done: false };
                        case 5:
                          s2.label++, n3 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = s2.ops.pop(), s2.trys.pop();
                          continue;
                        default:
                          if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                            s2 = 0;
                            continue;
                          }
                          if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                            s2.label = o4[1];
                            break;
                          }
                          if (6 === o4[0] && s2.label < i2[1]) {
                            s2.label = i2[1], i2 = o4;
                            break;
                          }
                          if (i2 && s2.label < i2[2]) {
                            s2.label = i2[2], s2.ops.push(o4);
                            break;
                          }
                          i2[2] && s2.ops.pop(), s2.trys.pop();
                          continue;
                      }
                      o4 = e3.call(t3, s2);
                    } catch (t4) {
                      o4 = [6, t4], n3 = 0;
                    } finally {
                      r3 = i2 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return { value: o4[0] ? o4[1] : void 0, done: true };
                }([o3, a3]);
              };
            }
          };
          Object.defineProperty(e2, "__esModule", { value: true }), e2.ViteAPI = void 0;
          var a = r2(19548), h = r2(95506), f = r2(35986), u = r2(90277), c = r2(89148), d = function(t3) {
            function e3(e4, r3) {
              var n3 = t3.call(this, e4, r3) || this;
              return n3.customTransactionType = {}, n3;
            }
            return i(e3, t3), Object.defineProperty(e3.prototype, "transactionType", { get: function() {
              return Object.assign({}, this.customTransactionType, c.Default_Contract_TransactionType);
            }, enumerable: false, configurable: true }), e3.prototype.addTransactionType = function(t4) {
              for (var e4 in void 0 === t4 && (t4 = {}), t4) {
                if (a.Contracts[e4])
                  throw new Error("Please rename it. Your transactionType ".concat(e4, " conflicts with default transactionType."));
                if (this.customTransactionType && this.customTransactionType[e4])
                  throw new Error("Please rename it. Your transactionType ".concat(e4, " conflicts with custom transactionType."));
              }
              var r3 = (0, c.encodeContractList)(t4);
              this.customTransactionType = Object.assign({}, this.customTransactionType, r3);
            }, e3.prototype.getBalanceInfo = function(t4) {
              return o(this, void 0, void 0, function() {
                var e4, r3;
                return s(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      if (e4 = (0, h.checkParams)({ address: t4 }, ["address"], [{ name: "address", func: f.isValidAddress }]))
                        throw e4;
                      return [4, this.batch([{ methodName: "ledger_getAccountInfoByAddress", params: [t4] }, { methodName: "ledger_getUnreceivedTransactionSummaryByAddress", params: [t4] }])];
                    case 1:
                      if (!(r3 = n3.sent()) || r3 instanceof Array && r3.length < 2)
                        return [2, { balance: null, unreceived: null }];
                      if (r3[0].error)
                        throw r3[0].error;
                      if (r3[1].error)
                        throw r3[1].error;
                      return [2, { balance: r3[0].result, unreceived: r3[1].result }];
                  }
                });
              });
            }, e3.prototype.getTransactionList = function(t4, e4) {
              var r3 = t4.address, n3 = t4.pageIndex, i2 = t4.pageSize, a2 = void 0 === i2 ? 50 : i2;
              return void 0 === e4 && (e4 = "all"), o(this, void 0, void 0, function() {
                var t5, i3, o2, u2 = this;
                return s(this, function(s2) {
                  switch (s2.label) {
                    case 0:
                      if (t5 = (0, h.checkParams)({ address: r3, pageIndex: n3, decodeTxTypeList: e4 }, ["address", "pageIndex"], [{ name: "address", func: f.isValidAddress }, { name: "decodeTxTypeList", func: function(t6) {
                        return "all" === t6 || "none" === t6 || (0, h.isArray)(t6);
                      }, msg: "'all' || 'none' || TransactionType[]" }]))
                        throw t5;
                      return n3 = n3 >= 0 ? n3 : 0, [4, this.request("ledger_getAccountBlocksByAddress", r3, n3, a2)];
                    case 1:
                      return i3 = s2.sent(), o2 = [], (i3 || []).forEach(function(t6) {
                        var r4 = t6, n4 = (0, c.getTransactionType)(t6, u2.customTransactionType), i4 = n4.abi, s3 = n4.transactionType, a3 = n4.contractAddress;
                        r4.transactionType = s3, a3 && i4 && ("all" === e4 || e4.length && -1 !== e4.indexOf(s3)) && (r4.contractParams = a3 && i4 ? (0, c.decodeContractAccountBlock)({ accountBlock: t6, contractAddress: a3, abi: i4 }) : null), o2.push(r4);
                      }), [2, o2];
                  }
                });
              });
            }, e3.prototype.callOffChainContract = function(t4) {
              var e4 = t4.address, r3 = t4.abi, n3 = t4.code, i2 = t4.params;
              return o(this, void 0, void 0, function() {
                var t5, o2, a2, c2, d2;
                return s(this, function(s2) {
                  switch (s2.label) {
                    case 0:
                      if (t5 = (0, h.checkParams)({ address: e4, abi: r3 }, ["address", "abi"], [{ name: "address", func: function(t6) {
                        return (0, f.isValidAddress)(t6) === f.AddressType.Contract;
                      } }]))
                        throw t5;
                      if (!(o2 = (0, u.getAbiByType)(r3, "offchain")))
                        throw new Error("Can't find abi that type is offchain");
                      return a2 = (0, u.encodeFunctionCall)(o2, i2 || []), [4, this.request("contract_callOffChainMethod", { address: e4, code: n3, data: Buffer.from(a2, "hex").toString("base64") })];
                    case 1:
                      return (c2 = s2.sent()) ? (d2 = Buffer.from(c2, "base64").toString("hex"), [2, (0, u.decodeParameters)(o2.outputs, d2)]) : [2, null];
                  }
                });
              });
            }, e3.prototype.queryContractState = function(t4) {
              var e4 = t4.address, r3 = t4.abi, n3 = t4.methodName, i2 = t4.params;
              return o(this, void 0, void 0, function() {
                var t5, o2, a2, c2, d2;
                return s(this, function(s2) {
                  switch (s2.label) {
                    case 0:
                      if (t5 = (0, h.checkParams)({ address: e4, abi: r3 }, ["address", "abi"], [{ name: "address", func: function(t6) {
                        return (0, f.isValidAddress)(t6) === f.AddressType.Contract;
                      } }]))
                        throw t5;
                      if (!(o2 = (0, u.getAbiByName)(r3, n3)))
                        throw new Error("Can't find abi for the method");
                      return a2 = (0, u.encodeFunctionCall)(o2, i2 || []), [4, this.request("contract_query", { address: e4, data: Buffer.from(a2, "hex").toString("base64") })];
                    case 1:
                      return (c2 = s2.sent()) ? (d2 = Buffer.from(c2, "base64").toString("hex"), [2, (0, u.decodeParameters)(o2.outputs, d2)]) : [2, null];
                  }
                });
              });
            }, e3.prototype.getNonce = function(t4) {
              var e4 = t4.difficulty, r3 = t4.previousHash, n3 = t4.address;
              return o(this, void 0, void 0, function() {
                var t5, i2, o2, a2;
                return s(this, function(s2) {
                  if (t5 = (0, h.checkParams)({ difficulty: e4, previousHash: r3, address: n3 }, ["address", "difficulty", "previousHash"]))
                    throw t5;
                  return i2 = (0, f.getOriginalAddressFromAddress)(n3), o2 = Buffer.from(i2 + r3, "hex"), a2 = (0, h.blake2bHex)(o2, null, 32), [2, this.request("util_getPoWNonce", e4, a2)];
                });
              });
            }, e3;
          }(r2(98747).default);
          e2.ViteAPI = d, e2.default = e2.ViteAPI;
        }, 98747: function(t2, e2, r2) {
          "use strict";
          var n2 = this && this.__awaiter || function(t3, e3, r3, n3) {
            return new (r3 || (r3 = Promise))(function(i2, o2) {
              function s2(t4) {
                try {
                  h2(n3.next(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function a2(t4) {
                try {
                  h2(n3.throw(t4));
                } catch (t5) {
                  o2(t5);
                }
              }
              function h2(t4) {
                var e4;
                t4.done ? i2(t4.value) : (e4 = t4.value, e4 instanceof r3 ? e4 : new r3(function(t5) {
                  t5(e4);
                })).then(s2, a2);
              }
              h2((n3 = n3.apply(t3, e3 || [])).next());
            });
          }, i = this && this.__generator || function(t3, e3) {
            var r3, n3, i2, o2, s2 = { label: 0, sent: function() {
              if (1 & i2[0])
                throw i2[1];
              return i2[1];
            }, trys: [], ops: [] };
            return o2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
              return this;
            }), o2;
            function a2(o3) {
              return function(a3) {
                return function(o4) {
                  if (r3)
                    throw new TypeError("Generator is already executing.");
                  for (; s2; )
                    try {
                      if (r3 = 1, n3 && (i2 = 2 & o4[0] ? n3.return : o4[0] ? n3.throw || ((i2 = n3.return) && i2.call(n3), 0) : n3.next) && !(i2 = i2.call(n3, o4[1])).done)
                        return i2;
                      switch (n3 = 0, i2 && (o4 = [2 & o4[0], i2.value]), o4[0]) {
                        case 0:
                        case 1:
                          i2 = o4;
                          break;
                        case 4:
                          return s2.label++, { value: o4[1], done: false };
                        case 5:
                          s2.label++, n3 = o4[1], o4 = [0];
                          continue;
                        case 7:
                          o4 = s2.ops.pop(), s2.trys.pop();
                          continue;
                        default:
                          if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                            s2 = 0;
                            continue;
                          }
                          if (3 === o4[0] && (!i2 || o4[1] > i2[0] && o4[1] < i2[3])) {
                            s2.label = o4[1];
                            break;
                          }
                          if (6 === o4[0] && s2.label < i2[1]) {
                            s2.label = i2[1], i2 = o4;
                            break;
                          }
                          if (i2 && s2.label < i2[2]) {
                            s2.label = i2[2], s2.ops.push(o4);
                            break;
                          }
                          i2[2] && s2.ops.pop(), s2.trys.pop();
                          continue;
                      }
                      o4 = e3.call(t3, s2);
                    } catch (t4) {
                      o4 = [6, t4], n3 = 0;
                    } finally {
                      r3 = i2 = 0;
                    }
                  if (5 & o4[0])
                    throw o4[1];
                  return { value: o4[0] ? o4[1] : void 0, done: true };
                }([o3, a3]);
              };
            }
          }, o = this && this.__spreadArray || function(t3, e3, r3) {
            if (r3 || 2 === arguments.length)
              for (var n3, i2 = 0, o2 = e3.length; i2 < o2; i2++)
                !n3 && i2 in e3 || (n3 || (n3 = Array.prototype.slice.call(e3, 0, i2)), n3[i2] = e3[i2]);
            return t3.concat(n3 || Array.prototype.slice.call(e3));
          };
          Object.defineProperty(e2, "__esModule", { value: true }), e2.Provider = void 0;
          var s = r2(62989), a = r2(74271), h = function() {
            function t3(t4, e3) {
              this.isConnected = false, this.subscriptionList = {}, this.subscriptionId = 0, this.requestList = {}, this.requestId = 0, this._provider = t4, this.connectedOnce(e3);
            }
            return t3.prototype.setProvider = function(t4, e3, r3) {
              r3 && this._provider.abort(r3), this.unsubscribeAll(), t4 && (this._provider = t4, this.isConnected = false, this.connectedOnce(e3));
            }, t3.prototype.unsubscribe = function(t4) {
              this.subscriptionList[t4._id || 0] === t4 && (t4 && t4.stopLoop(), delete this.subscriptionList[t4._id], Object.keys(this.subscriptionList).length || this._provider.unsubscribe && this._provider.unsubscribe());
            }, t3.prototype.unsubscribeAll = function() {
              Object.values(this.subscriptionList).forEach(function(t4) {
                t4.stopLoop();
              }), this.subscriptionList = {}, this._provider.unsubscribe && this._provider.unsubscribe();
            }, t3.prototype.request = function(t4) {
              for (var e3 = [], r3 = 1; r3 < arguments.length; r3++)
                e3[r3 - 1] = arguments[r3];
              return n2(this, void 0, void 0, function() {
                var r4;
                return i(this, function(n3) {
                  switch (n3.label) {
                    case 0:
                      return this.isConnected ? [4, this._provider.request(t4, e3)] : [2, this._onReq.apply(this, o(["request", t4], e3, false))];
                    case 1:
                      if ((r4 = n3.sent()).error)
                        throw r4.error;
                      return [2, r4.result];
                  }
                });
              });
            }, t3.prototype.sendNotification = function(t4) {
              for (var e3 = [], r3 = 1; r3 < arguments.length; r3++)
                e3[r3 - 1] = arguments[r3];
              return n2(this, void 0, void 0, function() {
                return i(this, function(r4) {
                  return this.isConnected ? [2, this._provider.sendNotification(t4, e3)] : [2, this._onReq.apply(this, o(["sendNotification", t4], e3, false))];
                });
              });
            }, t3.prototype.batch = function(t4) {
              return n2(this, void 0, void 0, function() {
                return i(this, function(e3) {
                  switch (e3.label) {
                    case 0:
                      return this.isConnected ? (t4.forEach(function(t5) {
                        t5.type = t5.type || "request";
                      }), [4, this._provider.batch(t4)]) : [2, this._onReq("batch", t4)];
                    case 1:
                      return [2, e3.sent()];
                  }
                });
              });
            }, t3.prototype.subscribe = function(t4) {
              for (var e3 = [], r3 = 1; r3 < arguments.length; r3++)
                e3[r3 - 1] = arguments[r3];
              return n2(this, void 0, void 0, function() {
                var r4, n3, s2, h2, f, u = this;
                return i(this, function(i2) {
                  switch (i2.label) {
                    case 0:
                      return r4 = this._provider.subscribe ? "subscribe_subscribe" : "subscribe_".concat(t4, "Filter"), n3 = this._provider.subscribe ? o([t4], e3, true) : e3, this.isConnected ? [4, this._provider.request(r4, n3)] : [3, 2];
                    case 1:
                      return s2 = (s2 = i2.sent()).result, [3, 4];
                    case 2:
                      return [4, this._onReq.apply(this, o(["request", r4], n3, false))];
                    case 3:
                      s2 = i2.sent(), i2.label = 4;
                    case 4:
                      return h2 = s2, Object.keys(this.subscriptionList).length || (this.subscriptionList = {}, this._provider.subscribe && this._provider.subscribe(function(t5) {
                        u.subscribeCallback(t5);
                      })), f = new a.default(h2, this, !!this._provider.subscribe), this._provider.subscribe || f.startLoop(function(t5) {
                        u.subscribeCallback(t5);
                      }), f._id = this.subscriptionId++, this.subscriptionList[f._id] = f, [2, f];
                  }
                });
              });
            }, t3.prototype._offReq = function(t4) {
              delete this.requestList[t4._id];
            }, t3.prototype._onReq = function(t4, e3) {
              for (var r3 = this, n3 = [], i2 = 2; i2 < arguments.length; i2++)
                n3[i2 - 2] = arguments[i2];
              return new Promise(function(i3, a2) {
                var h2 = function() {
                  r3[t4].apply(r3, o([e3], n3, false)).then(function(t5) {
                    clearTimeout(f), r3._offReq(h2), i3(t5);
                  }).catch(function(t5) {
                    r3._offReq(h2), clearTimeout(f), a2(t5);
                  });
                };
                h2._id = r3.requestId++, r3.requestList[h2._id] = h2;
                var f = setTimeout(function() {
                  r3._offReq(h2), a2(s.requestTimeout);
                }, r3._provider._timeout || 3e4);
              });
            }, t3.prototype.subscribeCallback = function(t4) {
              if (t4) {
                var e3 = t4.params && t4.params.subscription ? t4.params.subscription : t4.subscription || "";
                e3 && Object.values(this.subscriptionList).forEach(function(r3) {
                  if (r3.id === e3) {
                    var n3 = t4.params && t4.params.result ? t4.params.result : t4.result || null;
                    n3 && r3.emit(n3);
                  }
                });
              }
            }, t3.prototype.connectedOnce = function(t4) {
              var e3 = this, r3 = function() {
                e3.isConnected = true, e3.requestList && Object.values(e3.requestList).forEach(function(t5) {
                  t5 && t5();
                }), t4 && t4(e3);
              };
              "http" === this._provider.type || this._provider.connectStatus ? r3() : this._provider.on && this._provider.on("connect", function() {
                r3(), e3._provider.remove("connect");
              });
            }, t3;
          }();
          e2.Provider = h, e2.default = e2.Provider;
        }, 35986: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.isValidAddress = e2.getAddressFromOriginalAddress = e2.getOriginalAddressFromAddress = e2.getAddressFromPublicKey = e2.createAddressByPrivateKey = e2.AddressType = e2.ADDR_LEN = e2.ADDR_CHECK_SUM_SIZE = e2.ADDR_SIZE = e2.ADDR_PRE = void 0;
          var n2, i = r2(95506), o = r2(62989), s = i.ed25519.keyPair, a = i.ed25519.getPublicKey;
          function h(t3) {
            return (r3 = t3) && r3.length === e2.ADDR_LEN && 0 === r3.indexOf(e2.ADDR_PRE) ? function(t4) {
              var r4 = t4.slice(e2.ADDR_PRE.length + 2 * e2.ADDR_SIZE), i2 = t4.slice(e2.ADDR_PRE.length, e2.ADDR_PRE.length + 2 * e2.ADDR_SIZE), o2 = Buffer.from(i2, "hex");
              return c(o2, true) === r4 ? n2.Contract : r4 === c(o2) ? n2.Account : n2.Illegal;
            }(t3) : n2.Illegal;
            var r3;
          }
          function f(t3) {
            var r3 = (0, i.blake2b)(t3, null, e2.ADDR_SIZE), n3 = new Uint8Array(21);
            return n3.set(r3), n3.set([0], 20), Buffer.from(n3);
          }
          function u(t3) {
            var e3 = a(t3);
            return f(Buffer.from(e3));
          }
          function c(t3, r3) {
            var n3 = t3.slice(0, 20), o2 = (0, i.blake2b)(n3, null, e2.ADDR_CHECK_SUM_SIZE), s2 = Buffer.from(o2);
            if (!r3)
              return s2.toString("hex");
            var a2 = [];
            return s2.forEach(function(t4) {
              a2.push(255 ^ t4);
            }), Buffer.from(a2).toString("hex");
          }
          function d(t3, r3) {
            return e2.ADDR_PRE + t3.slice(0, 20).toString("hex") + r3;
          }
          e2.ADDR_PRE = "vite_", e2.ADDR_SIZE = 20, e2.ADDR_CHECK_SUM_SIZE = 5, e2.ADDR_LEN = e2.ADDR_PRE.length + 2 * e2.ADDR_SIZE + 2 * e2.ADDR_CHECK_SUM_SIZE, function(t3) {
            t3[t3.Illegal = 0] = "Illegal", t3[t3.Account = 1] = "Account", t3[t3.Contract = 2] = "Contract";
          }(n2 = e2.AddressType || (e2.AddressType = {})), e2.createAddressByPrivateKey = function(t3) {
            var e3 = (0, i.checkParams)({ privateKey: t3 }, [], [{ name: "privateKey", func: i.isHexString }]);
            if (e3)
              throw e3;
            var r3 = function(t4) {
              var e4;
              return { originAddress: u(e4 = t4 ? Buffer.from(t4, "hex") : s().privateKey), privateKey: e4 };
            }(t3), n3 = r3.originAddress, o2 = d(n3, c(n3, false)), h2 = a(r3.privateKey);
            return { originalAddress: n3.toString("hex"), publicKey: Buffer.from(h2).toString("hex"), privateKey: r3.privateKey.toString("hex"), address: o2 };
          }, e2.getAddressFromPublicKey = function(t3) {
            var e3 = (0, i.checkParams)({ publicKey: t3 }, ["publicKey"], [{ name: "publicKey", func: i.isHexString }]);
            if (e3)
              throw new Error(e3.message);
            var r3 = f(Buffer.from(t3, "hex"));
            return d(r3, c(r3, false));
          }, e2.getOriginalAddressFromAddress = function(t3) {
            var r3 = h(t3);
            if (r3 === n2.Illegal)
              throw o.addressIllegal;
            return function(t4, r4) {
              var i2 = t4.slice(e2.ADDR_PRE.length, e2.ADDR_PRE.length + 2 * e2.ADDR_SIZE);
              return r4 === n2.Account ? "".concat(i2, "00") : "".concat(i2, "01");
            }(t3, r3);
          }, e2.getAddressFromOriginalAddress = function(t3) {
            var r3 = (0, i.checkParams)({ originalAddress: t3 }, ["originalAddress"], [{ name: "originalAddress", func: function(t4) {
              return "string" == typeof t4 && /^[0-9a-fA-F]+$/.test(t4) && (t4.length === 2 * e2.ADDR_SIZE || t4.length === 2 * (e2.ADDR_SIZE + 1));
            } }]);
            if (r3)
              throw new Error(r3.message);
            var n3 = Number(t3.slice(-2));
            n3 = 0 !== n3 && 1 !== n3 ? 0 : n3;
            var o2 = !!Number(n3), s2 = Buffer.from(t3, "hex");
            return d(s2, c(s2, o2));
          }, e2.isValidAddress = h;
        }, 3099: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true }), e2.deriveKeyPairByIndex = e2.deriveKeyPairByPath = e2.getPath = e2.getMnemonicsFromEntropy = e2.createSeed = e2.getSeedFromMnemonics = e2.getEntropyFromMnemonics = e2.validateMnemonics = e2.createMnemonics = e2.ROOT_PATH = void 0;
          var n2 = r2(64624), i = r2(43812), o = r2(95506);
          function s(t3, e3) {
            void 0 === t3 && (t3 = 256), void 0 === e3 && (e3 = n2.wordlists.EN);
            var r3 = (0, o.checkParams)({ strength: t3, wordlist: e3 }, ["strength", "wordlist"]);
            if (r3)
              throw new Error(r3.message);
            return n2.generateMnemonic(t3, null, e3);
          }
          function a(t3, e3) {
            return void 0 === e3 && (e3 = n2.wordlists.EN), t3 && n2.validateMnemonic(t3, e3);
          }
          function h(t3, e3, r3) {
            void 0 === e3 && (e3 = ""), void 0 === r3 && (r3 = n2.wordlists.EN);
            var i2 = (0, o.checkParams)({ mnemonic: t3, wordlist: r3 }, ["mnemonic", "wordlist"], [{ name: "mnemonic", func: function(t4) {
              return a(t4, r3);
            } }]);
            if (i2)
              throw new Error(i2.message);
            var s2 = n2.mnemonicToSeedSync(t3, e3), h2 = s2.toString("hex");
            return { seed: s2, seedHex: h2 };
          }
          function f(t3) {
            return "".concat(e2.ROOT_PATH, "/").concat(t3, "'");
          }
          function u(t3, e3) {
            var r3 = i.derivePath(e3, t3).key, n3 = i.getPublicKey(r3), o2 = n3.privateKey, s2 = n3.publicKey;
            return { privateKey: Buffer.from(o2).toString("hex"), publicKey: Buffer.from(s2).toString("hex") };
          }
          e2.ROOT_PATH = "m/44'/666666'", e2.createMnemonics = s, e2.validateMnemonics = a, e2.getEntropyFromMnemonics = function(t3, e3) {
            void 0 === e3 && (e3 = n2.wordlists.EN);
            var r3 = (0, o.checkParams)({ mnemonic: t3, wordlist: e3 }, ["mnemonic", "wordlist"], [{ name: "mnemonic", func: function(t4) {
              return a(t4, e3);
            } }]);
            if (r3)
              throw new Error(r3.message);
            return n2.mnemonicToEntropy(t3, e3);
          }, e2.getSeedFromMnemonics = h, e2.createSeed = function(t3, e3, r3) {
            void 0 === t3 && (t3 = 256), void 0 === e3 && (e3 = ""), void 0 === r3 && (r3 = n2.wordlists.EN);
            var i2 = s(t3, r3), o2 = h(i2, e3, r3);
            return { mnemonic: i2, seed: o2.seed, seedHex: o2.seedHex };
          }, e2.getMnemonicsFromEntropy = function(t3, e3) {
            void 0 === e3 && (e3 = n2.wordlists.EN);
            var r3 = (0, o.checkParams)({ entropy: t3 }, ["entropy"]);
            if (r3)
              throw new Error(r3.message);
            return n2.entropyToMnemonic(t3, e3);
          }, e2.getPath = f, e2.deriveKeyPairByPath = u, e2.deriveKeyPairByIndex = function(t3, e3) {
            return u(t3, f(e3));
          };
        }, 44346: function(t2, e2, r2) {
          "use strict";
          var n2 = this && this.__assign || function() {
            return n2 = Object.assign || function(t3) {
              for (var e3, r3 = 1, n3 = arguments.length; r3 < n3; r3++)
                for (var i2 in e3 = arguments[r3])
                  Object.prototype.hasOwnProperty.call(e3, i2) && (t3[i2] = e3[i2]);
              return t3;
            }, n2.apply(this, arguments);
          };
          Object.defineProperty(e2, "__esModule", { value: true });
          var i = r2(64624), o = r2(95506), s = r2(3998), a = r2(3099), h = r2(35986);
          function f(t3) {
            var e3 = t3.mnemonics, r3 = t3.index, n3 = void 0 === r3 ? 0 : r3, o2 = t3.wordlist, s2 = void 0 === o2 ? i.wordlists.EN : o2, f2 = t3.passphrase, u = void 0 === f2 ? "" : f2, c = a.getSeedFromMnemonics(e3, u, s2).seedHex, d = a.deriveKeyPairByIndex(c, n3).privateKey;
            return h.createAddressByPrivateKey(d);
          }
          e2.default = n2(n2(n2({}, h), a), { deriveAddress: f, deriveAddressList: function(t3) {
            var e3 = t3.mnemonics, r3 = t3.startIndex, n3 = t3.endIndex, s2 = t3.wordlist, a2 = void 0 === s2 ? i.wordlists.EN : s2, h2 = t3.passphrase, u = void 0 === h2 ? "" : h2, c = (0, o.checkParams)({ startIndex: r3, endIndex: n3 }, ["startIndex", "endIndex"]);
            if (c)
              throw new Error(c.message);
            if (r3 >= n3)
              throw new Error("Illegal index");
            for (var d = [], l = r3; l <= n3; l++) {
              var p = f({ mnemonics: e3, index: l, wordlist: a2, passphrase: u });
              d.push(p);
            }
            return d;
          }, createWallet: function(t3, e3, r3) {
            void 0 === t3 && (t3 = 256), void 0 === e3 && (e3 = i.wordlists.EN), void 0 === r3 && (r3 = "");
            var n3 = a.createMnemonics(t3, e3);
            return new s.default(n3, e3, r3);
          }, getWallet: function(t3, e3, r3) {
            void 0 === e3 && (e3 = i.wordlists.EN), void 0 === r3 && (r3 = "");
            var n3 = (0, o.checkParams)({ mnemonics: t3, wordlist: e3 }, ["mnemonics", "wordlist"], [{ name: "mnemonics", func: function(t4) {
              return a.validateMnemonics(t4, e3);
            } }]);
            if (n3)
              throw new Error(n3.message);
            return new s.default(t3, e3, r3);
          } });
        }, 3998: (t2, e2, r2) => {
          "use strict";
          Object.defineProperty(e2, "__esModule", { value: true });
          var n2 = r2(64624), i = r2(8442), o = r2(95506), s = r2(3099), a = r2(35986), h = function() {
            function t3(t4, e3, r3) {
              if (void 0 === e3 && (e3 = n2.wordlists.EN), void 0 === r3 && (r3 = ""), !s.validateMnemonics(t4, e3))
                throw new Error("Illegal mnemonic");
              this.rootPath = s.ROOT_PATH, this.mnemonics = t4, this.wordlist = e3, this.passphrase = r3, this.entropy = s.getEntropyFromMnemonics(t4, e3);
              var i2 = s.getSeedFromMnemonics(t4, r3, e3), o2 = i2.seed, a2 = i2.seedHex;
              this.seed = o2, this.seedHex = a2, this.addressList = {};
            }
            return Object.defineProperty(t3.prototype, "id", { get: function() {
              var t4 = "";
              t4 = this.addressList[0] ? this.addressList[0].address : this.deriveAddress(0).address;
              var e3 = Buffer.from(t4), r3 = i.blake2b(e3, null, 32);
              return Buffer.from(r3).toString("hex");
            }, enumerable: false, configurable: true }), t3.prototype.getAddressList = function() {
              return this.addressList;
            }, t3.prototype.deriveAddress = function(t4) {
              var e3 = (0, o.checkParams)({ index: t4 }, ["index"], [{ name: "index", func: o.isNonNegativeInteger }]);
              if (e3)
                throw new Error(e3.message);
              if (this.addressList[t4])
                return this.addressList[t4];
              var r3 = s.getPath(t4), n3 = s.deriveKeyPairByPath(this.seedHex, r3), i2 = n3.privateKey, h2 = n3.publicKey, f = a.getAddressFromPublicKey(h2), u = { privateKey: i2, publicKey: h2, address: f, originalAddress: a.getOriginalAddressFromAddress(f), path: r3 };
              return this.addressList[t4] = u, u;
            }, t3.prototype.deriveAddressList = function(t4, e3) {
              var r3 = (0, o.checkParams)({ startIndex: t4, endIndex: e3 }, ["startIndex", "endIndex"], [{ name: "startIndex", func: o.isNonNegativeInteger }, { name: "endIndex", func: o.isNonNegativeInteger }]);
              if (r3)
                throw new Error(r3.message);
              if (t4 > e3)
                throw new Error("Illegal index");
              for (var n3 = [], i2 = t4; i2 <= e3; i2++) {
                var s2 = this.deriveAddress(i2);
                n3.push(s2);
              }
              return n3;
            }, t3;
          }();
          e2.default = h;
        }, 94927: (t2, e2, r2) => {
          function n2(t3) {
            try {
              if (!r2.g.localStorage)
                return false;
            } catch (t4) {
              return false;
            }
            var e3 = r2.g.localStorage[t3];
            return null != e3 && "true" === String(e3).toLowerCase();
          }
          t2.exports = function(t3, e3) {
            if (n2("noDeprecation"))
              return t3;
            var r3 = false;
            return function() {
              if (!r3) {
                if (n2("throwDeprecation"))
                  throw new Error(e3);
                n2("traceDeprecation") ? console.trace(e3) : console.warn(e3), r3 = true;
              }
              return t3.apply(this, arguments);
            };
          };
        }, 64903: () => {
        }, 75818: () => {
        }, 46601: () => {
        }, 89214: () => {
        }, 58966: () => {
        }, 22263: () => {
        }, 69386: () => {
        }, 31616: () => {
        }, 24654: () => {
        }, 24573: (t2) => {
          "use strict";
          t2.exports = JSON.parse('["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]');
        }, 44946: (t2) => {
          "use strict";
          t2.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
        }, 29799: (t2) => {
          "use strict";
          t2.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
        }, 18597: (t2) => {
          "use strict";
          t2.exports = { i8: "3.1.0" };
        }, 22562: (t2) => {
          "use strict";
          t2.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
        } }, e = {};
        function r(n2) {
          var i = e[n2];
          if (void 0 !== i)
            return i.exports;
          var o = e[n2] = { id: n2, loaded: false, exports: {} };
          return t[n2].call(o.exports, o, o.exports, r), o.loaded = true, o.exports;
        }
        r.g = function() {
          if ("object" == typeof globalThis)
            return globalThis;
          try {
            return this || new Function("return this")();
          } catch (t2) {
            if ("object" == typeof window)
              return window;
          }
        }(), r.nmd = (t2) => (t2.paths = [], t2.children || (t2.children = []), t2);
        var n = {};
        return (() => {
          "use strict";
          var t2 = n;
          Object.defineProperty(t2, "__esModule", { value: true }), t2.wallet = t2.ViteAPI = t2.accountBlock = t2.constant = t2.utils = t2.keystore = t2.error = t2.abi = void 0, r(26981), r(82702).polyfill();
          var e2 = r(90277), i = r(62989), o = r(40098), s = r(95506), a = r(19548), h = r(45086), f = r(71769), u = r(44346);
          t2.abi = e2, t2.error = i, t2.keystore = o, t2.utils = s, t2.constant = a, t2.accountBlock = h, t2.ViteAPI = f.default, t2.wallet = u.default;
        })(), n;
      })();
    });
  }
});

// src/utils/misc.ts
var isDarkMode = () => document.documentElement.classList.contains("dark");
var prefersDarkTheme = () => window.matchMedia("(prefers-color-scheme: dark)").matches;
var validateInputs = (inputRefs) => {
  let allRefsInputsAreValid = true;
  for (const ref of inputRefs) {
    const isValid = ref.current.isValid;
    if (!isValid) {
      allRefsInputsAreValid = false;
    }
  }
  return allRefsInputsAreValid;
};
var calculatePrice = (units, price, label = "$", decimals = 2) => {
  return `${label}${(+units * price).toFixed(decimals)}`;
};
var debounce = (fn, ms = 0) => {
  let timeoutId;
  return function(...args) {
    clearTimeout(timeoutId);
    timeoutId = setTimeout(() => fn.apply(this, args), ms);
  };
};
var tokenApiInfoCache = {};
var getTokenApiInfo = async (tokenIds) => {
  if (!tokenIds.length) {
    return [];
  }
  const res = await fetch("https://vitex.vite.net/api/v1/cryptocurrency/info/platform/query", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      platformSymbol: "VITE",
      tokenAddresses: Array.isArray(tokenIds) ? tokenIds : [tokenIds]
    })
  });
  const data = await res.json();
  if (data.msg === "ok" && data.code === 0) {
    data.data.forEach((info) => tokenApiInfoCache[info.tokenAddress] = info);
    return data.data;
  }
  return [];
};

// src/styles/theme.ts
if (!localStorage.theme) {
  localStorage.theme = "system";
}
if (localStorage.theme === "dark" || localStorage.theme === "system" && prefersDarkTheme) {
  document.documentElement.classList.add("dark");
} else {
  document.documentElement.classList.remove("dark");
}
window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
  if (localStorage.theme === "system") {
    if (e.matches) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  }
});

// src/utils/storage.ts
var setValue = (value) => {
  return new Promise((resolve) => {
    chrome.storage.local.set(value, () => resolve(void 0));
  });
};
var getValue = (keys) => {
  return new Promise((resolve) => {
    chrome.storage.local.get(keys, (items) => resolve(items));
  });
};
var removeKeys = (keys) => {
  return new Promise((resolve) => {
    chrome.storage.local.remove(keys, () => resolve(void 0));
  });
};

// src/i18n/en.ts
var en = {
  lang: "English",
  USD: "United States Dollar",
  AUD: "Australian Dollar",
  BTC: "Bitcoin",
  CAD: "Canadian Dollar",
  EUR: "Euro",
  HKD: "Hong Kong Dollar",
  INR: "Indian Rupee",
  IDR: "Indonesian Rupiah",
  XMR: "Monero",
  NZD: "New Zealand Dollar",
  PHP: "Philippine Peso",
  RUB: "Russian Ruble",
  SGD: "Singapore Dollar",
  history: "History",
  chooseAsset: "Choose Asset",
  connect: "Connect",
  wallet: "Wallet",
  from: "From",
  to: "To",
  scanTheQrCodeViaViteWalletApp: "Scan the QR code via Vite Wallet App",
  network: "Network",
  address: "Address",
  balance: "Balance",
  logout: "Logout",
  amount: "Amount",
  all: "All",
  next: "Next",
  connectWallet: "Connect Wallet",
  sendTransaction: "Send Transaction",
  success: "Success",
  illegalAmount: "Illegal amount",
  illegalAddress: "Illegal address",
  confirm: "Confirm",
  asset: "Asset",
  destination: "Destination",
  youWillReceive: "You will receive",
  theTransactionFeesAreSubjectToNetworkConditionsAndMayChange: "The transaction fees are subject to network conditions and may change.",
  reminder: "Reminder",
  iHaveReadAndAgreeToThe: "I have read and agree to the",
  termsOfUse: "Terms of Use",
  pleaseConfirmTransactionOnViteWalletApp: "Please confirm transaction on VITE Wallet App",
  close: "Close",
  cancel: "Cancel",
  transactionConfirmationStatus: "Transaction Confirmation Status",
  pending: "pending",
  confirmed: "Confirmed",
  successfullyCopied: "Successfully copied",
  bridge: "Bridge",
  bugBounty: "Bug Bounty",
  tutorial: "Tutorial",
  help: "Help",
  createANewWallet: "Create a new wallet",
  importAnExistingWallet: "Import an existing wallet",
  settings: "Settings",
  myTransactions: "My Transactions",
  networks: "Networks",
  send: "Send",
  receive: "Receive",
  quotaAvailable: "Quota Available",
  quotaLimit: "Quota Limit",
  editTokenList: "Edit Token List",
  contractCreation: "Contract creation",
  sent: "Sent",
  reissueToken: "Reissue token",
  received: "Received",
  unreceived: "Unreceived",
  failedResponse: "Failed response",
  contractRefund: "Contract refund",
  genesis: "Genesis",
  confirmTransaction: "Confirm Transaction",
  toAddress: "To Address",
  comment: "Comment",
  accounts: "Accounts",
  transaction: "Transaction",
  deriveAddress: "Derive Address",
  addNetwork: "Add Network",
  new: "New",
  contacts: "Contacts",
  addContact: "Add Contact",
  currencyChanged: "Currency Changed",
  explorerChanged: "Explorer Changed",
  currencyConversion: "Currency Conversion",
  changePassword: "Change Password",
  oldPassword: "Old Password",
  newPassword: "New Password",
  resetWallet: "Reset Wallet",
  lockWallet: "Lock Wallet",
  networkChanged: "Network changed",
  accountChanged: "Account changed",
  showSecrets: "Show Secrets",
  password: "Password",
  language: "Language",
  secrets: "Secrets",
  languageChanged: "Language Changed",
  mnemonicPhrase: "Mnemonic Phrase",
  unlock: "Unlock",
  incorrectPassword: "Incorrect password",
  invalidAddress: "Invalid address",
  invalidMnemonicPhrase: "Invalid mnemonic phrase",
  thisFieldCannotBeBlank: "This field cannot be blank",
  urlMustStartWithWsWssHttpOrHttps: "URL must start with ws://, wss://, http://, or https://",
  urlMustStartWithHttpOrHttps: "URL must start with http:// or https://",
  insufficientFunds: "Insufficient funds",
  youAreAboutToErase: "You are about to erase all settings and secrets from your wallet. If you don't have your mnemonic phrase and BIP-39 passphrase saved somewhere else, your funds will be lost forever.",
  whatsTheDifference: `What's the difference?`,
  loading: "Loading",
  retry: "Retry",
  error: "Error",
  noTransactionHistory: "No transaction history",
  yourWalletIsEmpty: "Your wallet is empty",
  voting: "Voting",
  quota: "Quota",
  networkName: "Network Name",
  rpcUrl: "RPC URL",
  blockExplorerUrl: "Block Explorer URL",
  quotaBeneficiary: "Quota Beneficiary",
  lockedAmount: "Locked Amount",
  createWallet: "Create Wallet",
  importWallet: "Import Wallet",
  account: "Account",
  _12Words: "12 words",
  _24Words: "24 words",
  transactionSent: "Transaction Sent!",
  doYouWantToConnectVitePassportToThisDomain: "Do you want to connect Vite Passport to this domain?",
  notAtThisTime: "Not at this time",
  no: "No",
  nothingFound: "Nothing Found",
  viewOnViteScan: "View on ViteScan",
  passwordChanged: "Password changed",
  newUnreceivedAccountBlock: "New unreceived account block",
  loadMore: "Load More",
  signAndSendBlock: "Sign and Send Block",
  params: "Params",
  data: "Data",
  difficulty: "Difficulty",
  fee: "Fee",
  hash: "Hash",
  height: "Height",
  nonce: "Nonce",
  previousHash: "PreviousHash",
  publicKey: "PublicKey",
  sendBlockHash: "SendBlockHash",
  signature: "Signature",
  test: "test",
  "": ""
};
var en_default = en;

// src/utils/constants.ts
var i18nDict = { en: en_default };
var defaultStorage = {
  language: "en",
  activeNetworkIndex: 0,
  networkList: [
    {
      name: "Mainnet",
      rpcUrl: "wss://node.vite.net/gvite/ws",
      explorerUrl: "https://vitescan.io"
    },
    {
      name: "Testnet",
      rpcUrl: "wss://buidl.vite.net/gvite/ws",
      explorerUrl: "https://test.vitescan.io"
    },
    {
      name: "Localnet",
      rpcUrl: "ws://localhost:23457"
    }
  ],
  currencyConversion: "USD",
  activeAccountIndex: 0,
  contacts: {},
  displayedTokenIds: ["tti_5649544520544f4b454e6e40"],
  connectedDomains: {}
};
var ExplorerURLs = {
  vitescan: {
    mainnet: {
      home: "https://vitescan.io/",
      address: "https://vitescan.io/address/",
      hash: "https://vitescan.io/tx/",
      token: "https://vitescan.io/token/"
    },
    testnet: {
      home: "https://test.vitescan.io/",
      address: "https://test.vitescan.io/address/",
      hash: "https://test.vitescan.io/tx/",
      token: "https://test.vitescan.io/token/"
    }
  },
  viteview: {
    mainnet: {
      home: "https://mainnet.viteview.xyz/#/",
      address: "https://mainnet.viteview.xyz/#/account/",
      hash: "https://mainnet.viteview.xyz/#/snapshot/",
      token: "https://mainnet.viteview.xyz/#/token/"
    },
    testnet: {
      home: "https://buidl.viteview.xyz/#/",
      address: "https://buidl.viteview.xyz/#/account/",
      hash: "https://buidl.viteview.xyz/#/snapshot/",
      token: "https://buidl.viteview.xyz/#/token/"
    }
  }
};
var currencyConversions = [
  "USD",
  "AUD",
  "BTC",
  "CAD",
  "EUR",
  "HKD",
  "INR",
  "IDR",
  "XMR",
  "NZD",
  "PHP",
  "RUB",
  "SGD"
];
var languages = {
  en: "English"
};
var defaultTokenList = [
  {
    symbol: "VITE",
    name: "VITE",
    tokenCode: "1171",
    platform: "VITE",
    tokenAddress: "tti_5649544520544f4b454e6e40",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "VITE",
        name: "ViteToken",
        tokenCode: "1564",
        platform: "ETH",
        tokenAddress: "0xadd5E881984783dD432F80381Fb52F45B53f3e70",
        standard: "ERC20",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png",
        decimal: 18,
        mappedTokenExtras: [
          {
            symbol: "VITE",
            name: null,
            tokenCode: "1588",
            platform: "BSC",
            tokenAddress: "0x2794dad4077602ed25a88d03781528d1637898b4",
            standard: "BEP20",
            url: "https://crosschain.vite.net/gateway/bsc",
            tokenIndex: null,
            icon: "https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png",
            decimal: 18,
            mappedTokenExtras: null
          }
        ]
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "BNB",
    name: "Binance Coin",
    tokenCode: "1595",
    platform: "VITE",
    tokenAddress: "tti_fb901364ef662c25cf43125c",
    standard: null,
    url: null,
    tokenIndex: 1,
    icon: "https://static.vite.net/token-profile-1257137467/icon/ac0b3141eb601e8c3ff78397bcc25672.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "BNB",
        name: null,
        tokenCode: "1600",
        platform: "BSC",
        tokenAddress: null,
        standard: "BEP20",
        url: "https://crosschain.vite.net/gateway/bsc",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/ac0b3141eb601e8c3ff78397bcc25672.png",
        decimal: 18,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/bsc"
    }
  },
  {
    symbol: "BTC",
    name: "Bitcoin",
    tokenCode: "1351",
    platform: "VITE",
    tokenAddress: "tti_b90c9baffffc9dae58d1f33f",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/7b04d1b14726fa3c20aa32daa946366f.png",
    decimal: 8,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "BTC",
        name: "Bitcoin",
        tokenCode: "3",
        platform: "BTC",
        tokenAddress: null,
        standard: "",
        url: "https://crosschain.vite.net/gateway/btc",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/7b04d1b14726fa3c20aa32daa946366f.png",
        decimal: 8,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/btc"
    }
  },
  {
    symbol: "BUSD",
    name: "Binance USD",
    tokenCode: "1435",
    platform: "VITE",
    tokenAddress: "tti_c8c9ad17bc7b45e38eb88a44",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/4d3c6cdb125ca4fad91c25b924d89952.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "BUSD",
        name: null,
        tokenCode: "1437",
        platform: "ETH",
        tokenAddress: "0x4Fabb145d64652a948d72533023f6E7A623C7C53",
        standard: "ERC20",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/4d3c6cdb125ca4fad91c25b924d89952.png",
        decimal: 18,
        mappedTokenExtras: [
          {
            symbol: "BUSD",
            name: null,
            tokenCode: "1591",
            platform: "BSC",
            tokenAddress: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
            standard: "BEP20",
            url: "https://crosschain.vite.net/gateway/bsc",
            tokenIndex: null,
            icon: "https://static.vite.net/token-profile-1257137467/icon/4d3c6cdb125ca4fad91c25b924d89952.png",
            decimal: 18,
            mappedTokenExtras: null
          }
        ]
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "DAI",
    name: "Dai",
    tokenCode: "1527",
    platform: "VITE",
    tokenAddress: "tti_c90c146c059b821527f40b98",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "DAI",
        name: null,
        tokenCode: "1533",
        platform: "ETH",
        tokenAddress: "0x6b175474e89094c44da98b954eedeac495271d0f",
        standard: "ERC20",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png",
        decimal: 18,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "EPIC",
    name: "Epic Cash",
    tokenCode: "1569",
    platform: "VITE",
    tokenAddress: "tti_f370fadb275bc2a1a839c753",
    standard: null,
    url: null,
    tokenIndex: 2,
    icon: "https://static.vite.net/crypto-info/tokens/epic/tti_f370fadb275bc2a1a839c753.png",
    decimal: 8,
    gatewayInfo: {
      name: "VGATE",
      icon: "https://static.vite.net/token-profile-1257137467/icon/eb74a50d9a17e5ba1c2e0c27c531efc4.png",
      policy: {
        en: "https://vgate.io/clause"
      },
      overview: {
        en: "As an operator of ViteX, VGATE is responsible for listing coins, deposit and withdrawal, cryptocurrency marketing and promoting and other services within VGATE's own marketing area.VGATE has complete capabilities as an operator, namely the capabilities of operating VGATE and its cryptos. In addition to helping users list cryptos, deposit and withdraw, and adjust transaction fees, VGATE can also mint coins, help other operators mint coins and run their gateways."
      },
      links: {
        website: ["https://vgate.io/"],
        email: ["vgateservice@gmail.com"]
      },
      support: "vgateservice@gmail.com",
      serviceSupport: "https://vgate.zendesk.com/hc/en-us/requests/new",
      isOfficial: true,
      level: 2,
      website: "https://vgate.io/",
      mappedToken: {
        symbol: "EPIC",
        name: null,
        tokenCode: "1461",
        platform: "EPIC",
        tokenAddress: null,
        standard: "",
        url: "https://gateway.vgate.io/gateway/epic",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/8a393174e7e5766c33dba77c2b770f9d.png",
        decimal: 8,
        mappedTokenExtras: null
      },
      url: "https://gateway.vgate.io/gateway/epic"
    }
  },
  {
    symbol: "ETH",
    name: "Ethereum",
    tokenCode: "1352",
    platform: "VITE",
    tokenAddress: "tti_687d8a93915393b219212c73",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/4260d31a557c9084bdaef65d15cec36d.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "ETH",
        name: "Ether",
        tokenCode: "1",
        platform: "ETH",
        tokenAddress: null,
        standard: "",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/4260d31a557c9084bdaef65d15cec36d.png",
        decimal: 18,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "NANO",
    name: "Nano",
    tokenCode: "1593",
    platform: "VITE",
    tokenAddress: "tti_29a2af20212b985e9d49e899",
    standard: null,
    url: null,
    tokenIndex: 1,
    icon: "https://static.vite.net/token-profile-1257137467/icon/tti_29a2af20212b985e9d49e899.png",
    decimal: 30,
    gatewayInfo: {
      name: "ViNo",
      icon: "https://static.vite.net/token-profile-1257137467/icon/tti_cdf7c68ea377f663ee11d234.png",
      policy: {
        en: "https://github.com/ViNo-community/ViNo-Custodial-Gateway/blob/main/TOS"
      },
      overview: {
        en: "ViNo Gateway runs cross-chain services for various cryptocurrencies on Vitex",
        zh: "ViNo Gateway runs cross-chain services for various cryptocurrencies on Vitex"
      },
      links: {
        website: ["https://twitter.com/nanogateorg"],
        github: ["https://github.com/ViNo-community"],
        twitter: ["https://twitter.com/nanogateorg"],
        whitepaper: ["https://forum.vite.net/topic/4745/introduction-of-vitex-operator-vino/"],
        discord: ["https://t.co/lm3GpFXzoZ?amp=1"],
        explorer: ["https://explorer.vite.net"],
        reddit: ["https://www.reddit.com/user/ViNo_Community"],
        email: ["nanocommunityoperator@gmail.com"]
      },
      support: "nanocommunityoperator@gmail.com",
      serviceSupport: "https://twitter.com/nanogateorg",
      isOfficial: false,
      level: 0,
      website: "https://twitter.com/nanogateorg",
      mappedToken: {
        symbol: "NANO",
        name: null,
        tokenCode: "1594",
        platform: "NANO",
        tokenAddress: null,
        standard: "",
        url: "https://patrola.me/gateways/nano",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/tti_29a2af20212b985e9d49e899.png",
        decimal: 30,
        mappedTokenExtras: null
      },
      url: "https://patrola.me/gateways/nano"
    }
  },
  {
    symbol: "UNI",
    name: "Uniswap",
    tokenCode: "1715",
    platform: "VITE",
    tokenAddress: "tti_34c5ed639f97d1e826451c92",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/crypto-info/tokens/UNI/tti_34c5ed639f97d1e826451c92.png",
    decimal: 18,
    gatewayInfo: {
      name: "XGate",
      icon: "https://static.vite.net/crypto-info/gateways/XGate/XGate.png",
      policy: {
        en: "https://github.com/ViNo-community/ViNo-Custodial-Gateway/blob/main/TOS"
      },
      overview: {
        en: "XGate runs cross-chain services for various cryptocurrencies on Vitex",
        zh: "XGate runs cross-chain services for various cryptocurrencies on Vitex"
      },
      links: {
        website: ["https://twitter.com/xgatevite"],
        github: ["https://github.com/ViNo-community"],
        twitter: ["https://twitter.com/xgatevite"],
        discord: ["https://t.co/lm3GpFXzoZ?amp=1"],
        explorer: ["https://explorer.vite.net"],
        email: ["xgatevite@gmail.com"]
      },
      support: "xgatevite@gmail.com",
      serviceSupport: "https://twitter.com/xgatevite",
      isOfficial: false,
      level: 0,
      website: "https://twitter.com/xgatevite",
      mappedToken: {
        symbol: "UNI",
        name: null,
        tokenCode: "1717",
        platform: "ETH",
        tokenAddress: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
        standard: "ERC20",
        url: "https://patrola.me/gateways/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/crypto-info/tokens/UNI/tti_34c5ed639f97d1e826451c92.png",
        decimal: 18,
        mappedTokenExtras: null
      },
      url: "https://patrola.me/gateways/eth"
    }
  },
  {
    symbol: "USDC",
    name: "USD Coin",
    tokenCode: "1528",
    platform: "VITE",
    tokenAddress: "tti_7fb89970f021269b6e101be1",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png",
    decimal: 6,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "USDC",
        name: "USD Coin",
        tokenCode: "267",
        platform: "ETH",
        tokenAddress: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        standard: "ERC20",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png",
        decimal: 6,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    tokenCode: "1353",
    platform: "VITE",
    tokenAddress: "tti_80f3751485e4e83456059473",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/c746e8a95dff8ce193c462554feb61bf.png",
    decimal: 6,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "USDT",
        name: "Tether USD",
        tokenCode: "286",
        platform: "ETH",
        tokenAddress: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        standard: "ERC20",
        url: "https://crosschain.vite.net/gateway/eth",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/c746e8a95dff8ce193c462554feb61bf.png",
        decimal: 6,
        mappedTokenExtras: [
          {
            symbol: "USDT",
            name: null,
            tokenCode: "1562",
            platform: "BSC",
            tokenAddress: "0x55d398326f99059ff775485246999027b3197955",
            standard: "BEP20",
            url: "https://crosschain.vite.net/gateway/bsc",
            tokenIndex: null,
            icon: "https://static.vite.net/token-profile-1257137467/icon/c746e8a95dff8ce193c462554feb61bf.png",
            decimal: 6,
            mappedTokenExtras: null
          }
        ]
      },
      url: "https://crosschain.vite.net/gateway/eth"
    }
  },
  {
    symbol: "VUILD",
    name: "Vite Builder DAO Token",
    tokenCode: "1611",
    platform: "VITE",
    tokenAddress: "tti_f1fdb1fce23ca4a2c760012c",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/tti_f1fdb1fce23ca4a2c760012c.png",
    decimal: 18,
    gatewayInfo: null
  },
  {
    symbol: "VX",
    name: "ViteX Coin",
    tokenCode: "1298",
    platform: "VITE",
    tokenAddress: "tti_564954455820434f494e69b5",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/da32251cdc6b4e88963523659d705b83.png",
    decimal: 18,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "VX",
        name: null,
        tokenCode: "1630",
        platform: "BSC",
        tokenAddress: "0xbbdac6ca30ba9189c7bf67a1f7160379f7e25835",
        standard: "BEP20",
        url: "https://crosschain.vite.net/gateway/bsc",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/da32251cdc6b4e88963523659d705b83.png",
        decimal: 18,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/bsc"
    }
  },
  {
    symbol: "XLM",
    name: "Stellar",
    tokenCode: "1637",
    platform: "VITE",
    tokenAddress: "tti_181e08c4fdb2876956245076",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/crypto-info/tokens/XLM/tti_181e08c4fdb2876956245076.png",
    decimal: 7,
    gatewayInfo: {
      name: "XGate",
      icon: "https://static.vite.net/crypto-info/gateways/XGate/XGate.png",
      policy: {
        en: "https://github.com/ViNo-community/ViNo-Custodial-Gateway/blob/main/TOS"
      },
      overview: {
        en: "XGate runs cross-chain services for various cryptocurrencies on Vitex",
        zh: "XGate runs cross-chain services for various cryptocurrencies on Vitex"
      },
      links: {
        website: ["https://twitter.com/xgatevite"],
        github: ["https://github.com/ViNo-community"],
        twitter: ["https://twitter.com/xgatevite"],
        discord: ["https://t.co/lm3GpFXzoZ?amp=1"],
        explorer: ["https://explorer.vite.net"],
        email: ["xgatevite@gmail.com"]
      },
      support: "xgatevite@gmail.com",
      serviceSupport: "https://twitter.com/xgatevite",
      isOfficial: false,
      level: 0,
      website: "https://twitter.com/xgatevite",
      mappedToken: {
        symbol: "XLM",
        name: null,
        tokenCode: "1639",
        platform: "XLM",
        tokenAddress: null,
        standard: "",
        url: "https://patrola.me/gateways/xlm",
        tokenIndex: null,
        icon: "https://static.vite.net/crypto-info/tokens/XLM/tti_181e08c4fdb2876956245076.png",
        decimal: 7,
        mappedTokenExtras: null
      },
      url: "https://patrola.me/gateways/xlm"
    }
  },
  {
    symbol: "XMR",
    name: "Monero",
    tokenCode: "1488",
    platform: "VITE",
    tokenAddress: "tti_e5750d3c5b3bb5a31b8ba637",
    standard: null,
    url: null,
    tokenIndex: 0,
    icon: "https://static.vite.net/token-profile-1257137467/icon/853604c1c1a6fdae4fa463c200a98c85.png",
    decimal: 12,
    gatewayInfo: {
      name: "Vite Gateway",
      icon: null,
      policy: {
        en: "https://x.vite.net/viteLabsGatePrivacy.html"
      },
      overview: {
        en: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)",
        zh: "Vite Gateway runs cross-chain services for four coins: BTC, ETH, USDT(ERC20)"
      },
      links: {
        website: ["https://vite.org"],
        whitepaper: ["https://github.com/vitelabs/whitepaper/"],
        explorer: ["https://explorer.vite.net"],
        email: ["gateway@vite.org"]
      },
      support: "gateway@vite.org",
      serviceSupport: "https://vitex.zendesk.com/hc/en-001/requests/new",
      isOfficial: false,
      level: 0,
      website: "https://vite.org",
      mappedToken: {
        symbol: "XMR",
        name: null,
        tokenCode: "1489",
        platform: "XMR",
        tokenAddress: null,
        standard: "",
        url: "https://crosschain.vite.net/gateway/monero",
        tokenIndex: null,
        icon: "https://static.vite.net/token-profile-1257137467/icon/853604c1c1a6fdae4fa463c200a98c85.png",
        decimal: 12,
        mappedTokenExtras: null
      },
      url: "https://crosschain.vite.net/gateway/monero"
    }
  }
];

// src/main.tsx
var import_react = __toESM(require_react());
var import_client = __toESM(require_client());
var import_vitejs = __toESM(require_index_web());
var root = (0, import_client.createRoot)(document.getElementById("root"));
console.log("2342423423424");
var chromePort = chrome.runtime.connect();
var listen = async (message) => {
  if (message.type === "opening") {
    chromePort.onMessage.removeListener(listen);
    const storage = await getValue(null);
    Object.keys(defaultStorage).forEach((key) => {
      if (storage[key] === void 0) {
        storage[key] = defaultStorage[key];
        setValue({ [key]: defaultStorage[key] });
      }
    });
    const state = {
      ...storage,
      chromePort,
      i18n: i18nDict[storage.language],
      activeNetwork: storage.networkList[storage.activeNetworkIndex],
      postPortMessage: (message2) => {
        chromePort.postMessage(message2);
      },
      triggerEvent: (event) => {
        chrome.tabs.query({ currentWindow: true, active: true }, ([tab]) => {
          chrome.tabs.sendMessage(tab.id, event);
        });
      }
    };
    if (message.secrets) {
      state.activeAccount = import_vitejs.wallet.deriveAddress({
        ...message.secrets,
        index: state.activeAccountIndex
      });
      state.secrets = message.secrets;
      state.postPortMessage({ type: "reopen" });
    }
    console.log("test");
    root.render(/* @__PURE__ */ import_react.default.createElement("p", {
      className: "b"
    }, "test"));
  }
};
chromePort.onMessage.addListener(listen);
/*! For license information please see vitejs.web.js.LICENSE.txt */
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
//# sourceMappingURL=main.js.map
